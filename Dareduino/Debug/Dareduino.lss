
Dareduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800100  00000d34  00000dc8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000d34  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000018  00800166  00800166  00000e2e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000e2e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000e8c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000e0  00000000  00000000  00000ecc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000f0e  00000000  00000000  00000fac  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000a0f  00000000  00000000  00001eba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006bc  00000000  00000000  000028c9  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001fc  00000000  00000000  00002f88  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000502  00000000  00000000  00003184  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000030a  00000000  00000000  00003686  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b0  00000000  00000000  00003990  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 76 00 	jmp	0xec	; 0xec <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 d6 00 	jmp	0x1ac	; 0x1ac <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e4 e3       	ldi	r30, 0x34	; 52
  7c:	fd e0       	ldi	r31, 0x0D	; 13
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 36       	cpi	r26, 0x66	; 102
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e6       	ldi	r26, 0x66	; 102
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ae 37       	cpi	r26, 0x7E	; 126
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 9e 00 	call	0x13c	; 0x13c <main>
  9e:	0c 94 98 06 	jmp	0xd30	; 0xd30 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <function_1>:

void function_1 ( void )
{
	while (1)
	{	
		printf ( "Function 1\n" );
  a6:	84 e1       	ldi	r24, 0x14	; 20
  a8:	91 e0       	ldi	r25, 0x01	; 1
  aa:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <puts>
  ae:	fb cf       	rjmp	.-10     	; 0xa6 <function_1>

000000b0 <function_2>:

void function_2 ( void )
{
	while (1)
	{	
		printf ( "Function 2\n" );
  b0:	8f e1       	ldi	r24, 0x1F	; 31
  b2:	91 e0       	ldi	r25, 0x01	; 1
  b4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <puts>
  b8:	fb cf       	rjmp	.-10     	; 0xb0 <function_2>

000000ba <function_3>:

void function_3 ( void )
{
	while (1)
	{
		printf ( "Function 3\n" );
  ba:	8a e2       	ldi	r24, 0x2A	; 42
  bc:	91 e0       	ldi	r25, 0x01	; 1
  be:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <puts>
  c2:	fb cf       	rjmp	.-10     	; 0xba <function_3>

000000c4 <function_4>:
void function_4 ( void )
{
	
	while (1)
	{
		printf ( "Function 4" );
  c4:	c5 e3       	ldi	r28, 0x35	; 53
  c6:	d1 e0       	ldi	r29, 0x01	; 1
  c8:	df 93       	push	r29
  ca:	cf 93       	push	r28
  cc:	0e 94 c6 03 	call	0x78c	; 0x78c <printf>
  d0:	0f 90       	pop	r0
  d2:	0f 90       	pop	r0
  d4:	f9 cf       	rjmp	.-14     	; 0xc8 <function_4+0x4>

000000d6 <int0_init>:
void function_3(void);
void function_4(void);

void int0_init (void)
{
	DDRD &= ~( 1 << DDD2 ); //PD2 is an input
  d6:	52 98       	cbi	0x0a, 2	; 10
	PORTD |= ( 1 << PORTD2 ); //turn on pullup
  d8:	5a 9a       	sbi	0x0b, 2	; 11

	EICRA |= ( 0 << ISC00 );
  da:	e9 e6       	ldi	r30, 0x69	; 105
  dc:	f0 e0       	ldi	r31, 0x00	; 0
  de:	80 81       	ld	r24, Z
  e0:	80 83       	st	Z, r24
	EICRA |= ( 1 << ISC01 );
  e2:	80 81       	ld	r24, Z
  e4:	82 60       	ori	r24, 0x02	; 2
  e6:	80 83       	st	Z, r24

	EIMSK |= ( 1 << INT0 ); //turn on INT0
  e8:	e8 9a       	sbi	0x1d, 0	; 29
  ea:	08 95       	ret

000000ec <__vector_1>:
}

void INT0_vect ( void ) __attribute__ ( ( signal ) );

void INT0_vect ( void )
{
  ec:	1f 92       	push	r1
  ee:	0f 92       	push	r0
  f0:	0f b6       	in	r0, 0x3f	; 63
  f2:	0f 92       	push	r0
  f4:	11 24       	eor	r1, r1
  f6:	2f 93       	push	r18
  f8:	3f 93       	push	r19
  fa:	4f 93       	push	r20
  fc:	5f 93       	push	r21
  fe:	6f 93       	push	r22
 100:	7f 93       	push	r23
 102:	8f 93       	push	r24
 104:	9f 93       	push	r25
 106:	af 93       	push	r26
 108:	bf 93       	push	r27
 10a:	ef 93       	push	r30
 10c:	ff 93       	push	r31
	cli ();
 10e:	f8 94       	cli
	printf ("Interrupt triggered\n");
 110:	80 e4       	ldi	r24, 0x40	; 64
 112:	91 e0       	ldi	r25, 0x01	; 1
 114:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <puts>
	sei ();
 118:	78 94       	sei
}
 11a:	ff 91       	pop	r31
 11c:	ef 91       	pop	r30
 11e:	bf 91       	pop	r27
 120:	af 91       	pop	r26
 122:	9f 91       	pop	r25
 124:	8f 91       	pop	r24
 126:	7f 91       	pop	r23
 128:	6f 91       	pop	r22
 12a:	5f 91       	pop	r21
 12c:	4f 91       	pop	r20
 12e:	3f 91       	pop	r19
 130:	2f 91       	pop	r18
 132:	0f 90       	pop	r0
 134:	0f be       	out	0x3f, r0	; 63
 136:	0f 90       	pop	r0
 138:	1f 90       	pop	r1
 13a:	18 95       	reti

0000013c <main>:

int main ( void )
{
	init_print ();
 13c:	0e 94 54 02 	call	0x4a8	; 0x4a8 <init_print>
	int0_init ();
 140:	0e 94 6b 00 	call	0xd6	; 0xd6 <int0_init>
	
	OSinit();
 144:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <OSinit>
	
	createTask(&function_1, 1, 200);
 148:	48 ec       	ldi	r20, 0xC8	; 200
 14a:	50 e0       	ldi	r21, 0x00	; 0
 14c:	61 e0       	ldi	r22, 0x01	; 1
 14e:	83 e5       	ldi	r24, 0x53	; 83
 150:	90 e0       	ldi	r25, 0x00	; 0
 152:	0e 94 9b 01 	call	0x336	; 0x336 <createTask>
	createTask(&function_2, 2, 200);
 156:	48 ec       	ldi	r20, 0xC8	; 200
 158:	50 e0       	ldi	r21, 0x00	; 0
 15a:	62 e0       	ldi	r22, 0x02	; 2
 15c:	88 e5       	ldi	r24, 0x58	; 88
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	0e 94 9b 01 	call	0x336	; 0x336 <createTask>
	createTask(&function_3, 3, 200);
 164:	48 ec       	ldi	r20, 0xC8	; 200
 166:	50 e0       	ldi	r21, 0x00	; 0
 168:	63 e0       	ldi	r22, 0x03	; 3
 16a:	8d e5       	ldi	r24, 0x5D	; 93
 16c:	90 e0       	ldi	r25, 0x00	; 0
 16e:	0e 94 9b 01 	call	0x336	; 0x336 <createTask>
	createTask(&function_4, 4, 50);
 172:	42 e3       	ldi	r20, 0x32	; 50
 174:	50 e0       	ldi	r21, 0x00	; 0
 176:	64 e0       	ldi	r22, 0x04	; 4
 178:	82 e6       	ldi	r24, 0x62	; 98
 17a:	90 e0       	ldi	r25, 0x00	; 0
 17c:	0e 94 9b 01 	call	0x336	; 0x336 <createTask>

	OSlaunch();
 180:	0e 94 8f 01 	call	0x31e	; 0x31e <OSlaunch>
	
	return 0;
}
 184:	80 e0       	ldi	r24, 0x00	; 0
 186:	90 e0       	ldi	r25, 0x00	; 0
 188:	08 95       	ret

0000018a <timerInit>:

void TIMER1_COMPA_vect (void) __attribute__ ((signal,naked));

void timerInit(void) 
{
    TCCR1B |= (1<<WGM12) | (1<<CS12);
 18a:	e1 e8       	ldi	r30, 0x81	; 129
 18c:	f0 e0       	ldi	r31, 0x00	; 0
 18e:	80 81       	ld	r24, Z
 190:	8c 60       	ori	r24, 0x0C	; 12
 192:	80 83       	st	Z, r24
    TIMSK1 |= ( 1 << OCIE1A );
 194:	ef e6       	ldi	r30, 0x6F	; 111
 196:	f0 e0       	ldi	r31, 0x00	; 0
 198:	80 81       	ld	r24, Z
 19a:	82 60       	ori	r24, 0x02	; 2
 19c:	80 83       	st	Z, r24
	OCR1A = 61500;   
 19e:	8c e3       	ldi	r24, 0x3C	; 60
 1a0:	90 ef       	ldi	r25, 0xF0	; 240
 1a2:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 1a6:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 1aa:	08 95       	ret

000001ac <__vector_11>:
}

void TIMER1_COMPA_vect ( void )
{
  saveContext();
 1ac:	0f 92       	push	r0
 1ae:	0f b6       	in	r0, 0x3f	; 63
 1b0:	f8 94       	cli
 1b2:	0f 92       	push	r0
 1b4:	1f 92       	push	r1
 1b6:	2f 92       	push	r2
 1b8:	3f 92       	push	r3
 1ba:	4f 92       	push	r4
 1bc:	5f 92       	push	r5
 1be:	6f 92       	push	r6
 1c0:	7f 92       	push	r7
 1c2:	8f 92       	push	r8
 1c4:	9f 92       	push	r9
 1c6:	af 92       	push	r10
 1c8:	bf 92       	push	r11
 1ca:	cf 92       	push	r12
 1cc:	df 92       	push	r13
 1ce:	ef 92       	push	r14
 1d0:	ff 92       	push	r15
 1d2:	0f 93       	push	r16
 1d4:	1f 93       	push	r17
 1d6:	2f 93       	push	r18
 1d8:	3f 93       	push	r19
 1da:	4f 93       	push	r20
 1dc:	5f 93       	push	r21
 1de:	6f 93       	push	r22
 1e0:	7f 93       	push	r23
 1e2:	8f 93       	push	r24
 1e4:	9f 93       	push	r25
 1e6:	af 93       	push	r26
 1e8:	bf 93       	push	r27
 1ea:	cf 93       	push	r28
 1ec:	df 93       	push	r29
 1ee:	ef 93       	push	r30
 1f0:	ff 93       	push	r31
 1f2:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <__data_end>
 1f6:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <__data_end+0x1>
 1fa:	0d b6       	in	r0, 0x3d	; 61
 1fc:	0d 92       	st	X+, r0
 1fe:	0e b6       	in	r0, 0x3e	; 62
 200:	0d 92       	st	X+, r0
  currSp = &(mainSp);
 202:	82 e7       	ldi	r24, 0x72	; 114
 204:	91 e0       	ldi	r25, 0x01	; 1
 206:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
 20a:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
  loadStackPointer();
 20e:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <__data_end>
 212:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <__data_end+0x1>
 216:	cd 91       	ld	r28, X+
 218:	cd bf       	out	0x3d, r28	; 61
 21a:	dd 91       	ld	r29, X+
 21c:	de bf       	out	0x3e, r29	; 62
  if(runPt->status == HEAD)	
 21e:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <runPt>
 222:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <runPt+0x1>
 226:	82 85       	ldd	r24, Z+10	; 0x0a
 228:	83 30       	cpi	r24, 0x03	; 3
 22a:	39 f4       	brne	.+14     	; 0x23a <__vector_11+0x8e>
  {
    runPt = runPt->next;
 22c:	86 81       	ldd	r24, Z+6	; 0x06
 22e:	97 81       	ldd	r25, Z+7	; 0x07
 230:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <runPt+0x1>
 234:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <runPt>
 238:	13 c0       	rjmp	.+38     	; 0x260 <__vector_11+0xb4>
  }
  else if(runPt->next == NULL)
 23a:	86 81       	ldd	r24, Z+6	; 0x06
 23c:	97 81       	ldd	r25, Z+7	; 0x07
 23e:	00 97       	sbiw	r24, 0x00	; 0
 240:	59 f4       	brne	.+22     	; 0x258 <__vector_11+0xac>
  {
    runPt = head->next;  
 242:	e0 91 6a 01 	lds	r30, 0x016A	; 0x80016a <head>
 246:	f0 91 6b 01 	lds	r31, 0x016B	; 0x80016b <head+0x1>
 24a:	86 81       	ldd	r24, Z+6	; 0x06
 24c:	97 81       	ldd	r25, Z+7	; 0x07
 24e:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <runPt+0x1>
 252:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <runPt>
 256:	04 c0       	rjmp	.+8      	; 0x260 <__vector_11+0xb4>
  }
  else 
  {
	  runPt = runPt->next;	  
 258:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <runPt+0x1>
 25c:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <runPt>
  }
  
  currSp = &(runPt->sP);
 260:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <runPt>
 264:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <runPt+0x1>
 268:	cf 01       	movw	r24, r30
 26a:	02 96       	adiw	r24, 0x02	; 2
 26c:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
 270:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
  loadStackPointer();
 274:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <__data_end>
 278:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <__data_end+0x1>
 27c:	cd 91       	ld	r28, X+
 27e:	cd bf       	out	0x3d, r28	; 61
 280:	dd 91       	ld	r29, X+
 282:	de bf       	out	0x3e, r29	; 62
		  
  if(runPt->neverRun == TRUE)
 284:	85 81       	ldd	r24, Z+5	; 0x05
 286:	81 30       	cpi	r24, 0x01	; 1
 288:	59 f4       	brne	.+22     	; 0x2a0 <__vector_11+0xf4>
  {
	sei();
 28a:	78 94       	sei
	runPt->neverRun = FALSE;
 28c:	e0 91 68 01 	lds	r30, 0x0168	; 0x800168 <runPt>
 290:	f0 91 69 01 	lds	r31, 0x0169	; 0x800169 <runPt+0x1>
 294:	15 82       	std	Z+5, r1	; 0x05
	runPt->fnPtr();
 296:	01 90       	ld	r0, Z+
 298:	f0 81       	ld	r31, Z
 29a:	e0 2d       	mov	r30, r0
 29c:	09 95       	icall
 29e:	2b c0       	rjmp	.+86     	; 0x2f6 <OSinit>
  } 
  else 
  {	  
	restoreContext();
 2a0:	a0 91 66 01 	lds	r26, 0x0166	; 0x800166 <__data_end>
 2a4:	b0 91 67 01 	lds	r27, 0x0167	; 0x800167 <__data_end+0x1>
 2a8:	cd 91       	ld	r28, X+
 2aa:	cd bf       	out	0x3d, r28	; 61
 2ac:	dd 91       	ld	r29, X+
 2ae:	de bf       	out	0x3e, r29	; 62
 2b0:	ff 91       	pop	r31
 2b2:	ef 91       	pop	r30
 2b4:	df 91       	pop	r29
 2b6:	cf 91       	pop	r28
 2b8:	bf 91       	pop	r27
 2ba:	af 91       	pop	r26
 2bc:	9f 91       	pop	r25
 2be:	8f 91       	pop	r24
 2c0:	7f 91       	pop	r23
 2c2:	6f 91       	pop	r22
 2c4:	5f 91       	pop	r21
 2c6:	4f 91       	pop	r20
 2c8:	3f 91       	pop	r19
 2ca:	2f 91       	pop	r18
 2cc:	1f 91       	pop	r17
 2ce:	0f 91       	pop	r16
 2d0:	ff 90       	pop	r15
 2d2:	ef 90       	pop	r14
 2d4:	df 90       	pop	r13
 2d6:	cf 90       	pop	r12
 2d8:	bf 90       	pop	r11
 2da:	af 90       	pop	r10
 2dc:	9f 90       	pop	r9
 2de:	8f 90       	pop	r8
 2e0:	7f 90       	pop	r7
 2e2:	6f 90       	pop	r6
 2e4:	5f 90       	pop	r5
 2e6:	4f 90       	pop	r4
 2e8:	3f 90       	pop	r3
 2ea:	2f 90       	pop	r2
 2ec:	1f 90       	pop	r1
 2ee:	0f 90       	pop	r0
 2f0:	0f be       	out	0x3f, r0	; 63
 2f2:	0f 90       	pop	r0
	asm volatile ("reti");			  
 2f4:	18 95       	reti

000002f6 <OSinit>:
  }
}

void OSinit(void)
{
	cli();
 2f6:	f8 94       	cli
	timerInit();
 2f8:	0e 94 c5 00 	call	0x18a	; 0x18a <timerInit>
	head->next = NULL;
 2fc:	e0 91 6a 01 	lds	r30, 0x016A	; 0x80016a <head>
 300:	f0 91 6b 01 	lds	r31, 0x016B	; 0x80016b <head+0x1>
 304:	17 82       	std	Z+7, r1	; 0x07
 306:	16 82       	std	Z+6, r1	; 0x06
	head->status = HEAD;
 308:	83 e0       	ldi	r24, 0x03	; 3
 30a:	82 87       	std	Z+10, r24	; 0x0a
	runPt = head;
 30c:	f0 93 69 01 	sts	0x0169, r31	; 0x800169 <runPt+0x1>
 310:	e0 93 68 01 	sts	0x0168, r30	; 0x800168 <runPt>
	stackUsed = 0;
 314:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <stackUsed+0x1>
 318:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <stackUsed>
 31c:	08 95       	ret

0000031e <OSlaunch>:
}

void OSlaunch(void)
{
  currSp = &mainSp;
 31e:	82 e7       	ldi	r24, 0x72	; 114
 320:	91 e0       	ldi	r25, 0x01	; 1
 322:	90 93 67 01 	sts	0x0167, r25	; 0x800167 <__data_end+0x1>
 326:	80 93 66 01 	sts	0x0166, r24	; 0x800166 <__data_end>
  sei();
 32a:	78 94       	sei
  while(1)
  {
	  printf("Scheduler started\n");
 32c:	84 e5       	ldi	r24, 0x54	; 84
 32e:	91 e0       	ldi	r25, 0x01	; 1
 330:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <puts>
 334:	fb cf       	rjmp	.-10     	; 0x32c <OSlaunch+0xe>

00000336 <createTask>:
  }
}

void createTask(void(*fPtr)(void), uint8_t priority, uint16_t stack_size)
{ 
 336:	ef 92       	push	r14
 338:	ff 92       	push	r15
 33a:	1f 93       	push	r17
 33c:	cf 93       	push	r28
 33e:	df 93       	push	r29
 340:	7c 01       	movw	r14, r24
 342:	16 2f       	mov	r17, r22
 344:	ea 01       	movw	r28, r20
  newTask = (taskTCB *)malloc(sizeof(taskTCB));
 346:	8b e0       	ldi	r24, 0x0B	; 11
 348:	90 e0       	ldi	r25, 0x00	; 0
 34a:	0e 94 69 02 	call	0x4d2	; 0x4d2 <malloc>
 34e:	fc 01       	movw	r30, r24
 350:	90 93 6d 01 	sts	0x016D, r25	; 0x80016d <newTask+0x1>
 354:	80 93 6c 01 	sts	0x016C, r24	; 0x80016c <newTask>
  newTask->fnPtr = fPtr;
 358:	f1 82       	std	Z+1, r15	; 0x01
 35a:	e0 82       	st	Z, r14
  newTask->priority = priority;
 35c:	14 83       	std	Z+4, r17	; 0x04
  newTask->neverRun = TRUE;
 35e:	81 e0       	ldi	r24, 0x01	; 1
 360:	85 83       	std	Z+5, r24	; 0x05
  newTask->status = RUN;
 362:	12 86       	std	Z+10, r1	; 0x0a
  newTask->sP = USER_STACK_SPACE - stackUsed;
 364:	20 91 70 01 	lds	r18, 0x0170	; 0x800170 <stackUsed>
 368:	30 91 71 01 	lds	r19, 0x0171	; 0x800171 <stackUsed+0x1>
 36c:	8b e9       	ldi	r24, 0x9B	; 155
 36e:	98 e0       	ldi	r25, 0x08	; 8
 370:	82 1b       	sub	r24, r18
 372:	93 0b       	sbc	r25, r19
 374:	93 83       	std	Z+3, r25	; 0x03
 376:	82 83       	std	Z+2, r24	; 0x02
  stackUsed += stack_size;
 378:	c2 0f       	add	r28, r18
 37a:	d3 1f       	adc	r29, r19
 37c:	d0 93 71 01 	sts	0x0171, r29	; 0x800171 <stackUsed+0x1>
 380:	c0 93 70 01 	sts	0x0170, r28	; 0x800170 <stackUsed>
  newTask->next = head->next;
 384:	a0 91 6a 01 	lds	r26, 0x016A	; 0x80016a <head>
 388:	b0 91 6b 01 	lds	r27, 0x016B	; 0x80016b <head+0x1>
 38c:	16 96       	adiw	r26, 0x06	; 6
 38e:	8d 91       	ld	r24, X+
 390:	9c 91       	ld	r25, X
 392:	17 97       	sbiw	r26, 0x07	; 7
 394:	97 83       	std	Z+7, r25	; 0x07
 396:	86 83       	std	Z+6, r24	; 0x06
  head->next = newTask;
 398:	17 96       	adiw	r26, 0x07	; 7
 39a:	fc 93       	st	X, r31
 39c:	ee 93       	st	-X, r30
 39e:	16 97       	sbiw	r26, 0x06	; 6
}
 3a0:	df 91       	pop	r29
 3a2:	cf 91       	pop	r28
 3a4:	1f 91       	pop	r17
 3a6:	ff 90       	pop	r15
 3a8:	ef 90       	pop	r14
 3aa:	08 95       	ret

000003ac <uart_putch>:
	while ( UCSR0A & (1<<RXC0) )
	dummy =  UDR0;
}

int uart_putch ( char ch, FILE *stream )
{
 3ac:	cf 93       	push	r28
 3ae:	c8 2f       	mov	r28, r24
	if ( ch == '\n' )
 3b0:	8a 30       	cpi	r24, 0x0A	; 10
 3b2:	19 f4       	brne	.+6      	; 0x3ba <uart_putch+0xe>
	uart_putch ( '\r', stream );
 3b4:	8d e0       	ldi	r24, 0x0D	; 13
 3b6:	0e 94 d6 01 	call	0x3ac	; 0x3ac <uart_putch>
	while (!(UCSR0A & (1<<UDRE0)));
 3ba:	e0 ec       	ldi	r30, 0xC0	; 192
 3bc:	f0 e0       	ldi	r31, 0x00	; 0
 3be:	80 81       	ld	r24, Z
 3c0:	85 ff       	sbrs	r24, 5
 3c2:	fd cf       	rjmp	.-6      	; 0x3be <uart_putch+0x12>
	UDR0=ch;
 3c4:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 3c8:	80 e0       	ldi	r24, 0x00	; 0
 3ca:	90 e0       	ldi	r25, 0x00	; 0
 3cc:	cf 91       	pop	r28
 3ce:	08 95       	ret

000003d0 <uart_getch>:

int uart_getch ( FILE *stream )
{
	unsigned char ch = '\0';
	while ( !(UCSR0A & (1<<RXC0)));
 3d0:	e0 ec       	ldi	r30, 0xC0	; 192
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	80 81       	ld	r24, Z
 3d6:	88 23       	and	r24, r24
 3d8:	ec f7       	brge	.-6      	; 0x3d4 <uart_getch+0x4>
	ch = UDR0;
 3da:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>

	return ch;
}
 3de:	90 e0       	ldi	r25, 0x00	; 0
 3e0:	08 95       	ret

000003e2 <uart_init>:

FILE uart_str = FDEV_SETUP_STREAM ( uart_putch, uart_getch, _FDEV_SETUP_RW );

void uart_init ( void )
{
	UBRR0H = (((F_CPU/BAUD)/16)-1)>>8;
 3e2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (((F_CPU/BAUD)/16)-1);
 3e6:	89 e1       	ldi	r24, 0x19	; 25
 3e8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 3ec:	88 e1       	ldi	r24, 0x18	; 24
 3ee:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
 3f2:	86 e0       	ldi	r24, 0x06	; 6
 3f4:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 3f8:	08 95       	ret

000003fa <ansi_clear_screen>:
}

void ansi_clear_screen ( void )
{
 3fa:	cf 93       	push	r28
 3fc:	df 93       	push	r29
	putchar(27);
 3fe:	c8 e7       	ldi	r28, 0x78	; 120
 400:	d1 e0       	ldi	r29, 0x01	; 1
 402:	6a 81       	ldd	r22, Y+2	; 0x02
 404:	7b 81       	ldd	r23, Y+3	; 0x03
 406:	8b e1       	ldi	r24, 0x1B	; 27
 408:	90 e0       	ldi	r25, 0x00	; 0
 40a:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('[');
 40e:	6a 81       	ldd	r22, Y+2	; 0x02
 410:	7b 81       	ldd	r23, Y+3	; 0x03
 412:	8b e5       	ldi	r24, 0x5B	; 91
 414:	90 e0       	ldi	r25, 0x00	; 0
 416:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('H');
 41a:	6a 81       	ldd	r22, Y+2	; 0x02
 41c:	7b 81       	ldd	r23, Y+3	; 0x03
 41e:	88 e4       	ldi	r24, 0x48	; 72
 420:	90 e0       	ldi	r25, 0x00	; 0
 422:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar(27);
 426:	6a 81       	ldd	r22, Y+2	; 0x02
 428:	7b 81       	ldd	r23, Y+3	; 0x03
 42a:	8b e1       	ldi	r24, 0x1B	; 27
 42c:	90 e0       	ldi	r25, 0x00	; 0
 42e:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('[');
 432:	6a 81       	ldd	r22, Y+2	; 0x02
 434:	7b 81       	ldd	r23, Y+3	; 0x03
 436:	8b e5       	ldi	r24, 0x5B	; 91
 438:	90 e0       	ldi	r25, 0x00	; 0
 43a:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('J');
 43e:	6a 81       	ldd	r22, Y+2	; 0x02
 440:	7b 81       	ldd	r23, Y+3	; 0x03
 442:	8a e4       	ldi	r24, 0x4A	; 74
 444:	90 e0       	ldi	r25, 0x00	; 0
 446:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
}
 44a:	df 91       	pop	r29
 44c:	cf 91       	pop	r28
 44e:	08 95       	ret

00000450 <ansi_me>:

void ansi_me(void)
{
 450:	cf 93       	push	r28
 452:	df 93       	push	r29
	putchar(27);
 454:	c8 e7       	ldi	r28, 0x78	; 120
 456:	d1 e0       	ldi	r29, 0x01	; 1
 458:	6a 81       	ldd	r22, Y+2	; 0x02
 45a:	7b 81       	ldd	r23, Y+3	; 0x03
 45c:	8b e1       	ldi	r24, 0x1B	; 27
 45e:	90 e0       	ldi	r25, 0x00	; 0
 460:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('[');
 464:	6a 81       	ldd	r22, Y+2	; 0x02
 466:	7b 81       	ldd	r23, Y+3	; 0x03
 468:	8b e5       	ldi	r24, 0x5B	; 91
 46a:	90 e0       	ldi	r25, 0x00	; 0
 46c:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('0');
 470:	6a 81       	ldd	r22, Y+2	; 0x02
 472:	7b 81       	ldd	r23, Y+3	; 0x03
 474:	80 e3       	ldi	r24, 0x30	; 48
 476:	90 e0       	ldi	r25, 0x00	; 0
 478:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
	putchar('m');
 47c:	6a 81       	ldd	r22, Y+2	; 0x02
 47e:	7b 81       	ldd	r23, Y+3	; 0x03
 480:	8d e6       	ldi	r24, 0x6D	; 109
 482:	90 e0       	ldi	r25, 0x00	; 0
 484:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
}
 488:	df 91       	pop	r29
 48a:	cf 91       	pop	r28
 48c:	08 95       	ret

0000048e <uart_flush>:

void uart_flush ( void )
{
	unsigned char dummy;
	while ( UCSR0A & (1<<RXC0) )
 48e:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 492:	88 23       	and	r24, r24
 494:	44 f4       	brge	.+16     	; 0x4a6 <uart_flush+0x18>
	dummy =  UDR0;
 496:	a6 ec       	ldi	r26, 0xC6	; 198
 498:	b0 e0       	ldi	r27, 0x00	; 0
}

void uart_flush ( void )
{
	unsigned char dummy;
	while ( UCSR0A & (1<<RXC0) )
 49a:	e0 ec       	ldi	r30, 0xC0	; 192
 49c:	f0 e0       	ldi	r31, 0x00	; 0
	dummy =  UDR0;
 49e:	8c 91       	ld	r24, X
}

void uart_flush ( void )
{
	unsigned char dummy;
	while ( UCSR0A & (1<<RXC0) )
 4a0:	80 81       	ld	r24, Z
 4a2:	88 23       	and	r24, r24
 4a4:	e4 f3       	brlt	.-8      	; 0x49e <uart_flush+0x10>
 4a6:	08 95       	ret

000004a8 <init_print>:
	return ch;
}

void init_print ( void )
{
	stdout = stdin = &uart_str;
 4a8:	e8 e7       	ldi	r30, 0x78	; 120
 4aa:	f1 e0       	ldi	r31, 0x01	; 1
 4ac:	86 e0       	ldi	r24, 0x06	; 6
 4ae:	91 e0       	ldi	r25, 0x01	; 1
 4b0:	91 83       	std	Z+1, r25	; 0x01
 4b2:	80 83       	st	Z, r24
 4b4:	93 83       	std	Z+3, r25	; 0x03
 4b6:	82 83       	std	Z+2, r24	; 0x02
	uart_init ();
 4b8:	0e 94 f1 01 	call	0x3e2	; 0x3e2 <uart_init>
	ansi_me ();
 4bc:	0e 94 28 02 	call	0x450	; 0x450 <ansi_me>
	ansi_clear_screen ();
 4c0:	0e 94 fd 01 	call	0x3fa	; 0x3fa <ansi_clear_screen>
	ansi_me ();
 4c4:	0e 94 28 02 	call	0x450	; 0x450 <ansi_me>
	ansi_clear_screen ();
 4c8:	0e 94 fd 01 	call	0x3fa	; 0x3fa <ansi_clear_screen>
	uart_flush ();
 4cc:	0e 94 47 02 	call	0x48e	; 0x48e <uart_flush>
 4d0:	08 95       	ret

000004d2 <malloc>:
 4d2:	0f 93       	push	r16
 4d4:	1f 93       	push	r17
 4d6:	cf 93       	push	r28
 4d8:	df 93       	push	r29
 4da:	82 30       	cpi	r24, 0x02	; 2
 4dc:	91 05       	cpc	r25, r1
 4de:	10 f4       	brcc	.+4      	; 0x4e4 <malloc+0x12>
 4e0:	82 e0       	ldi	r24, 0x02	; 2
 4e2:	90 e0       	ldi	r25, 0x00	; 0
 4e4:	e0 91 76 01 	lds	r30, 0x0176	; 0x800176 <__flp>
 4e8:	f0 91 77 01 	lds	r31, 0x0177	; 0x800177 <__flp+0x1>
 4ec:	20 e0       	ldi	r18, 0x00	; 0
 4ee:	30 e0       	ldi	r19, 0x00	; 0
 4f0:	a0 e0       	ldi	r26, 0x00	; 0
 4f2:	b0 e0       	ldi	r27, 0x00	; 0
 4f4:	30 97       	sbiw	r30, 0x00	; 0
 4f6:	19 f1       	breq	.+70     	; 0x53e <malloc+0x6c>
 4f8:	40 81       	ld	r20, Z
 4fa:	51 81       	ldd	r21, Z+1	; 0x01
 4fc:	02 81       	ldd	r16, Z+2	; 0x02
 4fe:	13 81       	ldd	r17, Z+3	; 0x03
 500:	48 17       	cp	r20, r24
 502:	59 07       	cpc	r21, r25
 504:	c8 f0       	brcs	.+50     	; 0x538 <malloc+0x66>
 506:	84 17       	cp	r24, r20
 508:	95 07       	cpc	r25, r21
 50a:	69 f4       	brne	.+26     	; 0x526 <malloc+0x54>
 50c:	10 97       	sbiw	r26, 0x00	; 0
 50e:	31 f0       	breq	.+12     	; 0x51c <malloc+0x4a>
 510:	12 96       	adiw	r26, 0x02	; 2
 512:	0c 93       	st	X, r16
 514:	12 97       	sbiw	r26, 0x02	; 2
 516:	13 96       	adiw	r26, 0x03	; 3
 518:	1c 93       	st	X, r17
 51a:	27 c0       	rjmp	.+78     	; 0x56a <malloc+0x98>
 51c:	00 93 76 01 	sts	0x0176, r16	; 0x800176 <__flp>
 520:	10 93 77 01 	sts	0x0177, r17	; 0x800177 <__flp+0x1>
 524:	22 c0       	rjmp	.+68     	; 0x56a <malloc+0x98>
 526:	21 15       	cp	r18, r1
 528:	31 05       	cpc	r19, r1
 52a:	19 f0       	breq	.+6      	; 0x532 <malloc+0x60>
 52c:	42 17       	cp	r20, r18
 52e:	53 07       	cpc	r21, r19
 530:	18 f4       	brcc	.+6      	; 0x538 <malloc+0x66>
 532:	9a 01       	movw	r18, r20
 534:	bd 01       	movw	r22, r26
 536:	ef 01       	movw	r28, r30
 538:	df 01       	movw	r26, r30
 53a:	f8 01       	movw	r30, r16
 53c:	db cf       	rjmp	.-74     	; 0x4f4 <malloc+0x22>
 53e:	21 15       	cp	r18, r1
 540:	31 05       	cpc	r19, r1
 542:	f9 f0       	breq	.+62     	; 0x582 <malloc+0xb0>
 544:	28 1b       	sub	r18, r24
 546:	39 0b       	sbc	r19, r25
 548:	24 30       	cpi	r18, 0x04	; 4
 54a:	31 05       	cpc	r19, r1
 54c:	80 f4       	brcc	.+32     	; 0x56e <malloc+0x9c>
 54e:	8a 81       	ldd	r24, Y+2	; 0x02
 550:	9b 81       	ldd	r25, Y+3	; 0x03
 552:	61 15       	cp	r22, r1
 554:	71 05       	cpc	r23, r1
 556:	21 f0       	breq	.+8      	; 0x560 <malloc+0x8e>
 558:	fb 01       	movw	r30, r22
 55a:	93 83       	std	Z+3, r25	; 0x03
 55c:	82 83       	std	Z+2, r24	; 0x02
 55e:	04 c0       	rjmp	.+8      	; 0x568 <malloc+0x96>
 560:	90 93 77 01 	sts	0x0177, r25	; 0x800177 <__flp+0x1>
 564:	80 93 76 01 	sts	0x0176, r24	; 0x800176 <__flp>
 568:	fe 01       	movw	r30, r28
 56a:	32 96       	adiw	r30, 0x02	; 2
 56c:	44 c0       	rjmp	.+136    	; 0x5f6 <malloc+0x124>
 56e:	fe 01       	movw	r30, r28
 570:	e2 0f       	add	r30, r18
 572:	f3 1f       	adc	r31, r19
 574:	81 93       	st	Z+, r24
 576:	91 93       	st	Z+, r25
 578:	22 50       	subi	r18, 0x02	; 2
 57a:	31 09       	sbc	r19, r1
 57c:	39 83       	std	Y+1, r19	; 0x01
 57e:	28 83       	st	Y, r18
 580:	3a c0       	rjmp	.+116    	; 0x5f6 <malloc+0x124>
 582:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <__brkval>
 586:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <__brkval+0x1>
 58a:	23 2b       	or	r18, r19
 58c:	41 f4       	brne	.+16     	; 0x59e <malloc+0xcc>
 58e:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 592:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 596:	30 93 75 01 	sts	0x0175, r19	; 0x800175 <__brkval+0x1>
 59a:	20 93 74 01 	sts	0x0174, r18	; 0x800174 <__brkval>
 59e:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 5a2:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 5a6:	21 15       	cp	r18, r1
 5a8:	31 05       	cpc	r19, r1
 5aa:	41 f4       	brne	.+16     	; 0x5bc <malloc+0xea>
 5ac:	2d b7       	in	r18, 0x3d	; 61
 5ae:	3e b7       	in	r19, 0x3e	; 62
 5b0:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 5b4:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 5b8:	24 1b       	sub	r18, r20
 5ba:	35 0b       	sbc	r19, r21
 5bc:	e0 91 74 01 	lds	r30, 0x0174	; 0x800174 <__brkval>
 5c0:	f0 91 75 01 	lds	r31, 0x0175	; 0x800175 <__brkval+0x1>
 5c4:	e2 17       	cp	r30, r18
 5c6:	f3 07       	cpc	r31, r19
 5c8:	a0 f4       	brcc	.+40     	; 0x5f2 <malloc+0x120>
 5ca:	2e 1b       	sub	r18, r30
 5cc:	3f 0b       	sbc	r19, r31
 5ce:	28 17       	cp	r18, r24
 5d0:	39 07       	cpc	r19, r25
 5d2:	78 f0       	brcs	.+30     	; 0x5f2 <malloc+0x120>
 5d4:	ac 01       	movw	r20, r24
 5d6:	4e 5f       	subi	r20, 0xFE	; 254
 5d8:	5f 4f       	sbci	r21, 0xFF	; 255
 5da:	24 17       	cp	r18, r20
 5dc:	35 07       	cpc	r19, r21
 5de:	48 f0       	brcs	.+18     	; 0x5f2 <malloc+0x120>
 5e0:	4e 0f       	add	r20, r30
 5e2:	5f 1f       	adc	r21, r31
 5e4:	50 93 75 01 	sts	0x0175, r21	; 0x800175 <__brkval+0x1>
 5e8:	40 93 74 01 	sts	0x0174, r20	; 0x800174 <__brkval>
 5ec:	81 93       	st	Z+, r24
 5ee:	91 93       	st	Z+, r25
 5f0:	02 c0       	rjmp	.+4      	; 0x5f6 <malloc+0x124>
 5f2:	e0 e0       	ldi	r30, 0x00	; 0
 5f4:	f0 e0       	ldi	r31, 0x00	; 0
 5f6:	cf 01       	movw	r24, r30
 5f8:	df 91       	pop	r29
 5fa:	cf 91       	pop	r28
 5fc:	1f 91       	pop	r17
 5fe:	0f 91       	pop	r16
 600:	08 95       	ret

00000602 <free>:
 602:	cf 93       	push	r28
 604:	df 93       	push	r29
 606:	00 97       	sbiw	r24, 0x00	; 0
 608:	09 f4       	brne	.+2      	; 0x60c <free+0xa>
 60a:	81 c0       	rjmp	.+258    	; 0x70e <free+0x10c>
 60c:	fc 01       	movw	r30, r24
 60e:	32 97       	sbiw	r30, 0x02	; 2
 610:	13 82       	std	Z+3, r1	; 0x03
 612:	12 82       	std	Z+2, r1	; 0x02
 614:	a0 91 76 01 	lds	r26, 0x0176	; 0x800176 <__flp>
 618:	b0 91 77 01 	lds	r27, 0x0177	; 0x800177 <__flp+0x1>
 61c:	10 97       	sbiw	r26, 0x00	; 0
 61e:	81 f4       	brne	.+32     	; 0x640 <free+0x3e>
 620:	20 81       	ld	r18, Z
 622:	31 81       	ldd	r19, Z+1	; 0x01
 624:	82 0f       	add	r24, r18
 626:	93 1f       	adc	r25, r19
 628:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <__brkval>
 62c:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <__brkval+0x1>
 630:	28 17       	cp	r18, r24
 632:	39 07       	cpc	r19, r25
 634:	51 f5       	brne	.+84     	; 0x68a <free+0x88>
 636:	f0 93 75 01 	sts	0x0175, r31	; 0x800175 <__brkval+0x1>
 63a:	e0 93 74 01 	sts	0x0174, r30	; 0x800174 <__brkval>
 63e:	67 c0       	rjmp	.+206    	; 0x70e <free+0x10c>
 640:	ed 01       	movw	r28, r26
 642:	20 e0       	ldi	r18, 0x00	; 0
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	ce 17       	cp	r28, r30
 648:	df 07       	cpc	r29, r31
 64a:	40 f4       	brcc	.+16     	; 0x65c <free+0x5a>
 64c:	4a 81       	ldd	r20, Y+2	; 0x02
 64e:	5b 81       	ldd	r21, Y+3	; 0x03
 650:	9e 01       	movw	r18, r28
 652:	41 15       	cp	r20, r1
 654:	51 05       	cpc	r21, r1
 656:	f1 f0       	breq	.+60     	; 0x694 <free+0x92>
 658:	ea 01       	movw	r28, r20
 65a:	f5 cf       	rjmp	.-22     	; 0x646 <free+0x44>
 65c:	d3 83       	std	Z+3, r29	; 0x03
 65e:	c2 83       	std	Z+2, r28	; 0x02
 660:	40 81       	ld	r20, Z
 662:	51 81       	ldd	r21, Z+1	; 0x01
 664:	84 0f       	add	r24, r20
 666:	95 1f       	adc	r25, r21
 668:	c8 17       	cp	r28, r24
 66a:	d9 07       	cpc	r29, r25
 66c:	59 f4       	brne	.+22     	; 0x684 <free+0x82>
 66e:	88 81       	ld	r24, Y
 670:	99 81       	ldd	r25, Y+1	; 0x01
 672:	84 0f       	add	r24, r20
 674:	95 1f       	adc	r25, r21
 676:	02 96       	adiw	r24, 0x02	; 2
 678:	91 83       	std	Z+1, r25	; 0x01
 67a:	80 83       	st	Z, r24
 67c:	8a 81       	ldd	r24, Y+2	; 0x02
 67e:	9b 81       	ldd	r25, Y+3	; 0x03
 680:	93 83       	std	Z+3, r25	; 0x03
 682:	82 83       	std	Z+2, r24	; 0x02
 684:	21 15       	cp	r18, r1
 686:	31 05       	cpc	r19, r1
 688:	29 f4       	brne	.+10     	; 0x694 <free+0x92>
 68a:	f0 93 77 01 	sts	0x0177, r31	; 0x800177 <__flp+0x1>
 68e:	e0 93 76 01 	sts	0x0176, r30	; 0x800176 <__flp>
 692:	3d c0       	rjmp	.+122    	; 0x70e <free+0x10c>
 694:	e9 01       	movw	r28, r18
 696:	fb 83       	std	Y+3, r31	; 0x03
 698:	ea 83       	std	Y+2, r30	; 0x02
 69a:	49 91       	ld	r20, Y+
 69c:	59 91       	ld	r21, Y+
 69e:	c4 0f       	add	r28, r20
 6a0:	d5 1f       	adc	r29, r21
 6a2:	ec 17       	cp	r30, r28
 6a4:	fd 07       	cpc	r31, r29
 6a6:	61 f4       	brne	.+24     	; 0x6c0 <free+0xbe>
 6a8:	80 81       	ld	r24, Z
 6aa:	91 81       	ldd	r25, Z+1	; 0x01
 6ac:	84 0f       	add	r24, r20
 6ae:	95 1f       	adc	r25, r21
 6b0:	02 96       	adiw	r24, 0x02	; 2
 6b2:	e9 01       	movw	r28, r18
 6b4:	99 83       	std	Y+1, r25	; 0x01
 6b6:	88 83       	st	Y, r24
 6b8:	82 81       	ldd	r24, Z+2	; 0x02
 6ba:	93 81       	ldd	r25, Z+3	; 0x03
 6bc:	9b 83       	std	Y+3, r25	; 0x03
 6be:	8a 83       	std	Y+2, r24	; 0x02
 6c0:	e0 e0       	ldi	r30, 0x00	; 0
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	12 96       	adiw	r26, 0x02	; 2
 6c6:	8d 91       	ld	r24, X+
 6c8:	9c 91       	ld	r25, X
 6ca:	13 97       	sbiw	r26, 0x03	; 3
 6cc:	00 97       	sbiw	r24, 0x00	; 0
 6ce:	19 f0       	breq	.+6      	; 0x6d6 <free+0xd4>
 6d0:	fd 01       	movw	r30, r26
 6d2:	dc 01       	movw	r26, r24
 6d4:	f7 cf       	rjmp	.-18     	; 0x6c4 <free+0xc2>
 6d6:	8d 91       	ld	r24, X+
 6d8:	9c 91       	ld	r25, X
 6da:	11 97       	sbiw	r26, 0x01	; 1
 6dc:	9d 01       	movw	r18, r26
 6de:	2e 5f       	subi	r18, 0xFE	; 254
 6e0:	3f 4f       	sbci	r19, 0xFF	; 255
 6e2:	82 0f       	add	r24, r18
 6e4:	93 1f       	adc	r25, r19
 6e6:	20 91 74 01 	lds	r18, 0x0174	; 0x800174 <__brkval>
 6ea:	30 91 75 01 	lds	r19, 0x0175	; 0x800175 <__brkval+0x1>
 6ee:	28 17       	cp	r18, r24
 6f0:	39 07       	cpc	r19, r25
 6f2:	69 f4       	brne	.+26     	; 0x70e <free+0x10c>
 6f4:	30 97       	sbiw	r30, 0x00	; 0
 6f6:	29 f4       	brne	.+10     	; 0x702 <free+0x100>
 6f8:	10 92 77 01 	sts	0x0177, r1	; 0x800177 <__flp+0x1>
 6fc:	10 92 76 01 	sts	0x0176, r1	; 0x800176 <__flp>
 700:	02 c0       	rjmp	.+4      	; 0x706 <free+0x104>
 702:	13 82       	std	Z+3, r1	; 0x03
 704:	12 82       	std	Z+2, r1	; 0x02
 706:	b0 93 75 01 	sts	0x0175, r27	; 0x800175 <__brkval+0x1>
 70a:	a0 93 74 01 	sts	0x0174, r26	; 0x800174 <__brkval>
 70e:	df 91       	pop	r29
 710:	cf 91       	pop	r28
 712:	08 95       	ret

00000714 <fputc>:
 714:	0f 93       	push	r16
 716:	1f 93       	push	r17
 718:	cf 93       	push	r28
 71a:	df 93       	push	r29
 71c:	fb 01       	movw	r30, r22
 71e:	23 81       	ldd	r18, Z+3	; 0x03
 720:	21 fd       	sbrc	r18, 1
 722:	03 c0       	rjmp	.+6      	; 0x72a <fputc+0x16>
 724:	8f ef       	ldi	r24, 0xFF	; 255
 726:	9f ef       	ldi	r25, 0xFF	; 255
 728:	2c c0       	rjmp	.+88     	; 0x782 <fputc+0x6e>
 72a:	22 ff       	sbrs	r18, 2
 72c:	16 c0       	rjmp	.+44     	; 0x75a <fputc+0x46>
 72e:	46 81       	ldd	r20, Z+6	; 0x06
 730:	57 81       	ldd	r21, Z+7	; 0x07
 732:	24 81       	ldd	r18, Z+4	; 0x04
 734:	35 81       	ldd	r19, Z+5	; 0x05
 736:	42 17       	cp	r20, r18
 738:	53 07       	cpc	r21, r19
 73a:	44 f4       	brge	.+16     	; 0x74c <fputc+0x38>
 73c:	a0 81       	ld	r26, Z
 73e:	b1 81       	ldd	r27, Z+1	; 0x01
 740:	9d 01       	movw	r18, r26
 742:	2f 5f       	subi	r18, 0xFF	; 255
 744:	3f 4f       	sbci	r19, 0xFF	; 255
 746:	31 83       	std	Z+1, r19	; 0x01
 748:	20 83       	st	Z, r18
 74a:	8c 93       	st	X, r24
 74c:	26 81       	ldd	r18, Z+6	; 0x06
 74e:	37 81       	ldd	r19, Z+7	; 0x07
 750:	2f 5f       	subi	r18, 0xFF	; 255
 752:	3f 4f       	sbci	r19, 0xFF	; 255
 754:	37 83       	std	Z+7, r19	; 0x07
 756:	26 83       	std	Z+6, r18	; 0x06
 758:	14 c0       	rjmp	.+40     	; 0x782 <fputc+0x6e>
 75a:	8b 01       	movw	r16, r22
 75c:	ec 01       	movw	r28, r24
 75e:	fb 01       	movw	r30, r22
 760:	00 84       	ldd	r0, Z+8	; 0x08
 762:	f1 85       	ldd	r31, Z+9	; 0x09
 764:	e0 2d       	mov	r30, r0
 766:	09 95       	icall
 768:	89 2b       	or	r24, r25
 76a:	e1 f6       	brne	.-72     	; 0x724 <fputc+0x10>
 76c:	d8 01       	movw	r26, r16
 76e:	16 96       	adiw	r26, 0x06	; 6
 770:	8d 91       	ld	r24, X+
 772:	9c 91       	ld	r25, X
 774:	17 97       	sbiw	r26, 0x07	; 7
 776:	01 96       	adiw	r24, 0x01	; 1
 778:	17 96       	adiw	r26, 0x07	; 7
 77a:	9c 93       	st	X, r25
 77c:	8e 93       	st	-X, r24
 77e:	16 97       	sbiw	r26, 0x06	; 6
 780:	ce 01       	movw	r24, r28
 782:	df 91       	pop	r29
 784:	cf 91       	pop	r28
 786:	1f 91       	pop	r17
 788:	0f 91       	pop	r16
 78a:	08 95       	ret

0000078c <printf>:
 78c:	a0 e0       	ldi	r26, 0x00	; 0
 78e:	b0 e0       	ldi	r27, 0x00	; 0
 790:	ec ec       	ldi	r30, 0xCC	; 204
 792:	f3 e0       	ldi	r31, 0x03	; 3
 794:	0c 94 71 06 	jmp	0xce2	; 0xce2 <__prologue_saves__+0x20>
 798:	ae 01       	movw	r20, r28
 79a:	4b 5f       	subi	r20, 0xFB	; 251
 79c:	5f 4f       	sbci	r21, 0xFF	; 255
 79e:	fa 01       	movw	r30, r20
 7a0:	61 91       	ld	r22, Z+
 7a2:	71 91       	ld	r23, Z+
 7a4:	af 01       	movw	r20, r30
 7a6:	80 91 7a 01 	lds	r24, 0x017A	; 0x80017a <__iob+0x2>
 7aa:	90 91 7b 01 	lds	r25, 0x017B	; 0x80017b <__iob+0x3>
 7ae:	0e 94 0c 04 	call	0x818	; 0x818 <vfprintf>
 7b2:	e2 e0       	ldi	r30, 0x02	; 2
 7b4:	0c 94 8d 06 	jmp	0xd1a	; 0xd1a <__epilogue_restores__+0x20>

000007b8 <puts>:
 7b8:	0f 93       	push	r16
 7ba:	1f 93       	push	r17
 7bc:	cf 93       	push	r28
 7be:	df 93       	push	r29
 7c0:	e0 91 7a 01 	lds	r30, 0x017A	; 0x80017a <__iob+0x2>
 7c4:	f0 91 7b 01 	lds	r31, 0x017B	; 0x80017b <__iob+0x3>
 7c8:	23 81       	ldd	r18, Z+3	; 0x03
 7ca:	21 ff       	sbrs	r18, 1
 7cc:	1b c0       	rjmp	.+54     	; 0x804 <puts+0x4c>
 7ce:	8c 01       	movw	r16, r24
 7d0:	d0 e0       	ldi	r29, 0x00	; 0
 7d2:	c0 e0       	ldi	r28, 0x00	; 0
 7d4:	f8 01       	movw	r30, r16
 7d6:	81 91       	ld	r24, Z+
 7d8:	8f 01       	movw	r16, r30
 7da:	60 91 7a 01 	lds	r22, 0x017A	; 0x80017a <__iob+0x2>
 7de:	70 91 7b 01 	lds	r23, 0x017B	; 0x80017b <__iob+0x3>
 7e2:	db 01       	movw	r26, r22
 7e4:	18 96       	adiw	r26, 0x08	; 8
 7e6:	ed 91       	ld	r30, X+
 7e8:	fc 91       	ld	r31, X
 7ea:	19 97       	sbiw	r26, 0x09	; 9
 7ec:	88 23       	and	r24, r24
 7ee:	31 f0       	breq	.+12     	; 0x7fc <puts+0x44>
 7f0:	09 95       	icall
 7f2:	89 2b       	or	r24, r25
 7f4:	79 f3       	breq	.-34     	; 0x7d4 <puts+0x1c>
 7f6:	df ef       	ldi	r29, 0xFF	; 255
 7f8:	cf ef       	ldi	r28, 0xFF	; 255
 7fa:	ec cf       	rjmp	.-40     	; 0x7d4 <puts+0x1c>
 7fc:	8a e0       	ldi	r24, 0x0A	; 10
 7fe:	09 95       	icall
 800:	89 2b       	or	r24, r25
 802:	19 f0       	breq	.+6      	; 0x80a <puts+0x52>
 804:	8f ef       	ldi	r24, 0xFF	; 255
 806:	9f ef       	ldi	r25, 0xFF	; 255
 808:	02 c0       	rjmp	.+4      	; 0x80e <puts+0x56>
 80a:	8d 2f       	mov	r24, r29
 80c:	9c 2f       	mov	r25, r28
 80e:	df 91       	pop	r29
 810:	cf 91       	pop	r28
 812:	1f 91       	pop	r17
 814:	0f 91       	pop	r16
 816:	08 95       	ret

00000818 <vfprintf>:
 818:	ab e0       	ldi	r26, 0x0B	; 11
 81a:	b0 e0       	ldi	r27, 0x00	; 0
 81c:	e2 e1       	ldi	r30, 0x12	; 18
 81e:	f4 e0       	ldi	r31, 0x04	; 4
 820:	0c 94 61 06 	jmp	0xcc2	; 0xcc2 <__prologue_saves__>
 824:	6c 01       	movw	r12, r24
 826:	7b 01       	movw	r14, r22
 828:	8a 01       	movw	r16, r20
 82a:	fc 01       	movw	r30, r24
 82c:	17 82       	std	Z+7, r1	; 0x07
 82e:	16 82       	std	Z+6, r1	; 0x06
 830:	83 81       	ldd	r24, Z+3	; 0x03
 832:	81 ff       	sbrs	r24, 1
 834:	cc c1       	rjmp	.+920    	; 0xbce <__stack+0x2cf>
 836:	ce 01       	movw	r24, r28
 838:	01 96       	adiw	r24, 0x01	; 1
 83a:	3c 01       	movw	r6, r24
 83c:	f6 01       	movw	r30, r12
 83e:	93 81       	ldd	r25, Z+3	; 0x03
 840:	f7 01       	movw	r30, r14
 842:	93 fd       	sbrc	r25, 3
 844:	85 91       	lpm	r24, Z+
 846:	93 ff       	sbrs	r25, 3
 848:	81 91       	ld	r24, Z+
 84a:	7f 01       	movw	r14, r30
 84c:	88 23       	and	r24, r24
 84e:	09 f4       	brne	.+2      	; 0x852 <vfprintf+0x3a>
 850:	ba c1       	rjmp	.+884    	; 0xbc6 <__stack+0x2c7>
 852:	85 32       	cpi	r24, 0x25	; 37
 854:	39 f4       	brne	.+14     	; 0x864 <vfprintf+0x4c>
 856:	93 fd       	sbrc	r25, 3
 858:	85 91       	lpm	r24, Z+
 85a:	93 ff       	sbrs	r25, 3
 85c:	81 91       	ld	r24, Z+
 85e:	7f 01       	movw	r14, r30
 860:	85 32       	cpi	r24, 0x25	; 37
 862:	29 f4       	brne	.+10     	; 0x86e <vfprintf+0x56>
 864:	b6 01       	movw	r22, r12
 866:	90 e0       	ldi	r25, 0x00	; 0
 868:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 86c:	e7 cf       	rjmp	.-50     	; 0x83c <vfprintf+0x24>
 86e:	91 2c       	mov	r9, r1
 870:	21 2c       	mov	r2, r1
 872:	31 2c       	mov	r3, r1
 874:	ff e1       	ldi	r31, 0x1F	; 31
 876:	f3 15       	cp	r31, r3
 878:	d8 f0       	brcs	.+54     	; 0x8b0 <vfprintf+0x98>
 87a:	8b 32       	cpi	r24, 0x2B	; 43
 87c:	79 f0       	breq	.+30     	; 0x89c <vfprintf+0x84>
 87e:	38 f4       	brcc	.+14     	; 0x88e <vfprintf+0x76>
 880:	80 32       	cpi	r24, 0x20	; 32
 882:	79 f0       	breq	.+30     	; 0x8a2 <vfprintf+0x8a>
 884:	83 32       	cpi	r24, 0x23	; 35
 886:	a1 f4       	brne	.+40     	; 0x8b0 <vfprintf+0x98>
 888:	23 2d       	mov	r18, r3
 88a:	20 61       	ori	r18, 0x10	; 16
 88c:	1d c0       	rjmp	.+58     	; 0x8c8 <vfprintf+0xb0>
 88e:	8d 32       	cpi	r24, 0x2D	; 45
 890:	61 f0       	breq	.+24     	; 0x8aa <vfprintf+0x92>
 892:	80 33       	cpi	r24, 0x30	; 48
 894:	69 f4       	brne	.+26     	; 0x8b0 <vfprintf+0x98>
 896:	23 2d       	mov	r18, r3
 898:	21 60       	ori	r18, 0x01	; 1
 89a:	16 c0       	rjmp	.+44     	; 0x8c8 <vfprintf+0xb0>
 89c:	83 2d       	mov	r24, r3
 89e:	82 60       	ori	r24, 0x02	; 2
 8a0:	38 2e       	mov	r3, r24
 8a2:	e3 2d       	mov	r30, r3
 8a4:	e4 60       	ori	r30, 0x04	; 4
 8a6:	3e 2e       	mov	r3, r30
 8a8:	2a c0       	rjmp	.+84     	; 0x8fe <vfprintf+0xe6>
 8aa:	f3 2d       	mov	r31, r3
 8ac:	f8 60       	ori	r31, 0x08	; 8
 8ae:	1d c0       	rjmp	.+58     	; 0x8ea <vfprintf+0xd2>
 8b0:	37 fc       	sbrc	r3, 7
 8b2:	2d c0       	rjmp	.+90     	; 0x90e <__stack+0xf>
 8b4:	20 ed       	ldi	r18, 0xD0	; 208
 8b6:	28 0f       	add	r18, r24
 8b8:	2a 30       	cpi	r18, 0x0A	; 10
 8ba:	40 f0       	brcs	.+16     	; 0x8cc <vfprintf+0xb4>
 8bc:	8e 32       	cpi	r24, 0x2E	; 46
 8be:	b9 f4       	brne	.+46     	; 0x8ee <vfprintf+0xd6>
 8c0:	36 fc       	sbrc	r3, 6
 8c2:	81 c1       	rjmp	.+770    	; 0xbc6 <__stack+0x2c7>
 8c4:	23 2d       	mov	r18, r3
 8c6:	20 64       	ori	r18, 0x40	; 64
 8c8:	32 2e       	mov	r3, r18
 8ca:	19 c0       	rjmp	.+50     	; 0x8fe <vfprintf+0xe6>
 8cc:	36 fe       	sbrs	r3, 6
 8ce:	06 c0       	rjmp	.+12     	; 0x8dc <vfprintf+0xc4>
 8d0:	8a e0       	ldi	r24, 0x0A	; 10
 8d2:	98 9e       	mul	r9, r24
 8d4:	20 0d       	add	r18, r0
 8d6:	11 24       	eor	r1, r1
 8d8:	92 2e       	mov	r9, r18
 8da:	11 c0       	rjmp	.+34     	; 0x8fe <vfprintf+0xe6>
 8dc:	ea e0       	ldi	r30, 0x0A	; 10
 8de:	2e 9e       	mul	r2, r30
 8e0:	20 0d       	add	r18, r0
 8e2:	11 24       	eor	r1, r1
 8e4:	22 2e       	mov	r2, r18
 8e6:	f3 2d       	mov	r31, r3
 8e8:	f0 62       	ori	r31, 0x20	; 32
 8ea:	3f 2e       	mov	r3, r31
 8ec:	08 c0       	rjmp	.+16     	; 0x8fe <vfprintf+0xe6>
 8ee:	8c 36       	cpi	r24, 0x6C	; 108
 8f0:	21 f4       	brne	.+8      	; 0x8fa <vfprintf+0xe2>
 8f2:	83 2d       	mov	r24, r3
 8f4:	80 68       	ori	r24, 0x80	; 128
 8f6:	38 2e       	mov	r3, r24
 8f8:	02 c0       	rjmp	.+4      	; 0x8fe <vfprintf+0xe6>
 8fa:	88 36       	cpi	r24, 0x68	; 104
 8fc:	41 f4       	brne	.+16     	; 0x90e <__stack+0xf>
 8fe:	f7 01       	movw	r30, r14
 900:	93 fd       	sbrc	r25, 3
 902:	85 91       	lpm	r24, Z+
 904:	93 ff       	sbrs	r25, 3
 906:	81 91       	ld	r24, Z+
 908:	7f 01       	movw	r14, r30
 90a:	81 11       	cpse	r24, r1
 90c:	b3 cf       	rjmp	.-154    	; 0x874 <vfprintf+0x5c>
 90e:	98 2f       	mov	r25, r24
 910:	9f 7d       	andi	r25, 0xDF	; 223
 912:	95 54       	subi	r25, 0x45	; 69
 914:	93 30       	cpi	r25, 0x03	; 3
 916:	28 f4       	brcc	.+10     	; 0x922 <__stack+0x23>
 918:	0c 5f       	subi	r16, 0xFC	; 252
 91a:	1f 4f       	sbci	r17, 0xFF	; 255
 91c:	9f e3       	ldi	r25, 0x3F	; 63
 91e:	99 83       	std	Y+1, r25	; 0x01
 920:	0d c0       	rjmp	.+26     	; 0x93c <__stack+0x3d>
 922:	83 36       	cpi	r24, 0x63	; 99
 924:	31 f0       	breq	.+12     	; 0x932 <__stack+0x33>
 926:	83 37       	cpi	r24, 0x73	; 115
 928:	71 f0       	breq	.+28     	; 0x946 <__stack+0x47>
 92a:	83 35       	cpi	r24, 0x53	; 83
 92c:	09 f0       	breq	.+2      	; 0x930 <__stack+0x31>
 92e:	59 c0       	rjmp	.+178    	; 0x9e2 <__stack+0xe3>
 930:	21 c0       	rjmp	.+66     	; 0x974 <__stack+0x75>
 932:	f8 01       	movw	r30, r16
 934:	80 81       	ld	r24, Z
 936:	89 83       	std	Y+1, r24	; 0x01
 938:	0e 5f       	subi	r16, 0xFE	; 254
 93a:	1f 4f       	sbci	r17, 0xFF	; 255
 93c:	88 24       	eor	r8, r8
 93e:	83 94       	inc	r8
 940:	91 2c       	mov	r9, r1
 942:	53 01       	movw	r10, r6
 944:	13 c0       	rjmp	.+38     	; 0x96c <__stack+0x6d>
 946:	28 01       	movw	r4, r16
 948:	f2 e0       	ldi	r31, 0x02	; 2
 94a:	4f 0e       	add	r4, r31
 94c:	51 1c       	adc	r5, r1
 94e:	f8 01       	movw	r30, r16
 950:	a0 80       	ld	r10, Z
 952:	b1 80       	ldd	r11, Z+1	; 0x01
 954:	36 fe       	sbrs	r3, 6
 956:	03 c0       	rjmp	.+6      	; 0x95e <__stack+0x5f>
 958:	69 2d       	mov	r22, r9
 95a:	70 e0       	ldi	r23, 0x00	; 0
 95c:	02 c0       	rjmp	.+4      	; 0x962 <__stack+0x63>
 95e:	6f ef       	ldi	r22, 0xFF	; 255
 960:	7f ef       	ldi	r23, 0xFF	; 255
 962:	c5 01       	movw	r24, r10
 964:	0e 94 f8 05 	call	0xbf0	; 0xbf0 <strnlen>
 968:	4c 01       	movw	r8, r24
 96a:	82 01       	movw	r16, r4
 96c:	f3 2d       	mov	r31, r3
 96e:	ff 77       	andi	r31, 0x7F	; 127
 970:	3f 2e       	mov	r3, r31
 972:	16 c0       	rjmp	.+44     	; 0x9a0 <__stack+0xa1>
 974:	28 01       	movw	r4, r16
 976:	22 e0       	ldi	r18, 0x02	; 2
 978:	42 0e       	add	r4, r18
 97a:	51 1c       	adc	r5, r1
 97c:	f8 01       	movw	r30, r16
 97e:	a0 80       	ld	r10, Z
 980:	b1 80       	ldd	r11, Z+1	; 0x01
 982:	36 fe       	sbrs	r3, 6
 984:	03 c0       	rjmp	.+6      	; 0x98c <__stack+0x8d>
 986:	69 2d       	mov	r22, r9
 988:	70 e0       	ldi	r23, 0x00	; 0
 98a:	02 c0       	rjmp	.+4      	; 0x990 <__stack+0x91>
 98c:	6f ef       	ldi	r22, 0xFF	; 255
 98e:	7f ef       	ldi	r23, 0xFF	; 255
 990:	c5 01       	movw	r24, r10
 992:	0e 94 ed 05 	call	0xbda	; 0xbda <strnlen_P>
 996:	4c 01       	movw	r8, r24
 998:	f3 2d       	mov	r31, r3
 99a:	f0 68       	ori	r31, 0x80	; 128
 99c:	3f 2e       	mov	r3, r31
 99e:	82 01       	movw	r16, r4
 9a0:	33 fc       	sbrc	r3, 3
 9a2:	1b c0       	rjmp	.+54     	; 0x9da <__stack+0xdb>
 9a4:	82 2d       	mov	r24, r2
 9a6:	90 e0       	ldi	r25, 0x00	; 0
 9a8:	88 16       	cp	r8, r24
 9aa:	99 06       	cpc	r9, r25
 9ac:	b0 f4       	brcc	.+44     	; 0x9da <__stack+0xdb>
 9ae:	b6 01       	movw	r22, r12
 9b0:	80 e2       	ldi	r24, 0x20	; 32
 9b2:	90 e0       	ldi	r25, 0x00	; 0
 9b4:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 9b8:	2a 94       	dec	r2
 9ba:	f4 cf       	rjmp	.-24     	; 0x9a4 <__stack+0xa5>
 9bc:	f5 01       	movw	r30, r10
 9be:	37 fc       	sbrc	r3, 7
 9c0:	85 91       	lpm	r24, Z+
 9c2:	37 fe       	sbrs	r3, 7
 9c4:	81 91       	ld	r24, Z+
 9c6:	5f 01       	movw	r10, r30
 9c8:	b6 01       	movw	r22, r12
 9ca:	90 e0       	ldi	r25, 0x00	; 0
 9cc:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 9d0:	21 10       	cpse	r2, r1
 9d2:	2a 94       	dec	r2
 9d4:	21 e0       	ldi	r18, 0x01	; 1
 9d6:	82 1a       	sub	r8, r18
 9d8:	91 08       	sbc	r9, r1
 9da:	81 14       	cp	r8, r1
 9dc:	91 04       	cpc	r9, r1
 9de:	71 f7       	brne	.-36     	; 0x9bc <__stack+0xbd>
 9e0:	e8 c0       	rjmp	.+464    	; 0xbb2 <__stack+0x2b3>
 9e2:	84 36       	cpi	r24, 0x64	; 100
 9e4:	11 f0       	breq	.+4      	; 0x9ea <__stack+0xeb>
 9e6:	89 36       	cpi	r24, 0x69	; 105
 9e8:	41 f5       	brne	.+80     	; 0xa3a <__stack+0x13b>
 9ea:	f8 01       	movw	r30, r16
 9ec:	37 fe       	sbrs	r3, 7
 9ee:	07 c0       	rjmp	.+14     	; 0x9fe <__stack+0xff>
 9f0:	60 81       	ld	r22, Z
 9f2:	71 81       	ldd	r23, Z+1	; 0x01
 9f4:	82 81       	ldd	r24, Z+2	; 0x02
 9f6:	93 81       	ldd	r25, Z+3	; 0x03
 9f8:	0c 5f       	subi	r16, 0xFC	; 252
 9fa:	1f 4f       	sbci	r17, 0xFF	; 255
 9fc:	08 c0       	rjmp	.+16     	; 0xa0e <__stack+0x10f>
 9fe:	60 81       	ld	r22, Z
 a00:	71 81       	ldd	r23, Z+1	; 0x01
 a02:	07 2e       	mov	r0, r23
 a04:	00 0c       	add	r0, r0
 a06:	88 0b       	sbc	r24, r24
 a08:	99 0b       	sbc	r25, r25
 a0a:	0e 5f       	subi	r16, 0xFE	; 254
 a0c:	1f 4f       	sbci	r17, 0xFF	; 255
 a0e:	f3 2d       	mov	r31, r3
 a10:	ff 76       	andi	r31, 0x6F	; 111
 a12:	3f 2e       	mov	r3, r31
 a14:	97 ff       	sbrs	r25, 7
 a16:	09 c0       	rjmp	.+18     	; 0xa2a <__stack+0x12b>
 a18:	90 95       	com	r25
 a1a:	80 95       	com	r24
 a1c:	70 95       	com	r23
 a1e:	61 95       	neg	r22
 a20:	7f 4f       	sbci	r23, 0xFF	; 255
 a22:	8f 4f       	sbci	r24, 0xFF	; 255
 a24:	9f 4f       	sbci	r25, 0xFF	; 255
 a26:	f0 68       	ori	r31, 0x80	; 128
 a28:	3f 2e       	mov	r3, r31
 a2a:	2a e0       	ldi	r18, 0x0A	; 10
 a2c:	30 e0       	ldi	r19, 0x00	; 0
 a2e:	a3 01       	movw	r20, r6
 a30:	0e 94 03 06 	call	0xc06	; 0xc06 <__ultoa_invert>
 a34:	88 2e       	mov	r8, r24
 a36:	86 18       	sub	r8, r6
 a38:	45 c0       	rjmp	.+138    	; 0xac4 <__stack+0x1c5>
 a3a:	85 37       	cpi	r24, 0x75	; 117
 a3c:	31 f4       	brne	.+12     	; 0xa4a <__stack+0x14b>
 a3e:	23 2d       	mov	r18, r3
 a40:	2f 7e       	andi	r18, 0xEF	; 239
 a42:	b2 2e       	mov	r11, r18
 a44:	2a e0       	ldi	r18, 0x0A	; 10
 a46:	30 e0       	ldi	r19, 0x00	; 0
 a48:	25 c0       	rjmp	.+74     	; 0xa94 <__stack+0x195>
 a4a:	93 2d       	mov	r25, r3
 a4c:	99 7f       	andi	r25, 0xF9	; 249
 a4e:	b9 2e       	mov	r11, r25
 a50:	8f 36       	cpi	r24, 0x6F	; 111
 a52:	c1 f0       	breq	.+48     	; 0xa84 <__stack+0x185>
 a54:	18 f4       	brcc	.+6      	; 0xa5c <__stack+0x15d>
 a56:	88 35       	cpi	r24, 0x58	; 88
 a58:	79 f0       	breq	.+30     	; 0xa78 <__stack+0x179>
 a5a:	b5 c0       	rjmp	.+362    	; 0xbc6 <__stack+0x2c7>
 a5c:	80 37       	cpi	r24, 0x70	; 112
 a5e:	19 f0       	breq	.+6      	; 0xa66 <__stack+0x167>
 a60:	88 37       	cpi	r24, 0x78	; 120
 a62:	21 f0       	breq	.+8      	; 0xa6c <__stack+0x16d>
 a64:	b0 c0       	rjmp	.+352    	; 0xbc6 <__stack+0x2c7>
 a66:	e9 2f       	mov	r30, r25
 a68:	e0 61       	ori	r30, 0x10	; 16
 a6a:	be 2e       	mov	r11, r30
 a6c:	b4 fe       	sbrs	r11, 4
 a6e:	0d c0       	rjmp	.+26     	; 0xa8a <__stack+0x18b>
 a70:	fb 2d       	mov	r31, r11
 a72:	f4 60       	ori	r31, 0x04	; 4
 a74:	bf 2e       	mov	r11, r31
 a76:	09 c0       	rjmp	.+18     	; 0xa8a <__stack+0x18b>
 a78:	34 fe       	sbrs	r3, 4
 a7a:	0a c0       	rjmp	.+20     	; 0xa90 <__stack+0x191>
 a7c:	29 2f       	mov	r18, r25
 a7e:	26 60       	ori	r18, 0x06	; 6
 a80:	b2 2e       	mov	r11, r18
 a82:	06 c0       	rjmp	.+12     	; 0xa90 <__stack+0x191>
 a84:	28 e0       	ldi	r18, 0x08	; 8
 a86:	30 e0       	ldi	r19, 0x00	; 0
 a88:	05 c0       	rjmp	.+10     	; 0xa94 <__stack+0x195>
 a8a:	20 e1       	ldi	r18, 0x10	; 16
 a8c:	30 e0       	ldi	r19, 0x00	; 0
 a8e:	02 c0       	rjmp	.+4      	; 0xa94 <__stack+0x195>
 a90:	20 e1       	ldi	r18, 0x10	; 16
 a92:	32 e0       	ldi	r19, 0x02	; 2
 a94:	f8 01       	movw	r30, r16
 a96:	b7 fe       	sbrs	r11, 7
 a98:	07 c0       	rjmp	.+14     	; 0xaa8 <__stack+0x1a9>
 a9a:	60 81       	ld	r22, Z
 a9c:	71 81       	ldd	r23, Z+1	; 0x01
 a9e:	82 81       	ldd	r24, Z+2	; 0x02
 aa0:	93 81       	ldd	r25, Z+3	; 0x03
 aa2:	0c 5f       	subi	r16, 0xFC	; 252
 aa4:	1f 4f       	sbci	r17, 0xFF	; 255
 aa6:	06 c0       	rjmp	.+12     	; 0xab4 <__stack+0x1b5>
 aa8:	60 81       	ld	r22, Z
 aaa:	71 81       	ldd	r23, Z+1	; 0x01
 aac:	80 e0       	ldi	r24, 0x00	; 0
 aae:	90 e0       	ldi	r25, 0x00	; 0
 ab0:	0e 5f       	subi	r16, 0xFE	; 254
 ab2:	1f 4f       	sbci	r17, 0xFF	; 255
 ab4:	a3 01       	movw	r20, r6
 ab6:	0e 94 03 06 	call	0xc06	; 0xc06 <__ultoa_invert>
 aba:	88 2e       	mov	r8, r24
 abc:	86 18       	sub	r8, r6
 abe:	fb 2d       	mov	r31, r11
 ac0:	ff 77       	andi	r31, 0x7F	; 127
 ac2:	3f 2e       	mov	r3, r31
 ac4:	36 fe       	sbrs	r3, 6
 ac6:	0d c0       	rjmp	.+26     	; 0xae2 <__stack+0x1e3>
 ac8:	23 2d       	mov	r18, r3
 aca:	2e 7f       	andi	r18, 0xFE	; 254
 acc:	a2 2e       	mov	r10, r18
 ace:	89 14       	cp	r8, r9
 ad0:	58 f4       	brcc	.+22     	; 0xae8 <__stack+0x1e9>
 ad2:	34 fe       	sbrs	r3, 4
 ad4:	0b c0       	rjmp	.+22     	; 0xaec <__stack+0x1ed>
 ad6:	32 fc       	sbrc	r3, 2
 ad8:	09 c0       	rjmp	.+18     	; 0xaec <__stack+0x1ed>
 ada:	83 2d       	mov	r24, r3
 adc:	8e 7e       	andi	r24, 0xEE	; 238
 ade:	a8 2e       	mov	r10, r24
 ae0:	05 c0       	rjmp	.+10     	; 0xaec <__stack+0x1ed>
 ae2:	b8 2c       	mov	r11, r8
 ae4:	a3 2c       	mov	r10, r3
 ae6:	03 c0       	rjmp	.+6      	; 0xaee <__stack+0x1ef>
 ae8:	b8 2c       	mov	r11, r8
 aea:	01 c0       	rjmp	.+2      	; 0xaee <__stack+0x1ef>
 aec:	b9 2c       	mov	r11, r9
 aee:	a4 fe       	sbrs	r10, 4
 af0:	0f c0       	rjmp	.+30     	; 0xb10 <__stack+0x211>
 af2:	fe 01       	movw	r30, r28
 af4:	e8 0d       	add	r30, r8
 af6:	f1 1d       	adc	r31, r1
 af8:	80 81       	ld	r24, Z
 afa:	80 33       	cpi	r24, 0x30	; 48
 afc:	21 f4       	brne	.+8      	; 0xb06 <__stack+0x207>
 afe:	9a 2d       	mov	r25, r10
 b00:	99 7e       	andi	r25, 0xE9	; 233
 b02:	a9 2e       	mov	r10, r25
 b04:	09 c0       	rjmp	.+18     	; 0xb18 <__stack+0x219>
 b06:	a2 fe       	sbrs	r10, 2
 b08:	06 c0       	rjmp	.+12     	; 0xb16 <__stack+0x217>
 b0a:	b3 94       	inc	r11
 b0c:	b3 94       	inc	r11
 b0e:	04 c0       	rjmp	.+8      	; 0xb18 <__stack+0x219>
 b10:	8a 2d       	mov	r24, r10
 b12:	86 78       	andi	r24, 0x86	; 134
 b14:	09 f0       	breq	.+2      	; 0xb18 <__stack+0x219>
 b16:	b3 94       	inc	r11
 b18:	a3 fc       	sbrc	r10, 3
 b1a:	11 c0       	rjmp	.+34     	; 0xb3e <__stack+0x23f>
 b1c:	a0 fe       	sbrs	r10, 0
 b1e:	06 c0       	rjmp	.+12     	; 0xb2c <__stack+0x22d>
 b20:	b2 14       	cp	r11, r2
 b22:	88 f4       	brcc	.+34     	; 0xb46 <__stack+0x247>
 b24:	28 0c       	add	r2, r8
 b26:	92 2c       	mov	r9, r2
 b28:	9b 18       	sub	r9, r11
 b2a:	0e c0       	rjmp	.+28     	; 0xb48 <__stack+0x249>
 b2c:	b2 14       	cp	r11, r2
 b2e:	60 f4       	brcc	.+24     	; 0xb48 <__stack+0x249>
 b30:	b6 01       	movw	r22, r12
 b32:	80 e2       	ldi	r24, 0x20	; 32
 b34:	90 e0       	ldi	r25, 0x00	; 0
 b36:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 b3a:	b3 94       	inc	r11
 b3c:	f7 cf       	rjmp	.-18     	; 0xb2c <__stack+0x22d>
 b3e:	b2 14       	cp	r11, r2
 b40:	18 f4       	brcc	.+6      	; 0xb48 <__stack+0x249>
 b42:	2b 18       	sub	r2, r11
 b44:	02 c0       	rjmp	.+4      	; 0xb4a <__stack+0x24b>
 b46:	98 2c       	mov	r9, r8
 b48:	21 2c       	mov	r2, r1
 b4a:	a4 fe       	sbrs	r10, 4
 b4c:	10 c0       	rjmp	.+32     	; 0xb6e <__stack+0x26f>
 b4e:	b6 01       	movw	r22, r12
 b50:	80 e3       	ldi	r24, 0x30	; 48
 b52:	90 e0       	ldi	r25, 0x00	; 0
 b54:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 b58:	a2 fe       	sbrs	r10, 2
 b5a:	17 c0       	rjmp	.+46     	; 0xb8a <__stack+0x28b>
 b5c:	a1 fc       	sbrc	r10, 1
 b5e:	03 c0       	rjmp	.+6      	; 0xb66 <__stack+0x267>
 b60:	88 e7       	ldi	r24, 0x78	; 120
 b62:	90 e0       	ldi	r25, 0x00	; 0
 b64:	02 c0       	rjmp	.+4      	; 0xb6a <__stack+0x26b>
 b66:	88 e5       	ldi	r24, 0x58	; 88
 b68:	90 e0       	ldi	r25, 0x00	; 0
 b6a:	b6 01       	movw	r22, r12
 b6c:	0c c0       	rjmp	.+24     	; 0xb86 <__stack+0x287>
 b6e:	8a 2d       	mov	r24, r10
 b70:	86 78       	andi	r24, 0x86	; 134
 b72:	59 f0       	breq	.+22     	; 0xb8a <__stack+0x28b>
 b74:	a1 fe       	sbrs	r10, 1
 b76:	02 c0       	rjmp	.+4      	; 0xb7c <__stack+0x27d>
 b78:	8b e2       	ldi	r24, 0x2B	; 43
 b7a:	01 c0       	rjmp	.+2      	; 0xb7e <__stack+0x27f>
 b7c:	80 e2       	ldi	r24, 0x20	; 32
 b7e:	a7 fc       	sbrc	r10, 7
 b80:	8d e2       	ldi	r24, 0x2D	; 45
 b82:	b6 01       	movw	r22, r12
 b84:	90 e0       	ldi	r25, 0x00	; 0
 b86:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 b8a:	89 14       	cp	r8, r9
 b8c:	38 f4       	brcc	.+14     	; 0xb9c <__stack+0x29d>
 b8e:	b6 01       	movw	r22, r12
 b90:	80 e3       	ldi	r24, 0x30	; 48
 b92:	90 e0       	ldi	r25, 0x00	; 0
 b94:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 b98:	9a 94       	dec	r9
 b9a:	f7 cf       	rjmp	.-18     	; 0xb8a <__stack+0x28b>
 b9c:	8a 94       	dec	r8
 b9e:	f3 01       	movw	r30, r6
 ba0:	e8 0d       	add	r30, r8
 ba2:	f1 1d       	adc	r31, r1
 ba4:	80 81       	ld	r24, Z
 ba6:	b6 01       	movw	r22, r12
 ba8:	90 e0       	ldi	r25, 0x00	; 0
 baa:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 bae:	81 10       	cpse	r8, r1
 bb0:	f5 cf       	rjmp	.-22     	; 0xb9c <__stack+0x29d>
 bb2:	22 20       	and	r2, r2
 bb4:	09 f4       	brne	.+2      	; 0xbb8 <__stack+0x2b9>
 bb6:	42 ce       	rjmp	.-892    	; 0x83c <vfprintf+0x24>
 bb8:	b6 01       	movw	r22, r12
 bba:	80 e2       	ldi	r24, 0x20	; 32
 bbc:	90 e0       	ldi	r25, 0x00	; 0
 bbe:	0e 94 8a 03 	call	0x714	; 0x714 <fputc>
 bc2:	2a 94       	dec	r2
 bc4:	f6 cf       	rjmp	.-20     	; 0xbb2 <__stack+0x2b3>
 bc6:	f6 01       	movw	r30, r12
 bc8:	86 81       	ldd	r24, Z+6	; 0x06
 bca:	97 81       	ldd	r25, Z+7	; 0x07
 bcc:	02 c0       	rjmp	.+4      	; 0xbd2 <__stack+0x2d3>
 bce:	8f ef       	ldi	r24, 0xFF	; 255
 bd0:	9f ef       	ldi	r25, 0xFF	; 255
 bd2:	2b 96       	adiw	r28, 0x0b	; 11
 bd4:	e2 e1       	ldi	r30, 0x12	; 18
 bd6:	0c 94 7d 06 	jmp	0xcfa	; 0xcfa <__epilogue_restores__>

00000bda <strnlen_P>:
 bda:	fc 01       	movw	r30, r24
 bdc:	05 90       	lpm	r0, Z+
 bde:	61 50       	subi	r22, 0x01	; 1
 be0:	70 40       	sbci	r23, 0x00	; 0
 be2:	01 10       	cpse	r0, r1
 be4:	d8 f7       	brcc	.-10     	; 0xbdc <strnlen_P+0x2>
 be6:	80 95       	com	r24
 be8:	90 95       	com	r25
 bea:	8e 0f       	add	r24, r30
 bec:	9f 1f       	adc	r25, r31
 bee:	08 95       	ret

00000bf0 <strnlen>:
 bf0:	fc 01       	movw	r30, r24
 bf2:	61 50       	subi	r22, 0x01	; 1
 bf4:	70 40       	sbci	r23, 0x00	; 0
 bf6:	01 90       	ld	r0, Z+
 bf8:	01 10       	cpse	r0, r1
 bfa:	d8 f7       	brcc	.-10     	; 0xbf2 <strnlen+0x2>
 bfc:	80 95       	com	r24
 bfe:	90 95       	com	r25
 c00:	8e 0f       	add	r24, r30
 c02:	9f 1f       	adc	r25, r31
 c04:	08 95       	ret

00000c06 <__ultoa_invert>:
 c06:	fa 01       	movw	r30, r20
 c08:	aa 27       	eor	r26, r26
 c0a:	28 30       	cpi	r18, 0x08	; 8
 c0c:	51 f1       	breq	.+84     	; 0xc62 <__ultoa_invert+0x5c>
 c0e:	20 31       	cpi	r18, 0x10	; 16
 c10:	81 f1       	breq	.+96     	; 0xc72 <__ultoa_invert+0x6c>
 c12:	e8 94       	clt
 c14:	6f 93       	push	r22
 c16:	6e 7f       	andi	r22, 0xFE	; 254
 c18:	6e 5f       	subi	r22, 0xFE	; 254
 c1a:	7f 4f       	sbci	r23, 0xFF	; 255
 c1c:	8f 4f       	sbci	r24, 0xFF	; 255
 c1e:	9f 4f       	sbci	r25, 0xFF	; 255
 c20:	af 4f       	sbci	r26, 0xFF	; 255
 c22:	b1 e0       	ldi	r27, 0x01	; 1
 c24:	3e d0       	rcall	.+124    	; 0xca2 <__ultoa_invert+0x9c>
 c26:	b4 e0       	ldi	r27, 0x04	; 4
 c28:	3c d0       	rcall	.+120    	; 0xca2 <__ultoa_invert+0x9c>
 c2a:	67 0f       	add	r22, r23
 c2c:	78 1f       	adc	r23, r24
 c2e:	89 1f       	adc	r24, r25
 c30:	9a 1f       	adc	r25, r26
 c32:	a1 1d       	adc	r26, r1
 c34:	68 0f       	add	r22, r24
 c36:	79 1f       	adc	r23, r25
 c38:	8a 1f       	adc	r24, r26
 c3a:	91 1d       	adc	r25, r1
 c3c:	a1 1d       	adc	r26, r1
 c3e:	6a 0f       	add	r22, r26
 c40:	71 1d       	adc	r23, r1
 c42:	81 1d       	adc	r24, r1
 c44:	91 1d       	adc	r25, r1
 c46:	a1 1d       	adc	r26, r1
 c48:	20 d0       	rcall	.+64     	; 0xc8a <__ultoa_invert+0x84>
 c4a:	09 f4       	brne	.+2      	; 0xc4e <__ultoa_invert+0x48>
 c4c:	68 94       	set
 c4e:	3f 91       	pop	r19
 c50:	2a e0       	ldi	r18, 0x0A	; 10
 c52:	26 9f       	mul	r18, r22
 c54:	11 24       	eor	r1, r1
 c56:	30 19       	sub	r19, r0
 c58:	30 5d       	subi	r19, 0xD0	; 208
 c5a:	31 93       	st	Z+, r19
 c5c:	de f6       	brtc	.-74     	; 0xc14 <__ultoa_invert+0xe>
 c5e:	cf 01       	movw	r24, r30
 c60:	08 95       	ret
 c62:	46 2f       	mov	r20, r22
 c64:	47 70       	andi	r20, 0x07	; 7
 c66:	40 5d       	subi	r20, 0xD0	; 208
 c68:	41 93       	st	Z+, r20
 c6a:	b3 e0       	ldi	r27, 0x03	; 3
 c6c:	0f d0       	rcall	.+30     	; 0xc8c <__ultoa_invert+0x86>
 c6e:	c9 f7       	brne	.-14     	; 0xc62 <__ultoa_invert+0x5c>
 c70:	f6 cf       	rjmp	.-20     	; 0xc5e <__ultoa_invert+0x58>
 c72:	46 2f       	mov	r20, r22
 c74:	4f 70       	andi	r20, 0x0F	; 15
 c76:	40 5d       	subi	r20, 0xD0	; 208
 c78:	4a 33       	cpi	r20, 0x3A	; 58
 c7a:	18 f0       	brcs	.+6      	; 0xc82 <__ultoa_invert+0x7c>
 c7c:	49 5d       	subi	r20, 0xD9	; 217
 c7e:	31 fd       	sbrc	r19, 1
 c80:	40 52       	subi	r20, 0x20	; 32
 c82:	41 93       	st	Z+, r20
 c84:	02 d0       	rcall	.+4      	; 0xc8a <__ultoa_invert+0x84>
 c86:	a9 f7       	brne	.-22     	; 0xc72 <__ultoa_invert+0x6c>
 c88:	ea cf       	rjmp	.-44     	; 0xc5e <__ultoa_invert+0x58>
 c8a:	b4 e0       	ldi	r27, 0x04	; 4
 c8c:	a6 95       	lsr	r26
 c8e:	97 95       	ror	r25
 c90:	87 95       	ror	r24
 c92:	77 95       	ror	r23
 c94:	67 95       	ror	r22
 c96:	ba 95       	dec	r27
 c98:	c9 f7       	brne	.-14     	; 0xc8c <__ultoa_invert+0x86>
 c9a:	00 97       	sbiw	r24, 0x00	; 0
 c9c:	61 05       	cpc	r22, r1
 c9e:	71 05       	cpc	r23, r1
 ca0:	08 95       	ret
 ca2:	9b 01       	movw	r18, r22
 ca4:	ac 01       	movw	r20, r24
 ca6:	0a 2e       	mov	r0, r26
 ca8:	06 94       	lsr	r0
 caa:	57 95       	ror	r21
 cac:	47 95       	ror	r20
 cae:	37 95       	ror	r19
 cb0:	27 95       	ror	r18
 cb2:	ba 95       	dec	r27
 cb4:	c9 f7       	brne	.-14     	; 0xca8 <__ultoa_invert+0xa2>
 cb6:	62 0f       	add	r22, r18
 cb8:	73 1f       	adc	r23, r19
 cba:	84 1f       	adc	r24, r20
 cbc:	95 1f       	adc	r25, r21
 cbe:	a0 1d       	adc	r26, r0
 cc0:	08 95       	ret

00000cc2 <__prologue_saves__>:
 cc2:	2f 92       	push	r2
 cc4:	3f 92       	push	r3
 cc6:	4f 92       	push	r4
 cc8:	5f 92       	push	r5
 cca:	6f 92       	push	r6
 ccc:	7f 92       	push	r7
 cce:	8f 92       	push	r8
 cd0:	9f 92       	push	r9
 cd2:	af 92       	push	r10
 cd4:	bf 92       	push	r11
 cd6:	cf 92       	push	r12
 cd8:	df 92       	push	r13
 cda:	ef 92       	push	r14
 cdc:	ff 92       	push	r15
 cde:	0f 93       	push	r16
 ce0:	1f 93       	push	r17
 ce2:	cf 93       	push	r28
 ce4:	df 93       	push	r29
 ce6:	cd b7       	in	r28, 0x3d	; 61
 ce8:	de b7       	in	r29, 0x3e	; 62
 cea:	ca 1b       	sub	r28, r26
 cec:	db 0b       	sbc	r29, r27
 cee:	0f b6       	in	r0, 0x3f	; 63
 cf0:	f8 94       	cli
 cf2:	de bf       	out	0x3e, r29	; 62
 cf4:	0f be       	out	0x3f, r0	; 63
 cf6:	cd bf       	out	0x3d, r28	; 61
 cf8:	09 94       	ijmp

00000cfa <__epilogue_restores__>:
 cfa:	2a 88       	ldd	r2, Y+18	; 0x12
 cfc:	39 88       	ldd	r3, Y+17	; 0x11
 cfe:	48 88       	ldd	r4, Y+16	; 0x10
 d00:	5f 84       	ldd	r5, Y+15	; 0x0f
 d02:	6e 84       	ldd	r6, Y+14	; 0x0e
 d04:	7d 84       	ldd	r7, Y+13	; 0x0d
 d06:	8c 84       	ldd	r8, Y+12	; 0x0c
 d08:	9b 84       	ldd	r9, Y+11	; 0x0b
 d0a:	aa 84       	ldd	r10, Y+10	; 0x0a
 d0c:	b9 84       	ldd	r11, Y+9	; 0x09
 d0e:	c8 84       	ldd	r12, Y+8	; 0x08
 d10:	df 80       	ldd	r13, Y+7	; 0x07
 d12:	ee 80       	ldd	r14, Y+6	; 0x06
 d14:	fd 80       	ldd	r15, Y+5	; 0x05
 d16:	0c 81       	ldd	r16, Y+4	; 0x04
 d18:	1b 81       	ldd	r17, Y+3	; 0x03
 d1a:	aa 81       	ldd	r26, Y+2	; 0x02
 d1c:	b9 81       	ldd	r27, Y+1	; 0x01
 d1e:	ce 0f       	add	r28, r30
 d20:	d1 1d       	adc	r29, r1
 d22:	0f b6       	in	r0, 0x3f	; 63
 d24:	f8 94       	cli
 d26:	de bf       	out	0x3e, r29	; 62
 d28:	0f be       	out	0x3f, r0	; 63
 d2a:	cd bf       	out	0x3d, r28	; 61
 d2c:	ed 01       	movw	r28, r26
 d2e:	08 95       	ret

00000d30 <_exit>:
 d30:	f8 94       	cli

00000d32 <__stop_program>:
 d32:	ff cf       	rjmp	.-2      	; 0xd32 <__stop_program>
