
Dareduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000086  00800100  00000fe2  00001076  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fe2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000020  00800186  00800186  000010fc  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000010fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001158  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000120  00000000  00000000  00001198  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011c7  00000000  00000000  000012b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b28  00000000  00000000  0000247f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000098c  00000000  00000000  00002fa7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00003934  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005b3  00000000  00000000  00003bb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000781  00000000  00000000  00004163  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000e0  00000000  00000000  000048e4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 77 02 	jmp	0x4ee	; 0x4ee <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 ee       	ldi	r30, 0xE2	; 226
  7c:	ff e0       	ldi	r31, 0x0F	; 15
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 38       	cpi	r26, 0x86	; 134
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e8       	ldi	r26, 0x86	; 134
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a6 3a       	cpi	r26, 0xA6	; 166
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 d5 00 	call	0x1aa	; 0x1aa <main>
  9e:	0c 94 ef 07 	jmp	0xfde	; 0xfde <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <rTask>:

void rTask()
{
	while (1)
	{
		printf("\nrTask");
  a6:	c4 e1       	ldi	r28, 0x14	; 20
  a8:	d1 e0       	ldi	r29, 0x01	; 1
  aa:	df 93       	push	r29
  ac:	cf 93       	push	r28
  ae:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
  b2:	0f 90       	pop	r0
  b4:	0f 90       	pop	r0
  b6:	f9 cf       	rjmp	.-14     	; 0xaa <rTask+0x4>

000000b8 <qTask>:

void qTask()
{
	while (1)
	{
		printf("\nqTask");
  b8:	cb e1       	ldi	r28, 0x1B	; 27
  ba:	d1 e0       	ldi	r29, 0x01	; 1
  bc:	df 93       	push	r29
  be:	cf 93       	push	r28
  c0:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
  c4:	0f 90       	pop	r0
  c6:	0f 90       	pop	r0
  c8:	f9 cf       	rjmp	.-14     	; 0xbc <qTask+0x4>

000000ca <onTask>:
void onTask(void)
{
	while (1)
	{
		OSwait(semaphore);
		printf("\nOnTask %d", (*semaphore));
  ca:	c2 e2       	ldi	r28, 0x22	; 34
  cc:	d1 e0       	ldi	r29, 0x01	; 1

void onTask(void)
{
	while (1)
	{
		OSwait(semaphore);
  ce:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <semaphore>
  d2:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <semaphore+0x1>
  d6:	0e 94 ef 02 	call	0x5de	; 0x5de <OSwait>
		printf("\nOnTask %d", (*semaphore));
  da:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <semaphore>
  de:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <semaphore+0x1>
  e2:	80 81       	ld	r24, Z
  e4:	91 81       	ldd	r25, Z+1	; 0x01
  e6:	9f 93       	push	r25
  e8:	8f 93       	push	r24
  ea:	df 93       	push	r29
  ec:	cf 93       	push	r28
  ee:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
		pinWrite(13,1);
  f2:	61 e0       	ldi	r22, 0x01	; 1
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	8d e0       	ldi	r24, 0x0D	; 13
  f8:	90 e0       	ldi	r25, 0x00	; 0
  fa:	0e 94 60 01 	call	0x2c0	; 0x2c0 <pinWrite>
		OSsignal(semaphore);
  fe:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <semaphore>
 102:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <semaphore+0x1>
 106:	0e 94 07 03 	call	0x60e	; 0x60e <OSsignal>
		printf("\nOnTask %d", (*semaphore));
 10a:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <semaphore>
 10e:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <semaphore+0x1>
 112:	80 81       	ld	r24, Z
 114:	91 81       	ldd	r25, Z+1	; 0x01
 116:	9f 93       	push	r25
 118:	8f 93       	push	r24
 11a:	df 93       	push	r29
 11c:	cf 93       	push	r28
 11e:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
 122:	8d b7       	in	r24, 0x3d	; 61
 124:	9e b7       	in	r25, 0x3e	; 62
 126:	08 96       	adiw	r24, 0x08	; 8
 128:	0f b6       	in	r0, 0x3f	; 63
 12a:	f8 94       	cli
 12c:	9e bf       	out	0x3e, r25	; 62
 12e:	0f be       	out	0x3f, r0	; 63
 130:	8d bf       	out	0x3d, r24	; 61
 132:	cd cf       	rjmp	.-102    	; 0xce <onTask+0x4>

00000134 <offTask>:
void offTask(void)
{
	while (1)
	{
		OSwait(semaphore);
		printf("\nOffTask %d", (*semaphore));
 134:	cd e2       	ldi	r28, 0x2D	; 45
 136:	d1 e0       	ldi	r29, 0x01	; 1
		printf("\nOfftask");
 138:	09 e3       	ldi	r16, 0x39	; 57
 13a:	11 e0       	ldi	r17, 0x01	; 1

void offTask(void)
{
	while (1)
	{
		OSwait(semaphore);
 13c:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <semaphore>
 140:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <semaphore+0x1>
 144:	0e 94 ef 02 	call	0x5de	; 0x5de <OSwait>
		printf("\nOffTask %d", (*semaphore));
 148:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <semaphore>
 14c:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <semaphore+0x1>
 150:	80 81       	ld	r24, Z
 152:	91 81       	ldd	r25, Z+1	; 0x01
 154:	9f 93       	push	r25
 156:	8f 93       	push	r24
 158:	df 93       	push	r29
 15a:	cf 93       	push	r28
 15c:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
		printf("\nOfftask");
 160:	1f 93       	push	r17
 162:	0f 93       	push	r16
 164:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
		pinWrite(13,0);
 168:	60 e0       	ldi	r22, 0x00	; 0
 16a:	70 e0       	ldi	r23, 0x00	; 0
 16c:	8d e0       	ldi	r24, 0x0D	; 13
 16e:	90 e0       	ldi	r25, 0x00	; 0
 170:	0e 94 60 01 	call	0x2c0	; 0x2c0 <pinWrite>
		OSsignal(semaphore);
 174:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <semaphore>
 178:	90 91 89 01 	lds	r25, 0x0189	; 0x800189 <semaphore+0x1>
 17c:	0e 94 07 03 	call	0x60e	; 0x60e <OSsignal>
		printf("\nOffTask %d", (*semaphore));
 180:	e0 91 88 01 	lds	r30, 0x0188	; 0x800188 <semaphore>
 184:	f0 91 89 01 	lds	r31, 0x0189	; 0x800189 <semaphore+0x1>
 188:	80 81       	ld	r24, Z
 18a:	91 81       	ldd	r25, Z+1	; 0x01
 18c:	9f 93       	push	r25
 18e:	8f 93       	push	r24
 190:	df 93       	push	r29
 192:	cf 93       	push	r28
 194:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
 198:	8d b7       	in	r24, 0x3d	; 61
 19a:	9e b7       	in	r25, 0x3e	; 62
 19c:	0a 96       	adiw	r24, 0x0a	; 10
 19e:	0f b6       	in	r0, 0x3f	; 63
 1a0:	f8 94       	cli
 1a2:	9e bf       	out	0x3e, r25	; 62
 1a4:	0f be       	out	0x3f, r0	; 63
 1a6:	8d bf       	out	0x3d, r24	; 61
 1a8:	c9 cf       	rjmp	.-110    	; 0x13c <offTask+0x8>

000001aa <main>:
volatile int *semaphore;
volatile int sem;

int main (void)
{
	consoleDisplay();
 1aa:	0e 94 ab 03 	call	0x756	; 0x756 <consoleDisplay>
	pinConfig(13,OUTPUT);
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	70 e0       	ldi	r23, 0x00	; 0
 1b2:	8d e0       	ldi	r24, 0x0D	; 13
 1b4:	90 e0       	ldi	r25, 0x00	; 0
 1b6:	0e 94 15 01 	call	0x22a	; 0x22a <pinConfig>
	
	sem = 2;
 1ba:	82 e0       	ldi	r24, 0x02	; 2
 1bc:	90 e0       	ldi	r25, 0x00	; 0
 1be:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <__data_end+0x1>
 1c2:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <__data_end>
	semaphore = &sem;
 1c6:	86 e8       	ldi	r24, 0x86	; 134
 1c8:	91 e0       	ldi	r25, 0x01	; 1
 1ca:	90 93 89 01 	sts	0x0189, r25	; 0x800189 <semaphore+0x1>
 1ce:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <semaphore>
	
	OSinit();
 1d2:	0e 94 bd 01 	call	0x37a	; 0x37a <OSinit>
	
	createTask(&onTask, 20, 150, "onTask");
 1d6:	22 e4       	ldi	r18, 0x42	; 66
 1d8:	31 e0       	ldi	r19, 0x01	; 1
 1da:	46 e9       	ldi	r20, 0x96	; 150
 1dc:	50 e0       	ldi	r21, 0x00	; 0
 1de:	64 e1       	ldi	r22, 0x14	; 20
 1e0:	85 e6       	ldi	r24, 0x65	; 101
 1e2:	90 e0       	ldi	r25, 0x00	; 0
 1e4:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <createTask>
	createTask(&rTask, 1, 150, "rTask");
 1e8:	25 e1       	ldi	r18, 0x15	; 21
 1ea:	31 e0       	ldi	r19, 0x01	; 1
 1ec:	46 e9       	ldi	r20, 0x96	; 150
 1ee:	50 e0       	ldi	r21, 0x00	; 0
 1f0:	61 e0       	ldi	r22, 0x01	; 1
 1f2:	83 e5       	ldi	r24, 0x53	; 83
 1f4:	90 e0       	ldi	r25, 0x00	; 0
 1f6:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <createTask>
	createTask(&qTask, 12, 150, "qTask");
 1fa:	2c e1       	ldi	r18, 0x1C	; 28
 1fc:	31 e0       	ldi	r19, 0x01	; 1
 1fe:	46 e9       	ldi	r20, 0x96	; 150
 200:	50 e0       	ldi	r21, 0x00	; 0
 202:	6c e0       	ldi	r22, 0x0C	; 12
 204:	8c e5       	ldi	r24, 0x5C	; 92
 206:	90 e0       	ldi	r25, 0x00	; 0
 208:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <createTask>
	createTask(&offTask, 2, 150, "offTask");
 20c:	29 e4       	ldi	r18, 0x49	; 73
 20e:	31 e0       	ldi	r19, 0x01	; 1
 210:	46 e9       	ldi	r20, 0x96	; 150
 212:	50 e0       	ldi	r21, 0x00	; 0
 214:	62 e0       	ldi	r22, 0x02	; 2
 216:	8a e9       	ldi	r24, 0x9A	; 154
 218:	90 e0       	ldi	r25, 0x00	; 0
 21a:	0e 94 f8 01 	call	0x3f0	; 0x3f0 <createTask>

	OSlaunch(ROUNDROBIN);
 21e:	80 e5       	ldi	r24, 0x50	; 80
 220:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <OSlaunch>

	return 0;
}
 224:	80 e0       	ldi	r24, 0x00	; 0
 226:	90 e0       	ldi	r25, 0x00	; 0
 228:	08 95       	ret

0000022a <pinConfig>:
#include "gpio.h"

void pinConfig(int pin, int io)
{
	if((pin>=0)&&(pin<=7))
 22a:	88 30       	cpi	r24, 0x08	; 8
 22c:	91 05       	cpc	r25, r1
 22e:	00 f5       	brcc	.+64     	; 0x270 <pinConfig+0x46>
	{
		if(io == OUTPUT)
 230:	61 30       	cpi	r22, 0x01	; 1
 232:	71 05       	cpc	r23, r1
 234:	69 f4       	brne	.+26     	; 0x250 <pinConfig+0x26>
		{
			DDRD |= (1<<pin);
 236:	4a b1       	in	r20, 0x0a	; 10
 238:	21 e0       	ldi	r18, 0x01	; 1
 23a:	30 e0       	ldi	r19, 0x00	; 0
 23c:	b9 01       	movw	r22, r18
 23e:	02 c0       	rjmp	.+4      	; 0x244 <pinConfig+0x1a>
 240:	66 0f       	add	r22, r22
 242:	77 1f       	adc	r23, r23
 244:	8a 95       	dec	r24
 246:	e2 f7       	brpl	.-8      	; 0x240 <pinConfig+0x16>
 248:	cb 01       	movw	r24, r22
 24a:	84 2b       	or	r24, r20
 24c:	8a b9       	out	0x0a, r24	; 10
 24e:	08 95       	ret
		}
		
		if(io == INPUT)
 250:	67 2b       	or	r22, r23
 252:	a9 f5       	brne	.+106    	; 0x2be <pinConfig+0x94>
		{
			DDRD &=~ (1<<pin);
 254:	4a b1       	in	r20, 0x0a	; 10
 256:	21 e0       	ldi	r18, 0x01	; 1
 258:	30 e0       	ldi	r19, 0x00	; 0
 25a:	b9 01       	movw	r22, r18
 25c:	02 c0       	rjmp	.+4      	; 0x262 <pinConfig+0x38>
 25e:	66 0f       	add	r22, r22
 260:	77 1f       	adc	r23, r23
 262:	8a 95       	dec	r24
 264:	e2 f7       	brpl	.-8      	; 0x25e <pinConfig+0x34>
 266:	cb 01       	movw	r24, r22
 268:	80 95       	com	r24
 26a:	84 23       	and	r24, r20
 26c:	8a b9       	out	0x0a, r24	; 10
 26e:	08 95       	ret
		}
	}	
	
	else if ((pin>=8)&&(pin<=13))
 270:	9c 01       	movw	r18, r24
 272:	28 50       	subi	r18, 0x08	; 8
 274:	31 09       	sbc	r19, r1
 276:	26 30       	cpi	r18, 0x06	; 6
 278:	31 05       	cpc	r19, r1
 27a:	08 f5       	brcc	.+66     	; 0x2be <pinConfig+0x94>
	{
		if(io == OUTPUT)
 27c:	61 30       	cpi	r22, 0x01	; 1
 27e:	71 05       	cpc	r23, r1
 280:	71 f4       	brne	.+28     	; 0x29e <pinConfig+0x74>
		{
			DDRB |= (1<<(pin-8));
 282:	44 b1       	in	r20, 0x04	; 4
 284:	c9 01       	movw	r24, r18
 286:	21 e0       	ldi	r18, 0x01	; 1
 288:	30 e0       	ldi	r19, 0x00	; 0
 28a:	b9 01       	movw	r22, r18
 28c:	02 c0       	rjmp	.+4      	; 0x292 <pinConfig+0x68>
 28e:	66 0f       	add	r22, r22
 290:	77 1f       	adc	r23, r23
 292:	8a 95       	dec	r24
 294:	e2 f7       	brpl	.-8      	; 0x28e <pinConfig+0x64>
 296:	cb 01       	movw	r24, r22
 298:	84 2b       	or	r24, r20
 29a:	84 b9       	out	0x04, r24	; 4
 29c:	08 95       	ret
		}
		
		if(io == INPUT)
 29e:	67 2b       	or	r22, r23
 2a0:	71 f4       	brne	.+28     	; 0x2be <pinConfig+0x94>
		{
			DDRB &=~ (1<<(pin-8));
 2a2:	44 b1       	in	r20, 0x04	; 4
 2a4:	08 97       	sbiw	r24, 0x08	; 8
 2a6:	21 e0       	ldi	r18, 0x01	; 1
 2a8:	30 e0       	ldi	r19, 0x00	; 0
 2aa:	b9 01       	movw	r22, r18
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <pinConfig+0x88>
 2ae:	66 0f       	add	r22, r22
 2b0:	77 1f       	adc	r23, r23
 2b2:	8a 95       	dec	r24
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <pinConfig+0x84>
 2b6:	cb 01       	movw	r24, r22
 2b8:	80 95       	com	r24
 2ba:	84 23       	and	r24, r20
 2bc:	84 b9       	out	0x04, r24	; 4
 2be:	08 95       	ret

000002c0 <pinWrite>:
	}
}

void pinWrite(int pin, int val)
{
	if((pin>=0)&&(pin<=7))
 2c0:	88 30       	cpi	r24, 0x08	; 8
 2c2:	91 05       	cpc	r25, r1
 2c4:	20 f5       	brcc	.+72     	; 0x30e <pinWrite+0x4e>
	{
		if (val > 0)
 2c6:	16 16       	cp	r1, r22
 2c8:	17 06       	cpc	r1, r23
 2ca:	5c f4       	brge	.+22     	; 0x2e2 <pinWrite+0x22>
		{
			PORTD |= (1<<pin);
 2cc:	4b b1       	in	r20, 0x0b	; 11
 2ce:	21 e0       	ldi	r18, 0x01	; 1
 2d0:	30 e0       	ldi	r19, 0x00	; 0
 2d2:	08 2e       	mov	r0, r24
 2d4:	02 c0       	rjmp	.+4      	; 0x2da <pinWrite+0x1a>
 2d6:	22 0f       	add	r18, r18
 2d8:	33 1f       	adc	r19, r19
 2da:	0a 94       	dec	r0
 2dc:	e2 f7       	brpl	.-8      	; 0x2d6 <pinWrite+0x16>
 2de:	24 2b       	or	r18, r20
 2e0:	2b b9       	out	0x0b, r18	; 11
		}
		
		if (val == 0)
 2e2:	61 15       	cp	r22, r1
 2e4:	71 05       	cpc	r23, r1
 2e6:	99 f4       	brne	.+38     	; 0x30e <pinWrite+0x4e>
		{
			PORTD &=~ (1<<pin);
 2e8:	4b b1       	in	r20, 0x0b	; 11
 2ea:	21 e0       	ldi	r18, 0x01	; 1
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	08 2e       	mov	r0, r24
 2f0:	02 c0       	rjmp	.+4      	; 0x2f6 <pinWrite+0x36>
 2f2:	22 0f       	add	r18, r18
 2f4:	33 1f       	adc	r19, r19
 2f6:	0a 94       	dec	r0
 2f8:	e2 f7       	brpl	.-8      	; 0x2f2 <pinWrite+0x32>
 2fa:	20 95       	com	r18
 2fc:	24 23       	and	r18, r20
 2fe:	2b b9       	out	0x0b, r18	; 11
		}
	}
	
	if ((pin>=8)&&(pin<=13))
 300:	9c 01       	movw	r18, r24
 302:	28 50       	subi	r18, 0x08	; 8
 304:	31 09       	sbc	r19, r1
 306:	26 30       	cpi	r18, 0x06	; 6
 308:	31 05       	cpc	r19, r1
 30a:	b8 f0       	brcs	.+46     	; 0x33a <pinWrite+0x7a>
 30c:	08 95       	ret
 30e:	9c 01       	movw	r18, r24
 310:	28 50       	subi	r18, 0x08	; 8
 312:	31 09       	sbc	r19, r1
 314:	26 30       	cpi	r18, 0x06	; 6
 316:	31 05       	cpc	r19, r1
 318:	f0 f4       	brcc	.+60     	; 0x356 <pinWrite+0x96>
	{
		if (val > 0)
 31a:	16 16       	cp	r1, r22
 31c:	17 06       	cpc	r1, r23
 31e:	5c f4       	brge	.+22     	; 0x336 <pinWrite+0x76>
		{
			PORTB |= (1<<(pin-8));
 320:	45 b1       	in	r20, 0x05	; 5
 322:	f9 01       	movw	r30, r18
 324:	21 e0       	ldi	r18, 0x01	; 1
 326:	30 e0       	ldi	r19, 0x00	; 0
 328:	02 c0       	rjmp	.+4      	; 0x32e <pinWrite+0x6e>
 32a:	22 0f       	add	r18, r18
 32c:	33 1f       	adc	r19, r19
 32e:	ea 95       	dec	r30
 330:	e2 f7       	brpl	.-8      	; 0x32a <pinWrite+0x6a>
 332:	24 2b       	or	r18, r20
 334:	25 b9       	out	0x05, r18	; 5
		}
		
		if (val == 0)
 336:	67 2b       	or	r22, r23
 338:	71 f4       	brne	.+28     	; 0x356 <pinWrite+0x96>
		{
			PORTB &=~ (1<<(pin-8));
 33a:	45 b1       	in	r20, 0x05	; 5
 33c:	08 97       	sbiw	r24, 0x08	; 8
 33e:	21 e0       	ldi	r18, 0x01	; 1
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	b9 01       	movw	r22, r18
 344:	02 c0       	rjmp	.+4      	; 0x34a <pinWrite+0x8a>
 346:	66 0f       	add	r22, r22
 348:	77 1f       	adc	r23, r23
 34a:	8a 95       	dec	r24
 34c:	e2 f7       	brpl	.-8      	; 0x346 <pinWrite+0x86>
 34e:	cb 01       	movw	r24, r22
 350:	80 95       	com	r24
 352:	84 23       	and	r24, r20
 354:	85 b9       	out	0x05, r24	; 5
 356:	08 95       	ret

00000358 <timerInit>:
	asm volatile("ret");
}

void OSsuspend(void)
{
	TIMER1_COMPA_vect();
 358:	e1 e8       	ldi	r30, 0x81	; 129
 35a:	f0 e0       	ldi	r31, 0x00	; 0
 35c:	80 81       	ld	r24, Z
 35e:	8c 60       	ori	r24, 0x0C	; 12
 360:	80 83       	st	Z, r24
 362:	ef e6       	ldi	r30, 0x6F	; 111
 364:	f0 e0       	ldi	r31, 0x00	; 0
 366:	80 81       	ld	r24, Z
 368:	82 60       	ori	r24, 0x02	; 2
 36a:	80 83       	st	Z, r24
 36c:	8c e3       	ldi	r24, 0x3C	; 60
 36e:	90 ef       	ldi	r25, 0xF0	; 240
 370:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__DATA_REGION_ORIGIN__+0x29>
 374:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__DATA_REGION_ORIGIN__+0x28>
 378:	08 95       	ret

0000037a <OSinit>:
 37a:	f8 94       	cli
 37c:	0e 94 ac 01 	call	0x358	; 0x358 <timerInit>
 380:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <head>
 384:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <head+0x1>
 388:	11 86       	std	Z+9, r1	; 0x09
 38a:	10 86       	std	Z+8, r1	; 0x08
 38c:	83 e0       	ldi	r24, 0x03	; 3
 38e:	84 87       	std	Z+12, r24	; 0x0c
 390:	f0 93 91 01 	sts	0x0191, r31	; 0x800191 <runPt+0x1>
 394:	e0 93 90 01 	sts	0x0190, r30	; 0x800190 <runPt>
 398:	10 92 97 01 	sts	0x0197, r1	; 0x800197 <stackUsed+0x1>
 39c:	10 92 96 01 	sts	0x0196, r1	; 0x800196 <stackUsed>
 3a0:	10 92 8e 01 	sts	0x018E, r1	; 0x80018e <tasksCreated>
 3a4:	08 95       	ret

000003a6 <OSlaunch>:
 3a6:	2a e9       	ldi	r18, 0x9A	; 154
 3a8:	31 e0       	ldi	r19, 0x01	; 1
 3aa:	30 93 8b 01 	sts	0x018B, r19	; 0x80018b <currSp+0x1>
 3ae:	20 93 8a 01 	sts	0x018A, r18	; 0x80018a <currSp>
 3b2:	80 93 8f 01 	sts	0x018F, r24	; 0x80018f <schedulerType>
 3b6:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <tasksCreated>
 3ba:	1f 92       	push	r1
 3bc:	8f 93       	push	r24
 3be:	81 e5       	ldi	r24, 0x51	; 81
 3c0:	91 e0       	ldi	r25, 0x01	; 1
 3c2:	9f 93       	push	r25
 3c4:	8f 93       	push	r24
 3c6:	0e 94 1d 05 	call	0xa3a	; 0xa3a <printf>
 3ca:	2f ef       	ldi	r18, 0xFF	; 255
 3cc:	87 ea       	ldi	r24, 0xA7	; 167
 3ce:	91 e6       	ldi	r25, 0x61	; 97
 3d0:	21 50       	subi	r18, 0x01	; 1
 3d2:	80 40       	sbci	r24, 0x00	; 0
 3d4:	90 40       	sbci	r25, 0x00	; 0
 3d6:	e1 f7       	brne	.-8      	; 0x3d0 <OSlaunch+0x2a>
 3d8:	00 c0       	rjmp	.+0      	; 0x3da <OSlaunch+0x34>
 3da:	00 00       	nop
 3dc:	78 94       	sei
 3de:	0f 90       	pop	r0
 3e0:	0f 90       	pop	r0
 3e2:	0f 90       	pop	r0
 3e4:	0f 90       	pop	r0
 3e6:	83 e7       	ldi	r24, 0x73	; 115
 3e8:	91 e0       	ldi	r25, 0x01	; 1
 3ea:	0e 94 33 05 	call	0xa66	; 0xa66 <puts>
 3ee:	fb cf       	rjmp	.-10     	; 0x3e6 <OSlaunch+0x40>

000003f0 <createTask>:
 3f0:	cf 92       	push	r12
 3f2:	df 92       	push	r13
 3f4:	ff 92       	push	r15
 3f6:	0f 93       	push	r16
 3f8:	1f 93       	push	r17
 3fa:	cf 93       	push	r28
 3fc:	df 93       	push	r29
 3fe:	6c 01       	movw	r12, r24
 400:	f6 2e       	mov	r15, r22
 402:	ea 01       	movw	r28, r20
 404:	89 01       	movw	r16, r18
 406:	80 91 8e 01 	lds	r24, 0x018E	; 0x80018e <tasksCreated>
 40a:	8f 5f       	subi	r24, 0xFF	; 255
 40c:	80 93 8e 01 	sts	0x018E, r24	; 0x80018e <tasksCreated>
 410:	8d e0       	ldi	r24, 0x0D	; 13
 412:	90 e0       	ldi	r25, 0x00	; 0
 414:	0e 94 c0 03 	call	0x780	; 0x780 <malloc>
 418:	fc 01       	movw	r30, r24
 41a:	90 93 95 01 	sts	0x0195, r25	; 0x800195 <newTask+0x1>
 41e:	80 93 94 01 	sts	0x0194, r24	; 0x800194 <newTask>
 422:	d1 82       	std	Z+1, r13	; 0x01
 424:	c0 82       	st	Z, r12
 426:	f6 82       	std	Z+6, r15	; 0x06
 428:	81 e0       	ldi	r24, 0x01	; 1
 42a:	87 83       	std	Z+7, r24	; 0x07
 42c:	14 86       	std	Z+12, r1	; 0x0c
 42e:	20 91 96 01 	lds	r18, 0x0196	; 0x800196 <stackUsed>
 432:	30 91 97 01 	lds	r19, 0x0197	; 0x800197 <stackUsed+0x1>
 436:	8b e9       	ldi	r24, 0x9B	; 155
 438:	98 e0       	ldi	r25, 0x08	; 8
 43a:	82 1b       	sub	r24, r18
 43c:	93 0b       	sbc	r25, r19
 43e:	95 83       	std	Z+5, r25	; 0x05
 440:	84 83       	std	Z+4, r24	; 0x04
 442:	c2 0f       	add	r28, r18
 444:	d3 1f       	adc	r29, r19
 446:	d0 93 97 01 	sts	0x0197, r29	; 0x800197 <stackUsed+0x1>
 44a:	c0 93 96 01 	sts	0x0196, r28	; 0x800196 <stackUsed>
 44e:	13 87       	std	Z+11, r17	; 0x0b
 450:	02 87       	std	Z+10, r16	; 0x0a
 452:	13 82       	std	Z+3, r1	; 0x03
 454:	12 82       	std	Z+2, r1	; 0x02
 456:	a0 91 92 01 	lds	r26, 0x0192	; 0x800192 <head>
 45a:	b0 91 93 01 	lds	r27, 0x0193	; 0x800193 <head+0x1>
 45e:	18 96       	adiw	r26, 0x08	; 8
 460:	8d 91       	ld	r24, X+
 462:	9c 91       	ld	r25, X
 464:	19 97       	sbiw	r26, 0x09	; 9
 466:	91 87       	std	Z+9, r25	; 0x09
 468:	80 87       	std	Z+8, r24	; 0x08
 46a:	19 96       	adiw	r26, 0x09	; 9
 46c:	fc 93       	st	X, r31
 46e:	ee 93       	st	-X, r30
 470:	18 97       	sbiw	r26, 0x08	; 8
 472:	df 91       	pop	r29
 474:	cf 91       	pop	r28
 476:	1f 91       	pop	r17
 478:	0f 91       	pop	r16
 47a:	ff 90       	pop	r15
 47c:	df 90       	pop	r13
 47e:	cf 90       	pop	r12
 480:	08 95       	ret

00000482 <taskScheduler>:
 482:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <runPt>
 486:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <runPt+0x1>
 48a:	84 85       	ldd	r24, Z+12	; 0x0c
 48c:	83 30       	cpi	r24, 0x03	; 3
 48e:	79 f4       	brne	.+30     	; 0x4ae <taskScheduler+0x2c>
 490:	80 85       	ldd	r24, Z+8	; 0x08
 492:	91 85       	ldd	r25, Z+9	; 0x09
 494:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <runPt+0x1>
 498:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <runPt>
 49c:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <runPt>
 4a0:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <runPt+0x1>
 4a4:	82 81       	ldd	r24, Z+2	; 0x02
 4a6:	93 81       	ldd	r25, Z+3	; 0x03
 4a8:	89 2b       	or	r24, r25
 4aa:	a9 f4       	brne	.+42     	; 0x4d6 <taskScheduler+0x54>
 4ac:	1f c0       	rjmp	.+62     	; 0x4ec <taskScheduler+0x6a>
 4ae:	80 85       	ldd	r24, Z+8	; 0x08
 4b0:	91 85       	ldd	r25, Z+9	; 0x09
 4b2:	00 97       	sbiw	r24, 0x00	; 0
 4b4:	59 f4       	brne	.+22     	; 0x4cc <taskScheduler+0x4a>
 4b6:	e0 91 92 01 	lds	r30, 0x0192	; 0x800192 <head>
 4ba:	f0 91 93 01 	lds	r31, 0x0193	; 0x800193 <head+0x1>
 4be:	80 85       	ldd	r24, Z+8	; 0x08
 4c0:	91 85       	ldd	r25, Z+9	; 0x09
 4c2:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <runPt+0x1>
 4c6:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <runPt>
 4ca:	e8 cf       	rjmp	.-48     	; 0x49c <taskScheduler+0x1a>
 4cc:	90 93 91 01 	sts	0x0191, r25	; 0x800191 <runPt+0x1>
 4d0:	80 93 90 01 	sts	0x0190, r24	; 0x800190 <runPt>
 4d4:	e3 cf       	rjmp	.-58     	; 0x49c <taskScheduler+0x1a>
 4d6:	00 84       	ldd	r0, Z+8	; 0x08
 4d8:	f1 85       	ldd	r31, Z+9	; 0x09
 4da:	e0 2d       	mov	r30, r0
 4dc:	82 81       	ldd	r24, Z+2	; 0x02
 4de:	93 81       	ldd	r25, Z+3	; 0x03
 4e0:	89 2b       	or	r24, r25
 4e2:	c9 f7       	brne	.-14     	; 0x4d6 <taskScheduler+0x54>
 4e4:	f0 93 91 01 	sts	0x0191, r31	; 0x800191 <runPt+0x1>
 4e8:	e0 93 90 01 	sts	0x0190, r30	; 0x800190 <runPt>
 4ec:	08 95       	ret

000004ee <__vector_11>:
 4ee:	0f 92       	push	r0
 4f0:	0f b6       	in	r0, 0x3f	; 63
 4f2:	f8 94       	cli
 4f4:	0f 92       	push	r0
 4f6:	1f 92       	push	r1
 4f8:	2f 92       	push	r2
 4fa:	3f 92       	push	r3
 4fc:	4f 92       	push	r4
 4fe:	5f 92       	push	r5
 500:	6f 92       	push	r6
 502:	7f 92       	push	r7
 504:	8f 92       	push	r8
 506:	9f 92       	push	r9
 508:	af 92       	push	r10
 50a:	bf 92       	push	r11
 50c:	cf 92       	push	r12
 50e:	df 92       	push	r13
 510:	ef 92       	push	r14
 512:	ff 92       	push	r15
 514:	0f 93       	push	r16
 516:	1f 93       	push	r17
 518:	2f 93       	push	r18
 51a:	3f 93       	push	r19
 51c:	4f 93       	push	r20
 51e:	5f 93       	push	r21
 520:	6f 93       	push	r22
 522:	7f 93       	push	r23
 524:	8f 93       	push	r24
 526:	9f 93       	push	r25
 528:	af 93       	push	r26
 52a:	bf 93       	push	r27
 52c:	cf 93       	push	r28
 52e:	df 93       	push	r29
 530:	ef 93       	push	r30
 532:	ff 93       	push	r31
 534:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <currSp>
 538:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <currSp+0x1>
 53c:	0d b6       	in	r0, 0x3d	; 61
 53e:	0d 92       	st	X+, r0
 540:	0e b6       	in	r0, 0x3e	; 62
 542:	0d 92       	st	X+, r0
 544:	0e 94 41 02 	call	0x482	; 0x482 <taskScheduler>
 548:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <runPt>
 54c:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <runPt+0x1>
 550:	cf 01       	movw	r24, r30
 552:	04 96       	adiw	r24, 0x04	; 4
 554:	90 93 8b 01 	sts	0x018B, r25	; 0x80018b <currSp+0x1>
 558:	80 93 8a 01 	sts	0x018A, r24	; 0x80018a <currSp>
 55c:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <currSp>
 560:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <currSp+0x1>
 564:	cd 91       	ld	r28, X+
 566:	cd bf       	out	0x3d, r28	; 61
 568:	dd 91       	ld	r29, X+
 56a:	de bf       	out	0x3e, r29	; 62
 56c:	87 81       	ldd	r24, Z+7	; 0x07
 56e:	81 30       	cpi	r24, 0x01	; 1
 570:	59 f4       	brne	.+22     	; 0x588 <__vector_11+0x9a>
 572:	78 94       	sei
 574:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <runPt>
 578:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <runPt+0x1>
 57c:	17 82       	std	Z+7, r1	; 0x07
 57e:	01 90       	ld	r0, Z+
 580:	f0 81       	ld	r31, Z
 582:	e0 2d       	mov	r30, r0
 584:	09 95       	icall
 586:	2b c0       	rjmp	.+86     	; 0x5de <OSwait>
 588:	a0 91 8a 01 	lds	r26, 0x018A	; 0x80018a <currSp>
 58c:	b0 91 8b 01 	lds	r27, 0x018B	; 0x80018b <currSp+0x1>
 590:	cd 91       	ld	r28, X+
 592:	cd bf       	out	0x3d, r28	; 61
 594:	dd 91       	ld	r29, X+
 596:	de bf       	out	0x3e, r29	; 62
 598:	ff 91       	pop	r31
 59a:	ef 91       	pop	r30
 59c:	df 91       	pop	r29
 59e:	cf 91       	pop	r28
 5a0:	bf 91       	pop	r27
 5a2:	af 91       	pop	r26
 5a4:	9f 91       	pop	r25
 5a6:	8f 91       	pop	r24
 5a8:	7f 91       	pop	r23
 5aa:	6f 91       	pop	r22
 5ac:	5f 91       	pop	r21
 5ae:	4f 91       	pop	r20
 5b0:	3f 91       	pop	r19
 5b2:	2f 91       	pop	r18
 5b4:	1f 91       	pop	r17
 5b6:	0f 91       	pop	r16
 5b8:	ff 90       	pop	r15
 5ba:	ef 90       	pop	r14
 5bc:	df 90       	pop	r13
 5be:	cf 90       	pop	r12
 5c0:	bf 90       	pop	r11
 5c2:	af 90       	pop	r10
 5c4:	9f 90       	pop	r9
 5c6:	8f 90       	pop	r8
 5c8:	7f 90       	pop	r7
 5ca:	6f 90       	pop	r6
 5cc:	5f 90       	pop	r5
 5ce:	4f 90       	pop	r4
 5d0:	3f 90       	pop	r3
 5d2:	2f 90       	pop	r2
 5d4:	1f 90       	pop	r1
 5d6:	0f 90       	pop	r0
 5d8:	0f be       	out	0x3f, r0	; 63
 5da:	0f 90       	pop	r0
 5dc:	18 95       	reti

000005de <OSwait>:
}

void OSwait(volatile int *s)
{
 5de:	fc 01       	movw	r30, r24
	cli();
 5e0:	f8 94       	cli
	(*s)--;
 5e2:	80 81       	ld	r24, Z
 5e4:	91 81       	ldd	r25, Z+1	; 0x01
 5e6:	01 97       	sbiw	r24, 0x01	; 1
 5e8:	91 83       	std	Z+1, r25	; 0x01
 5ea:	80 83       	st	Z, r24
	if((*s) < 0)
 5ec:	80 81       	ld	r24, Z
 5ee:	91 81       	ldd	r25, Z+1	; 0x01
 5f0:	99 23       	and	r25, r25
 5f2:	5c f4       	brge	.+22     	; 0x60a <OSwait+0x2c>
	{
		runPt->blocked = s;
 5f4:	a0 91 90 01 	lds	r26, 0x0190	; 0x800190 <runPt>
 5f8:	b0 91 91 01 	lds	r27, 0x0191	; 0x800191 <runPt+0x1>
 5fc:	13 96       	adiw	r26, 0x03	; 3
 5fe:	fc 93       	st	X, r31
 600:	ee 93       	st	-X, r30
 602:	12 97       	sbiw	r26, 0x02	; 2
		sei();
 604:	78 94       	sei
	asm volatile("ret");
}

void OSsuspend(void)
{
	TIMER1_COMPA_vect();
 606:	0e 94 77 02 	call	0x4ee	; 0x4ee <__vector_11>
	{
		runPt->blocked = s;
		sei();
		OSsuspend();
	}
	sei();
 60a:	78 94       	sei
 60c:	08 95       	ret

0000060e <OSsignal>:
}

void OSsignal(volatile int *s)
{
 60e:	dc 01       	movw	r26, r24
	taskTCB *temp;
	cli();
 610:	f8 94       	cli
	(*s)++;
 612:	8d 91       	ld	r24, X+
 614:	9c 91       	ld	r25, X
 616:	11 97       	sbiw	r26, 0x01	; 1
 618:	01 96       	adiw	r24, 0x01	; 1
 61a:	11 96       	adiw	r26, 0x01	; 1
 61c:	9c 93       	st	X, r25
 61e:	8e 93       	st	-X, r24
	if((*s) < 0)
 620:	8d 91       	ld	r24, X+
 622:	9c 91       	ld	r25, X
 624:	11 97       	sbiw	r26, 0x01	; 1
 626:	99 23       	and	r25, r25
 628:	b4 f4       	brge	.+44     	; 0x656 <OSsignal+0x48>
	{
		temp = runPt->next;
 62a:	e0 91 90 01 	lds	r30, 0x0190	; 0x800190 <runPt>
 62e:	f0 91 91 01 	lds	r31, 0x0191	; 0x800191 <runPt+0x1>
 632:	00 84       	ldd	r0, Z+8	; 0x08
 634:	f1 85       	ldd	r31, Z+9	; 0x09
 636:	e0 2d       	mov	r30, r0
		while(temp->blocked != s)
 638:	82 81       	ldd	r24, Z+2	; 0x02
 63a:	93 81       	ldd	r25, Z+3	; 0x03
 63c:	a8 17       	cp	r26, r24
 63e:	b9 07       	cpc	r27, r25
 640:	41 f0       	breq	.+16     	; 0x652 <OSsignal+0x44>
		{
			temp = temp->next;
 642:	00 84       	ldd	r0, Z+8	; 0x08
 644:	f1 85       	ldd	r31, Z+9	; 0x09
 646:	e0 2d       	mov	r30, r0
	cli();
	(*s)++;
	if((*s) < 0)
	{
		temp = runPt->next;
		while(temp->blocked != s)
 648:	82 81       	ldd	r24, Z+2	; 0x02
 64a:	93 81       	ldd	r25, Z+3	; 0x03
 64c:	a8 17       	cp	r26, r24
 64e:	b9 07       	cpc	r27, r25
 650:	c1 f7       	brne	.-16     	; 0x642 <OSsignal+0x34>
		{
			temp = temp->next;
		}
		temp->blocked = NULL;
 652:	13 82       	std	Z+3, r1	; 0x03
 654:	12 82       	std	Z+2, r1	; 0x02
	}
	sei();
 656:	78 94       	sei
 658:	08 95       	ret

0000065a <uart_putch>:
	while (UCSR0A & (1<<RXC0))
	dummy =  UDR0;
}

int uart_putch ( char ch, FILE *stream )
{
 65a:	cf 93       	push	r28
 65c:	c8 2f       	mov	r28, r24
	if(ch == '\n')
 65e:	8a 30       	cpi	r24, 0x0A	; 10
 660:	19 f4       	brne	.+6      	; 0x668 <uart_putch+0xe>
	uart_putch('\r', stream);
 662:	8d e0       	ldi	r24, 0x0D	; 13
 664:	0e 94 2d 03 	call	0x65a	; 0x65a <uart_putch>
	while(!(UCSR0A & (1<<UDRE0)));
 668:	e0 ec       	ldi	r30, 0xC0	; 192
 66a:	f0 e0       	ldi	r31, 0x00	; 0
 66c:	80 81       	ld	r24, Z
 66e:	85 ff       	sbrs	r24, 5
 670:	fd cf       	rjmp	.-6      	; 0x66c <uart_putch+0x12>
	UDR0 = ch;
 672:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
	return 0;
}
 676:	80 e0       	ldi	r24, 0x00	; 0
 678:	90 e0       	ldi	r25, 0x00	; 0
 67a:	cf 91       	pop	r28
 67c:	08 95       	ret

0000067e <uart_getch>:

int uart_getch(FILE *stream)
{
	unsigned char ch = '\0';
	while (!(UCSR0A & (1<<RXC0)));
 67e:	e0 ec       	ldi	r30, 0xC0	; 192
 680:	f0 e0       	ldi	r31, 0x00	; 0
 682:	80 81       	ld	r24, Z
 684:	88 23       	and	r24, r24
 686:	ec f7       	brge	.-6      	; 0x682 <uart_getch+0x4>
	ch = UDR0;
 688:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>

	return ch;
}
 68c:	90 e0       	ldi	r25, 0x00	; 0
 68e:	08 95       	ret

00000690 <uart_init>:

FILE uart_str = FDEV_SETUP_STREAM (uart_putch, uart_getch, _FDEV_SETUP_RW);

void uart_init(void)
{
	UBRR0H = (((F_CPU/BAUD)/16)-1)>>8;
 690:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
	UBRR0L = (((F_CPU/BAUD)/16)-1);
 694:	87 e6       	ldi	r24, 0x67	; 103
 696:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
 69a:	88 e1       	ldi	r24, 0x18	; 24
 69c:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
	UCSR0C = (1<<UCSZ01)|(1<<UCSZ00);
 6a0:	86 e0       	ldi	r24, 0x06	; 6
 6a2:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
 6a6:	08 95       	ret

000006a8 <ansi_clear_screen>:
}

void ansi_clear_screen ( void )
{
 6a8:	cf 93       	push	r28
 6aa:	df 93       	push	r29
	putchar(27);
 6ac:	c0 ea       	ldi	r28, 0xA0	; 160
 6ae:	d1 e0       	ldi	r29, 0x01	; 1
 6b0:	6a 81       	ldd	r22, Y+2	; 0x02
 6b2:	7b 81       	ldd	r23, Y+3	; 0x03
 6b4:	8b e1       	ldi	r24, 0x1B	; 27
 6b6:	90 e0       	ldi	r25, 0x00	; 0
 6b8:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('[');
 6bc:	6a 81       	ldd	r22, Y+2	; 0x02
 6be:	7b 81       	ldd	r23, Y+3	; 0x03
 6c0:	8b e5       	ldi	r24, 0x5B	; 91
 6c2:	90 e0       	ldi	r25, 0x00	; 0
 6c4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('H');
 6c8:	6a 81       	ldd	r22, Y+2	; 0x02
 6ca:	7b 81       	ldd	r23, Y+3	; 0x03
 6cc:	88 e4       	ldi	r24, 0x48	; 72
 6ce:	90 e0       	ldi	r25, 0x00	; 0
 6d0:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar(27);
 6d4:	6a 81       	ldd	r22, Y+2	; 0x02
 6d6:	7b 81       	ldd	r23, Y+3	; 0x03
 6d8:	8b e1       	ldi	r24, 0x1B	; 27
 6da:	90 e0       	ldi	r25, 0x00	; 0
 6dc:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('[');
 6e0:	6a 81       	ldd	r22, Y+2	; 0x02
 6e2:	7b 81       	ldd	r23, Y+3	; 0x03
 6e4:	8b e5       	ldi	r24, 0x5B	; 91
 6e6:	90 e0       	ldi	r25, 0x00	; 0
 6e8:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('J');
 6ec:	6a 81       	ldd	r22, Y+2	; 0x02
 6ee:	7b 81       	ldd	r23, Y+3	; 0x03
 6f0:	8a e4       	ldi	r24, 0x4A	; 74
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
}
 6f8:	df 91       	pop	r29
 6fa:	cf 91       	pop	r28
 6fc:	08 95       	ret

000006fe <ansi_me>:

void ansi_me(void)
{
 6fe:	cf 93       	push	r28
 700:	df 93       	push	r29
	putchar(27);
 702:	c0 ea       	ldi	r28, 0xA0	; 160
 704:	d1 e0       	ldi	r29, 0x01	; 1
 706:	6a 81       	ldd	r22, Y+2	; 0x02
 708:	7b 81       	ldd	r23, Y+3	; 0x03
 70a:	8b e1       	ldi	r24, 0x1B	; 27
 70c:	90 e0       	ldi	r25, 0x00	; 0
 70e:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('[');
 712:	6a 81       	ldd	r22, Y+2	; 0x02
 714:	7b 81       	ldd	r23, Y+3	; 0x03
 716:	8b e5       	ldi	r24, 0x5B	; 91
 718:	90 e0       	ldi	r25, 0x00	; 0
 71a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('0');
 71e:	6a 81       	ldd	r22, Y+2	; 0x02
 720:	7b 81       	ldd	r23, Y+3	; 0x03
 722:	80 e3       	ldi	r24, 0x30	; 48
 724:	90 e0       	ldi	r25, 0x00	; 0
 726:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
	putchar('m');
 72a:	6a 81       	ldd	r22, Y+2	; 0x02
 72c:	7b 81       	ldd	r23, Y+3	; 0x03
 72e:	8d e6       	ldi	r24, 0x6D	; 109
 730:	90 e0       	ldi	r25, 0x00	; 0
 732:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
}
 736:	df 91       	pop	r29
 738:	cf 91       	pop	r28
 73a:	08 95       	ret

0000073c <uart_flush>:

void uart_flush ( void )
{
	unsigned char dummy;
	while (UCSR0A & (1<<RXC0))
 73c:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
 740:	88 23       	and	r24, r24
 742:	44 f4       	brge	.+16     	; 0x754 <uart_flush+0x18>
	dummy =  UDR0;
 744:	a6 ec       	ldi	r26, 0xC6	; 198
 746:	b0 e0       	ldi	r27, 0x00	; 0
}

void uart_flush ( void )
{
	unsigned char dummy;
	while (UCSR0A & (1<<RXC0))
 748:	e0 ec       	ldi	r30, 0xC0	; 192
 74a:	f0 e0       	ldi	r31, 0x00	; 0
	dummy =  UDR0;
 74c:	8c 91       	ld	r24, X
}

void uart_flush ( void )
{
	unsigned char dummy;
	while (UCSR0A & (1<<RXC0))
 74e:	80 81       	ld	r24, Z
 750:	88 23       	and	r24, r24
 752:	e4 f3       	brlt	.-8      	; 0x74c <uart_flush+0x10>
 754:	08 95       	ret

00000756 <consoleDisplay>:
	return ch;
}

void consoleDisplay(void)
{
	stdout = stdin = &uart_str;
 756:	e0 ea       	ldi	r30, 0xA0	; 160
 758:	f1 e0       	ldi	r31, 0x01	; 1
 75a:	86 e0       	ldi	r24, 0x06	; 6
 75c:	91 e0       	ldi	r25, 0x01	; 1
 75e:	91 83       	std	Z+1, r25	; 0x01
 760:	80 83       	st	Z, r24
 762:	93 83       	std	Z+3, r25	; 0x03
 764:	82 83       	std	Z+2, r24	; 0x02
	uart_init();
 766:	0e 94 48 03 	call	0x690	; 0x690 <uart_init>
	ansi_me();
 76a:	0e 94 7f 03 	call	0x6fe	; 0x6fe <ansi_me>
	ansi_clear_screen();
 76e:	0e 94 54 03 	call	0x6a8	; 0x6a8 <ansi_clear_screen>
	ansi_me();
 772:	0e 94 7f 03 	call	0x6fe	; 0x6fe <ansi_me>
	ansi_clear_screen();
 776:	0e 94 54 03 	call	0x6a8	; 0x6a8 <ansi_clear_screen>
	uart_flush();
 77a:	0e 94 9e 03 	call	0x73c	; 0x73c <uart_flush>
 77e:	08 95       	ret

00000780 <malloc>:
 780:	0f 93       	push	r16
 782:	1f 93       	push	r17
 784:	cf 93       	push	r28
 786:	df 93       	push	r29
 788:	82 30       	cpi	r24, 0x02	; 2
 78a:	91 05       	cpc	r25, r1
 78c:	10 f4       	brcc	.+4      	; 0x792 <malloc+0x12>
 78e:	82 e0       	ldi	r24, 0x02	; 2
 790:	90 e0       	ldi	r25, 0x00	; 0
 792:	e0 91 9e 01 	lds	r30, 0x019E	; 0x80019e <__flp>
 796:	f0 91 9f 01 	lds	r31, 0x019F	; 0x80019f <__flp+0x1>
 79a:	20 e0       	ldi	r18, 0x00	; 0
 79c:	30 e0       	ldi	r19, 0x00	; 0
 79e:	a0 e0       	ldi	r26, 0x00	; 0
 7a0:	b0 e0       	ldi	r27, 0x00	; 0
 7a2:	30 97       	sbiw	r30, 0x00	; 0
 7a4:	19 f1       	breq	.+70     	; 0x7ec <malloc+0x6c>
 7a6:	40 81       	ld	r20, Z
 7a8:	51 81       	ldd	r21, Z+1	; 0x01
 7aa:	02 81       	ldd	r16, Z+2	; 0x02
 7ac:	13 81       	ldd	r17, Z+3	; 0x03
 7ae:	48 17       	cp	r20, r24
 7b0:	59 07       	cpc	r21, r25
 7b2:	c8 f0       	brcs	.+50     	; 0x7e6 <malloc+0x66>
 7b4:	84 17       	cp	r24, r20
 7b6:	95 07       	cpc	r25, r21
 7b8:	69 f4       	brne	.+26     	; 0x7d4 <malloc+0x54>
 7ba:	10 97       	sbiw	r26, 0x00	; 0
 7bc:	31 f0       	breq	.+12     	; 0x7ca <malloc+0x4a>
 7be:	12 96       	adiw	r26, 0x02	; 2
 7c0:	0c 93       	st	X, r16
 7c2:	12 97       	sbiw	r26, 0x02	; 2
 7c4:	13 96       	adiw	r26, 0x03	; 3
 7c6:	1c 93       	st	X, r17
 7c8:	27 c0       	rjmp	.+78     	; 0x818 <malloc+0x98>
 7ca:	00 93 9e 01 	sts	0x019E, r16	; 0x80019e <__flp>
 7ce:	10 93 9f 01 	sts	0x019F, r17	; 0x80019f <__flp+0x1>
 7d2:	22 c0       	rjmp	.+68     	; 0x818 <malloc+0x98>
 7d4:	21 15       	cp	r18, r1
 7d6:	31 05       	cpc	r19, r1
 7d8:	19 f0       	breq	.+6      	; 0x7e0 <malloc+0x60>
 7da:	42 17       	cp	r20, r18
 7dc:	53 07       	cpc	r21, r19
 7de:	18 f4       	brcc	.+6      	; 0x7e6 <malloc+0x66>
 7e0:	9a 01       	movw	r18, r20
 7e2:	bd 01       	movw	r22, r26
 7e4:	ef 01       	movw	r28, r30
 7e6:	df 01       	movw	r26, r30
 7e8:	f8 01       	movw	r30, r16
 7ea:	db cf       	rjmp	.-74     	; 0x7a2 <malloc+0x22>
 7ec:	21 15       	cp	r18, r1
 7ee:	31 05       	cpc	r19, r1
 7f0:	f9 f0       	breq	.+62     	; 0x830 <malloc+0xb0>
 7f2:	28 1b       	sub	r18, r24
 7f4:	39 0b       	sbc	r19, r25
 7f6:	24 30       	cpi	r18, 0x04	; 4
 7f8:	31 05       	cpc	r19, r1
 7fa:	80 f4       	brcc	.+32     	; 0x81c <malloc+0x9c>
 7fc:	8a 81       	ldd	r24, Y+2	; 0x02
 7fe:	9b 81       	ldd	r25, Y+3	; 0x03
 800:	61 15       	cp	r22, r1
 802:	71 05       	cpc	r23, r1
 804:	21 f0       	breq	.+8      	; 0x80e <malloc+0x8e>
 806:	fb 01       	movw	r30, r22
 808:	93 83       	std	Z+3, r25	; 0x03
 80a:	82 83       	std	Z+2, r24	; 0x02
 80c:	04 c0       	rjmp	.+8      	; 0x816 <malloc+0x96>
 80e:	90 93 9f 01 	sts	0x019F, r25	; 0x80019f <__flp+0x1>
 812:	80 93 9e 01 	sts	0x019E, r24	; 0x80019e <__flp>
 816:	fe 01       	movw	r30, r28
 818:	32 96       	adiw	r30, 0x02	; 2
 81a:	44 c0       	rjmp	.+136    	; 0x8a4 <malloc+0x124>
 81c:	fe 01       	movw	r30, r28
 81e:	e2 0f       	add	r30, r18
 820:	f3 1f       	adc	r31, r19
 822:	81 93       	st	Z+, r24
 824:	91 93       	st	Z+, r25
 826:	22 50       	subi	r18, 0x02	; 2
 828:	31 09       	sbc	r19, r1
 82a:	39 83       	std	Y+1, r19	; 0x01
 82c:	28 83       	st	Y, r18
 82e:	3a c0       	rjmp	.+116    	; 0x8a4 <malloc+0x124>
 830:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <__brkval>
 834:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <__brkval+0x1>
 838:	23 2b       	or	r18, r19
 83a:	41 f4       	brne	.+16     	; 0x84c <malloc+0xcc>
 83c:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <__malloc_heap_start>
 840:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <__malloc_heap_start+0x1>
 844:	30 93 9d 01 	sts	0x019D, r19	; 0x80019d <__brkval+0x1>
 848:	20 93 9c 01 	sts	0x019C, r18	; 0x80019c <__brkval>
 84c:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 850:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 854:	21 15       	cp	r18, r1
 856:	31 05       	cpc	r19, r1
 858:	41 f4       	brne	.+16     	; 0x86a <malloc+0xea>
 85a:	2d b7       	in	r18, 0x3d	; 61
 85c:	3e b7       	in	r19, 0x3e	; 62
 85e:	40 91 04 01 	lds	r20, 0x0104	; 0x800104 <__malloc_margin>
 862:	50 91 05 01 	lds	r21, 0x0105	; 0x800105 <__malloc_margin+0x1>
 866:	24 1b       	sub	r18, r20
 868:	35 0b       	sbc	r19, r21
 86a:	e0 91 9c 01 	lds	r30, 0x019C	; 0x80019c <__brkval>
 86e:	f0 91 9d 01 	lds	r31, 0x019D	; 0x80019d <__brkval+0x1>
 872:	e2 17       	cp	r30, r18
 874:	f3 07       	cpc	r31, r19
 876:	a0 f4       	brcc	.+40     	; 0x8a0 <malloc+0x120>
 878:	2e 1b       	sub	r18, r30
 87a:	3f 0b       	sbc	r19, r31
 87c:	28 17       	cp	r18, r24
 87e:	39 07       	cpc	r19, r25
 880:	78 f0       	brcs	.+30     	; 0x8a0 <malloc+0x120>
 882:	ac 01       	movw	r20, r24
 884:	4e 5f       	subi	r20, 0xFE	; 254
 886:	5f 4f       	sbci	r21, 0xFF	; 255
 888:	24 17       	cp	r18, r20
 88a:	35 07       	cpc	r19, r21
 88c:	48 f0       	brcs	.+18     	; 0x8a0 <malloc+0x120>
 88e:	4e 0f       	add	r20, r30
 890:	5f 1f       	adc	r21, r31
 892:	50 93 9d 01 	sts	0x019D, r21	; 0x80019d <__brkval+0x1>
 896:	40 93 9c 01 	sts	0x019C, r20	; 0x80019c <__brkval>
 89a:	81 93       	st	Z+, r24
 89c:	91 93       	st	Z+, r25
 89e:	02 c0       	rjmp	.+4      	; 0x8a4 <malloc+0x124>
 8a0:	e0 e0       	ldi	r30, 0x00	; 0
 8a2:	f0 e0       	ldi	r31, 0x00	; 0
 8a4:	cf 01       	movw	r24, r30
 8a6:	df 91       	pop	r29
 8a8:	cf 91       	pop	r28
 8aa:	1f 91       	pop	r17
 8ac:	0f 91       	pop	r16
 8ae:	08 95       	ret

000008b0 <free>:
 8b0:	cf 93       	push	r28
 8b2:	df 93       	push	r29
 8b4:	00 97       	sbiw	r24, 0x00	; 0
 8b6:	09 f4       	brne	.+2      	; 0x8ba <free+0xa>
 8b8:	81 c0       	rjmp	.+258    	; 0x9bc <__stack+0xbd>
 8ba:	fc 01       	movw	r30, r24
 8bc:	32 97       	sbiw	r30, 0x02	; 2
 8be:	13 82       	std	Z+3, r1	; 0x03
 8c0:	12 82       	std	Z+2, r1	; 0x02
 8c2:	a0 91 9e 01 	lds	r26, 0x019E	; 0x80019e <__flp>
 8c6:	b0 91 9f 01 	lds	r27, 0x019F	; 0x80019f <__flp+0x1>
 8ca:	10 97       	sbiw	r26, 0x00	; 0
 8cc:	81 f4       	brne	.+32     	; 0x8ee <free+0x3e>
 8ce:	20 81       	ld	r18, Z
 8d0:	31 81       	ldd	r19, Z+1	; 0x01
 8d2:	82 0f       	add	r24, r18
 8d4:	93 1f       	adc	r25, r19
 8d6:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <__brkval>
 8da:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <__brkval+0x1>
 8de:	28 17       	cp	r18, r24
 8e0:	39 07       	cpc	r19, r25
 8e2:	51 f5       	brne	.+84     	; 0x938 <__stack+0x39>
 8e4:	f0 93 9d 01 	sts	0x019D, r31	; 0x80019d <__brkval+0x1>
 8e8:	e0 93 9c 01 	sts	0x019C, r30	; 0x80019c <__brkval>
 8ec:	67 c0       	rjmp	.+206    	; 0x9bc <__stack+0xbd>
 8ee:	ed 01       	movw	r28, r26
 8f0:	20 e0       	ldi	r18, 0x00	; 0
 8f2:	30 e0       	ldi	r19, 0x00	; 0
 8f4:	ce 17       	cp	r28, r30
 8f6:	df 07       	cpc	r29, r31
 8f8:	40 f4       	brcc	.+16     	; 0x90a <__stack+0xb>
 8fa:	4a 81       	ldd	r20, Y+2	; 0x02
 8fc:	5b 81       	ldd	r21, Y+3	; 0x03
 8fe:	9e 01       	movw	r18, r28
 900:	41 15       	cp	r20, r1
 902:	51 05       	cpc	r21, r1
 904:	f1 f0       	breq	.+60     	; 0x942 <__stack+0x43>
 906:	ea 01       	movw	r28, r20
 908:	f5 cf       	rjmp	.-22     	; 0x8f4 <free+0x44>
 90a:	d3 83       	std	Z+3, r29	; 0x03
 90c:	c2 83       	std	Z+2, r28	; 0x02
 90e:	40 81       	ld	r20, Z
 910:	51 81       	ldd	r21, Z+1	; 0x01
 912:	84 0f       	add	r24, r20
 914:	95 1f       	adc	r25, r21
 916:	c8 17       	cp	r28, r24
 918:	d9 07       	cpc	r29, r25
 91a:	59 f4       	brne	.+22     	; 0x932 <__stack+0x33>
 91c:	88 81       	ld	r24, Y
 91e:	99 81       	ldd	r25, Y+1	; 0x01
 920:	84 0f       	add	r24, r20
 922:	95 1f       	adc	r25, r21
 924:	02 96       	adiw	r24, 0x02	; 2
 926:	91 83       	std	Z+1, r25	; 0x01
 928:	80 83       	st	Z, r24
 92a:	8a 81       	ldd	r24, Y+2	; 0x02
 92c:	9b 81       	ldd	r25, Y+3	; 0x03
 92e:	93 83       	std	Z+3, r25	; 0x03
 930:	82 83       	std	Z+2, r24	; 0x02
 932:	21 15       	cp	r18, r1
 934:	31 05       	cpc	r19, r1
 936:	29 f4       	brne	.+10     	; 0x942 <__stack+0x43>
 938:	f0 93 9f 01 	sts	0x019F, r31	; 0x80019f <__flp+0x1>
 93c:	e0 93 9e 01 	sts	0x019E, r30	; 0x80019e <__flp>
 940:	3d c0       	rjmp	.+122    	; 0x9bc <__stack+0xbd>
 942:	e9 01       	movw	r28, r18
 944:	fb 83       	std	Y+3, r31	; 0x03
 946:	ea 83       	std	Y+2, r30	; 0x02
 948:	49 91       	ld	r20, Y+
 94a:	59 91       	ld	r21, Y+
 94c:	c4 0f       	add	r28, r20
 94e:	d5 1f       	adc	r29, r21
 950:	ec 17       	cp	r30, r28
 952:	fd 07       	cpc	r31, r29
 954:	61 f4       	brne	.+24     	; 0x96e <__stack+0x6f>
 956:	80 81       	ld	r24, Z
 958:	91 81       	ldd	r25, Z+1	; 0x01
 95a:	84 0f       	add	r24, r20
 95c:	95 1f       	adc	r25, r21
 95e:	02 96       	adiw	r24, 0x02	; 2
 960:	e9 01       	movw	r28, r18
 962:	99 83       	std	Y+1, r25	; 0x01
 964:	88 83       	st	Y, r24
 966:	82 81       	ldd	r24, Z+2	; 0x02
 968:	93 81       	ldd	r25, Z+3	; 0x03
 96a:	9b 83       	std	Y+3, r25	; 0x03
 96c:	8a 83       	std	Y+2, r24	; 0x02
 96e:	e0 e0       	ldi	r30, 0x00	; 0
 970:	f0 e0       	ldi	r31, 0x00	; 0
 972:	12 96       	adiw	r26, 0x02	; 2
 974:	8d 91       	ld	r24, X+
 976:	9c 91       	ld	r25, X
 978:	13 97       	sbiw	r26, 0x03	; 3
 97a:	00 97       	sbiw	r24, 0x00	; 0
 97c:	19 f0       	breq	.+6      	; 0x984 <__stack+0x85>
 97e:	fd 01       	movw	r30, r26
 980:	dc 01       	movw	r26, r24
 982:	f7 cf       	rjmp	.-18     	; 0x972 <__stack+0x73>
 984:	8d 91       	ld	r24, X+
 986:	9c 91       	ld	r25, X
 988:	11 97       	sbiw	r26, 0x01	; 1
 98a:	9d 01       	movw	r18, r26
 98c:	2e 5f       	subi	r18, 0xFE	; 254
 98e:	3f 4f       	sbci	r19, 0xFF	; 255
 990:	82 0f       	add	r24, r18
 992:	93 1f       	adc	r25, r19
 994:	20 91 9c 01 	lds	r18, 0x019C	; 0x80019c <__brkval>
 998:	30 91 9d 01 	lds	r19, 0x019D	; 0x80019d <__brkval+0x1>
 99c:	28 17       	cp	r18, r24
 99e:	39 07       	cpc	r19, r25
 9a0:	69 f4       	brne	.+26     	; 0x9bc <__stack+0xbd>
 9a2:	30 97       	sbiw	r30, 0x00	; 0
 9a4:	29 f4       	brne	.+10     	; 0x9b0 <__stack+0xb1>
 9a6:	10 92 9f 01 	sts	0x019F, r1	; 0x80019f <__flp+0x1>
 9aa:	10 92 9e 01 	sts	0x019E, r1	; 0x80019e <__flp>
 9ae:	02 c0       	rjmp	.+4      	; 0x9b4 <__stack+0xb5>
 9b0:	13 82       	std	Z+3, r1	; 0x03
 9b2:	12 82       	std	Z+2, r1	; 0x02
 9b4:	b0 93 9d 01 	sts	0x019D, r27	; 0x80019d <__brkval+0x1>
 9b8:	a0 93 9c 01 	sts	0x019C, r26	; 0x80019c <__brkval>
 9bc:	df 91       	pop	r29
 9be:	cf 91       	pop	r28
 9c0:	08 95       	ret

000009c2 <fputc>:
 9c2:	0f 93       	push	r16
 9c4:	1f 93       	push	r17
 9c6:	cf 93       	push	r28
 9c8:	df 93       	push	r29
 9ca:	fb 01       	movw	r30, r22
 9cc:	23 81       	ldd	r18, Z+3	; 0x03
 9ce:	21 fd       	sbrc	r18, 1
 9d0:	03 c0       	rjmp	.+6      	; 0x9d8 <fputc+0x16>
 9d2:	8f ef       	ldi	r24, 0xFF	; 255
 9d4:	9f ef       	ldi	r25, 0xFF	; 255
 9d6:	2c c0       	rjmp	.+88     	; 0xa30 <fputc+0x6e>
 9d8:	22 ff       	sbrs	r18, 2
 9da:	16 c0       	rjmp	.+44     	; 0xa08 <fputc+0x46>
 9dc:	46 81       	ldd	r20, Z+6	; 0x06
 9de:	57 81       	ldd	r21, Z+7	; 0x07
 9e0:	24 81       	ldd	r18, Z+4	; 0x04
 9e2:	35 81       	ldd	r19, Z+5	; 0x05
 9e4:	42 17       	cp	r20, r18
 9e6:	53 07       	cpc	r21, r19
 9e8:	44 f4       	brge	.+16     	; 0x9fa <fputc+0x38>
 9ea:	a0 81       	ld	r26, Z
 9ec:	b1 81       	ldd	r27, Z+1	; 0x01
 9ee:	9d 01       	movw	r18, r26
 9f0:	2f 5f       	subi	r18, 0xFF	; 255
 9f2:	3f 4f       	sbci	r19, 0xFF	; 255
 9f4:	31 83       	std	Z+1, r19	; 0x01
 9f6:	20 83       	st	Z, r18
 9f8:	8c 93       	st	X, r24
 9fa:	26 81       	ldd	r18, Z+6	; 0x06
 9fc:	37 81       	ldd	r19, Z+7	; 0x07
 9fe:	2f 5f       	subi	r18, 0xFF	; 255
 a00:	3f 4f       	sbci	r19, 0xFF	; 255
 a02:	37 83       	std	Z+7, r19	; 0x07
 a04:	26 83       	std	Z+6, r18	; 0x06
 a06:	14 c0       	rjmp	.+40     	; 0xa30 <fputc+0x6e>
 a08:	8b 01       	movw	r16, r22
 a0a:	ec 01       	movw	r28, r24
 a0c:	fb 01       	movw	r30, r22
 a0e:	00 84       	ldd	r0, Z+8	; 0x08
 a10:	f1 85       	ldd	r31, Z+9	; 0x09
 a12:	e0 2d       	mov	r30, r0
 a14:	09 95       	icall
 a16:	89 2b       	or	r24, r25
 a18:	e1 f6       	brne	.-72     	; 0x9d2 <fputc+0x10>
 a1a:	d8 01       	movw	r26, r16
 a1c:	16 96       	adiw	r26, 0x06	; 6
 a1e:	8d 91       	ld	r24, X+
 a20:	9c 91       	ld	r25, X
 a22:	17 97       	sbiw	r26, 0x07	; 7
 a24:	01 96       	adiw	r24, 0x01	; 1
 a26:	17 96       	adiw	r26, 0x07	; 7
 a28:	9c 93       	st	X, r25
 a2a:	8e 93       	st	-X, r24
 a2c:	16 97       	sbiw	r26, 0x06	; 6
 a2e:	ce 01       	movw	r24, r28
 a30:	df 91       	pop	r29
 a32:	cf 91       	pop	r28
 a34:	1f 91       	pop	r17
 a36:	0f 91       	pop	r16
 a38:	08 95       	ret

00000a3a <printf>:
 a3a:	a0 e0       	ldi	r26, 0x00	; 0
 a3c:	b0 e0       	ldi	r27, 0x00	; 0
 a3e:	e3 e2       	ldi	r30, 0x23	; 35
 a40:	f5 e0       	ldi	r31, 0x05	; 5
 a42:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__prologue_saves__+0x20>
 a46:	ae 01       	movw	r20, r28
 a48:	4b 5f       	subi	r20, 0xFB	; 251
 a4a:	5f 4f       	sbci	r21, 0xFF	; 255
 a4c:	fa 01       	movw	r30, r20
 a4e:	61 91       	ld	r22, Z+
 a50:	71 91       	ld	r23, Z+
 a52:	af 01       	movw	r20, r30
 a54:	80 91 a2 01 	lds	r24, 0x01A2	; 0x8001a2 <__iob+0x2>
 a58:	90 91 a3 01 	lds	r25, 0x01A3	; 0x8001a3 <__iob+0x3>
 a5c:	0e 94 63 05 	call	0xac6	; 0xac6 <vfprintf>
 a60:	e2 e0       	ldi	r30, 0x02	; 2
 a62:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__epilogue_restores__+0x20>

00000a66 <puts>:
 a66:	0f 93       	push	r16
 a68:	1f 93       	push	r17
 a6a:	cf 93       	push	r28
 a6c:	df 93       	push	r29
 a6e:	e0 91 a2 01 	lds	r30, 0x01A2	; 0x8001a2 <__iob+0x2>
 a72:	f0 91 a3 01 	lds	r31, 0x01A3	; 0x8001a3 <__iob+0x3>
 a76:	23 81       	ldd	r18, Z+3	; 0x03
 a78:	21 ff       	sbrs	r18, 1
 a7a:	1b c0       	rjmp	.+54     	; 0xab2 <puts+0x4c>
 a7c:	8c 01       	movw	r16, r24
 a7e:	d0 e0       	ldi	r29, 0x00	; 0
 a80:	c0 e0       	ldi	r28, 0x00	; 0
 a82:	f8 01       	movw	r30, r16
 a84:	81 91       	ld	r24, Z+
 a86:	8f 01       	movw	r16, r30
 a88:	60 91 a2 01 	lds	r22, 0x01A2	; 0x8001a2 <__iob+0x2>
 a8c:	70 91 a3 01 	lds	r23, 0x01A3	; 0x8001a3 <__iob+0x3>
 a90:	db 01       	movw	r26, r22
 a92:	18 96       	adiw	r26, 0x08	; 8
 a94:	ed 91       	ld	r30, X+
 a96:	fc 91       	ld	r31, X
 a98:	19 97       	sbiw	r26, 0x09	; 9
 a9a:	88 23       	and	r24, r24
 a9c:	31 f0       	breq	.+12     	; 0xaaa <puts+0x44>
 a9e:	09 95       	icall
 aa0:	89 2b       	or	r24, r25
 aa2:	79 f3       	breq	.-34     	; 0xa82 <puts+0x1c>
 aa4:	df ef       	ldi	r29, 0xFF	; 255
 aa6:	cf ef       	ldi	r28, 0xFF	; 255
 aa8:	ec cf       	rjmp	.-40     	; 0xa82 <puts+0x1c>
 aaa:	8a e0       	ldi	r24, 0x0A	; 10
 aac:	09 95       	icall
 aae:	89 2b       	or	r24, r25
 ab0:	19 f0       	breq	.+6      	; 0xab8 <puts+0x52>
 ab2:	8f ef       	ldi	r24, 0xFF	; 255
 ab4:	9f ef       	ldi	r25, 0xFF	; 255
 ab6:	02 c0       	rjmp	.+4      	; 0xabc <puts+0x56>
 ab8:	8d 2f       	mov	r24, r29
 aba:	9c 2f       	mov	r25, r28
 abc:	df 91       	pop	r29
 abe:	cf 91       	pop	r28
 ac0:	1f 91       	pop	r17
 ac2:	0f 91       	pop	r16
 ac4:	08 95       	ret

00000ac6 <vfprintf>:
 ac6:	ab e0       	ldi	r26, 0x0B	; 11
 ac8:	b0 e0       	ldi	r27, 0x00	; 0
 aca:	e9 e6       	ldi	r30, 0x69	; 105
 acc:	f5 e0       	ldi	r31, 0x05	; 5
 ace:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <__prologue_saves__>
 ad2:	6c 01       	movw	r12, r24
 ad4:	7b 01       	movw	r14, r22
 ad6:	8a 01       	movw	r16, r20
 ad8:	fc 01       	movw	r30, r24
 ada:	17 82       	std	Z+7, r1	; 0x07
 adc:	16 82       	std	Z+6, r1	; 0x06
 ade:	83 81       	ldd	r24, Z+3	; 0x03
 ae0:	81 ff       	sbrs	r24, 1
 ae2:	cc c1       	rjmp	.+920    	; 0xe7c <vfprintf+0x3b6>
 ae4:	ce 01       	movw	r24, r28
 ae6:	01 96       	adiw	r24, 0x01	; 1
 ae8:	3c 01       	movw	r6, r24
 aea:	f6 01       	movw	r30, r12
 aec:	93 81       	ldd	r25, Z+3	; 0x03
 aee:	f7 01       	movw	r30, r14
 af0:	93 fd       	sbrc	r25, 3
 af2:	85 91       	lpm	r24, Z+
 af4:	93 ff       	sbrs	r25, 3
 af6:	81 91       	ld	r24, Z+
 af8:	7f 01       	movw	r14, r30
 afa:	88 23       	and	r24, r24
 afc:	09 f4       	brne	.+2      	; 0xb00 <vfprintf+0x3a>
 afe:	ba c1       	rjmp	.+884    	; 0xe74 <vfprintf+0x3ae>
 b00:	85 32       	cpi	r24, 0x25	; 37
 b02:	39 f4       	brne	.+14     	; 0xb12 <vfprintf+0x4c>
 b04:	93 fd       	sbrc	r25, 3
 b06:	85 91       	lpm	r24, Z+
 b08:	93 ff       	sbrs	r25, 3
 b0a:	81 91       	ld	r24, Z+
 b0c:	7f 01       	movw	r14, r30
 b0e:	85 32       	cpi	r24, 0x25	; 37
 b10:	29 f4       	brne	.+10     	; 0xb1c <vfprintf+0x56>
 b12:	b6 01       	movw	r22, r12
 b14:	90 e0       	ldi	r25, 0x00	; 0
 b16:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 b1a:	e7 cf       	rjmp	.-50     	; 0xaea <vfprintf+0x24>
 b1c:	91 2c       	mov	r9, r1
 b1e:	21 2c       	mov	r2, r1
 b20:	31 2c       	mov	r3, r1
 b22:	ff e1       	ldi	r31, 0x1F	; 31
 b24:	f3 15       	cp	r31, r3
 b26:	d8 f0       	brcs	.+54     	; 0xb5e <vfprintf+0x98>
 b28:	8b 32       	cpi	r24, 0x2B	; 43
 b2a:	79 f0       	breq	.+30     	; 0xb4a <vfprintf+0x84>
 b2c:	38 f4       	brcc	.+14     	; 0xb3c <vfprintf+0x76>
 b2e:	80 32       	cpi	r24, 0x20	; 32
 b30:	79 f0       	breq	.+30     	; 0xb50 <vfprintf+0x8a>
 b32:	83 32       	cpi	r24, 0x23	; 35
 b34:	a1 f4       	brne	.+40     	; 0xb5e <vfprintf+0x98>
 b36:	23 2d       	mov	r18, r3
 b38:	20 61       	ori	r18, 0x10	; 16
 b3a:	1d c0       	rjmp	.+58     	; 0xb76 <vfprintf+0xb0>
 b3c:	8d 32       	cpi	r24, 0x2D	; 45
 b3e:	61 f0       	breq	.+24     	; 0xb58 <vfprintf+0x92>
 b40:	80 33       	cpi	r24, 0x30	; 48
 b42:	69 f4       	brne	.+26     	; 0xb5e <vfprintf+0x98>
 b44:	23 2d       	mov	r18, r3
 b46:	21 60       	ori	r18, 0x01	; 1
 b48:	16 c0       	rjmp	.+44     	; 0xb76 <vfprintf+0xb0>
 b4a:	83 2d       	mov	r24, r3
 b4c:	82 60       	ori	r24, 0x02	; 2
 b4e:	38 2e       	mov	r3, r24
 b50:	e3 2d       	mov	r30, r3
 b52:	e4 60       	ori	r30, 0x04	; 4
 b54:	3e 2e       	mov	r3, r30
 b56:	2a c0       	rjmp	.+84     	; 0xbac <vfprintf+0xe6>
 b58:	f3 2d       	mov	r31, r3
 b5a:	f8 60       	ori	r31, 0x08	; 8
 b5c:	1d c0       	rjmp	.+58     	; 0xb98 <vfprintf+0xd2>
 b5e:	37 fc       	sbrc	r3, 7
 b60:	2d c0       	rjmp	.+90     	; 0xbbc <vfprintf+0xf6>
 b62:	20 ed       	ldi	r18, 0xD0	; 208
 b64:	28 0f       	add	r18, r24
 b66:	2a 30       	cpi	r18, 0x0A	; 10
 b68:	40 f0       	brcs	.+16     	; 0xb7a <vfprintf+0xb4>
 b6a:	8e 32       	cpi	r24, 0x2E	; 46
 b6c:	b9 f4       	brne	.+46     	; 0xb9c <vfprintf+0xd6>
 b6e:	36 fc       	sbrc	r3, 6
 b70:	81 c1       	rjmp	.+770    	; 0xe74 <vfprintf+0x3ae>
 b72:	23 2d       	mov	r18, r3
 b74:	20 64       	ori	r18, 0x40	; 64
 b76:	32 2e       	mov	r3, r18
 b78:	19 c0       	rjmp	.+50     	; 0xbac <vfprintf+0xe6>
 b7a:	36 fe       	sbrs	r3, 6
 b7c:	06 c0       	rjmp	.+12     	; 0xb8a <vfprintf+0xc4>
 b7e:	8a e0       	ldi	r24, 0x0A	; 10
 b80:	98 9e       	mul	r9, r24
 b82:	20 0d       	add	r18, r0
 b84:	11 24       	eor	r1, r1
 b86:	92 2e       	mov	r9, r18
 b88:	11 c0       	rjmp	.+34     	; 0xbac <vfprintf+0xe6>
 b8a:	ea e0       	ldi	r30, 0x0A	; 10
 b8c:	2e 9e       	mul	r2, r30
 b8e:	20 0d       	add	r18, r0
 b90:	11 24       	eor	r1, r1
 b92:	22 2e       	mov	r2, r18
 b94:	f3 2d       	mov	r31, r3
 b96:	f0 62       	ori	r31, 0x20	; 32
 b98:	3f 2e       	mov	r3, r31
 b9a:	08 c0       	rjmp	.+16     	; 0xbac <vfprintf+0xe6>
 b9c:	8c 36       	cpi	r24, 0x6C	; 108
 b9e:	21 f4       	brne	.+8      	; 0xba8 <vfprintf+0xe2>
 ba0:	83 2d       	mov	r24, r3
 ba2:	80 68       	ori	r24, 0x80	; 128
 ba4:	38 2e       	mov	r3, r24
 ba6:	02 c0       	rjmp	.+4      	; 0xbac <vfprintf+0xe6>
 ba8:	88 36       	cpi	r24, 0x68	; 104
 baa:	41 f4       	brne	.+16     	; 0xbbc <vfprintf+0xf6>
 bac:	f7 01       	movw	r30, r14
 bae:	93 fd       	sbrc	r25, 3
 bb0:	85 91       	lpm	r24, Z+
 bb2:	93 ff       	sbrs	r25, 3
 bb4:	81 91       	ld	r24, Z+
 bb6:	7f 01       	movw	r14, r30
 bb8:	81 11       	cpse	r24, r1
 bba:	b3 cf       	rjmp	.-154    	; 0xb22 <vfprintf+0x5c>
 bbc:	98 2f       	mov	r25, r24
 bbe:	9f 7d       	andi	r25, 0xDF	; 223
 bc0:	95 54       	subi	r25, 0x45	; 69
 bc2:	93 30       	cpi	r25, 0x03	; 3
 bc4:	28 f4       	brcc	.+10     	; 0xbd0 <vfprintf+0x10a>
 bc6:	0c 5f       	subi	r16, 0xFC	; 252
 bc8:	1f 4f       	sbci	r17, 0xFF	; 255
 bca:	9f e3       	ldi	r25, 0x3F	; 63
 bcc:	99 83       	std	Y+1, r25	; 0x01
 bce:	0d c0       	rjmp	.+26     	; 0xbea <vfprintf+0x124>
 bd0:	83 36       	cpi	r24, 0x63	; 99
 bd2:	31 f0       	breq	.+12     	; 0xbe0 <vfprintf+0x11a>
 bd4:	83 37       	cpi	r24, 0x73	; 115
 bd6:	71 f0       	breq	.+28     	; 0xbf4 <vfprintf+0x12e>
 bd8:	83 35       	cpi	r24, 0x53	; 83
 bda:	09 f0       	breq	.+2      	; 0xbde <vfprintf+0x118>
 bdc:	59 c0       	rjmp	.+178    	; 0xc90 <vfprintf+0x1ca>
 bde:	21 c0       	rjmp	.+66     	; 0xc22 <vfprintf+0x15c>
 be0:	f8 01       	movw	r30, r16
 be2:	80 81       	ld	r24, Z
 be4:	89 83       	std	Y+1, r24	; 0x01
 be6:	0e 5f       	subi	r16, 0xFE	; 254
 be8:	1f 4f       	sbci	r17, 0xFF	; 255
 bea:	88 24       	eor	r8, r8
 bec:	83 94       	inc	r8
 bee:	91 2c       	mov	r9, r1
 bf0:	53 01       	movw	r10, r6
 bf2:	13 c0       	rjmp	.+38     	; 0xc1a <vfprintf+0x154>
 bf4:	28 01       	movw	r4, r16
 bf6:	f2 e0       	ldi	r31, 0x02	; 2
 bf8:	4f 0e       	add	r4, r31
 bfa:	51 1c       	adc	r5, r1
 bfc:	f8 01       	movw	r30, r16
 bfe:	a0 80       	ld	r10, Z
 c00:	b1 80       	ldd	r11, Z+1	; 0x01
 c02:	36 fe       	sbrs	r3, 6
 c04:	03 c0       	rjmp	.+6      	; 0xc0c <vfprintf+0x146>
 c06:	69 2d       	mov	r22, r9
 c08:	70 e0       	ldi	r23, 0x00	; 0
 c0a:	02 c0       	rjmp	.+4      	; 0xc10 <vfprintf+0x14a>
 c0c:	6f ef       	ldi	r22, 0xFF	; 255
 c0e:	7f ef       	ldi	r23, 0xFF	; 255
 c10:	c5 01       	movw	r24, r10
 c12:	0e 94 4f 07 	call	0xe9e	; 0xe9e <strnlen>
 c16:	4c 01       	movw	r8, r24
 c18:	82 01       	movw	r16, r4
 c1a:	f3 2d       	mov	r31, r3
 c1c:	ff 77       	andi	r31, 0x7F	; 127
 c1e:	3f 2e       	mov	r3, r31
 c20:	16 c0       	rjmp	.+44     	; 0xc4e <vfprintf+0x188>
 c22:	28 01       	movw	r4, r16
 c24:	22 e0       	ldi	r18, 0x02	; 2
 c26:	42 0e       	add	r4, r18
 c28:	51 1c       	adc	r5, r1
 c2a:	f8 01       	movw	r30, r16
 c2c:	a0 80       	ld	r10, Z
 c2e:	b1 80       	ldd	r11, Z+1	; 0x01
 c30:	36 fe       	sbrs	r3, 6
 c32:	03 c0       	rjmp	.+6      	; 0xc3a <vfprintf+0x174>
 c34:	69 2d       	mov	r22, r9
 c36:	70 e0       	ldi	r23, 0x00	; 0
 c38:	02 c0       	rjmp	.+4      	; 0xc3e <vfprintf+0x178>
 c3a:	6f ef       	ldi	r22, 0xFF	; 255
 c3c:	7f ef       	ldi	r23, 0xFF	; 255
 c3e:	c5 01       	movw	r24, r10
 c40:	0e 94 44 07 	call	0xe88	; 0xe88 <strnlen_P>
 c44:	4c 01       	movw	r8, r24
 c46:	f3 2d       	mov	r31, r3
 c48:	f0 68       	ori	r31, 0x80	; 128
 c4a:	3f 2e       	mov	r3, r31
 c4c:	82 01       	movw	r16, r4
 c4e:	33 fc       	sbrc	r3, 3
 c50:	1b c0       	rjmp	.+54     	; 0xc88 <vfprintf+0x1c2>
 c52:	82 2d       	mov	r24, r2
 c54:	90 e0       	ldi	r25, 0x00	; 0
 c56:	88 16       	cp	r8, r24
 c58:	99 06       	cpc	r9, r25
 c5a:	b0 f4       	brcc	.+44     	; 0xc88 <vfprintf+0x1c2>
 c5c:	b6 01       	movw	r22, r12
 c5e:	80 e2       	ldi	r24, 0x20	; 32
 c60:	90 e0       	ldi	r25, 0x00	; 0
 c62:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 c66:	2a 94       	dec	r2
 c68:	f4 cf       	rjmp	.-24     	; 0xc52 <vfprintf+0x18c>
 c6a:	f5 01       	movw	r30, r10
 c6c:	37 fc       	sbrc	r3, 7
 c6e:	85 91       	lpm	r24, Z+
 c70:	37 fe       	sbrs	r3, 7
 c72:	81 91       	ld	r24, Z+
 c74:	5f 01       	movw	r10, r30
 c76:	b6 01       	movw	r22, r12
 c78:	90 e0       	ldi	r25, 0x00	; 0
 c7a:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 c7e:	21 10       	cpse	r2, r1
 c80:	2a 94       	dec	r2
 c82:	21 e0       	ldi	r18, 0x01	; 1
 c84:	82 1a       	sub	r8, r18
 c86:	91 08       	sbc	r9, r1
 c88:	81 14       	cp	r8, r1
 c8a:	91 04       	cpc	r9, r1
 c8c:	71 f7       	brne	.-36     	; 0xc6a <vfprintf+0x1a4>
 c8e:	e8 c0       	rjmp	.+464    	; 0xe60 <vfprintf+0x39a>
 c90:	84 36       	cpi	r24, 0x64	; 100
 c92:	11 f0       	breq	.+4      	; 0xc98 <vfprintf+0x1d2>
 c94:	89 36       	cpi	r24, 0x69	; 105
 c96:	41 f5       	brne	.+80     	; 0xce8 <vfprintf+0x222>
 c98:	f8 01       	movw	r30, r16
 c9a:	37 fe       	sbrs	r3, 7
 c9c:	07 c0       	rjmp	.+14     	; 0xcac <vfprintf+0x1e6>
 c9e:	60 81       	ld	r22, Z
 ca0:	71 81       	ldd	r23, Z+1	; 0x01
 ca2:	82 81       	ldd	r24, Z+2	; 0x02
 ca4:	93 81       	ldd	r25, Z+3	; 0x03
 ca6:	0c 5f       	subi	r16, 0xFC	; 252
 ca8:	1f 4f       	sbci	r17, 0xFF	; 255
 caa:	08 c0       	rjmp	.+16     	; 0xcbc <vfprintf+0x1f6>
 cac:	60 81       	ld	r22, Z
 cae:	71 81       	ldd	r23, Z+1	; 0x01
 cb0:	07 2e       	mov	r0, r23
 cb2:	00 0c       	add	r0, r0
 cb4:	88 0b       	sbc	r24, r24
 cb6:	99 0b       	sbc	r25, r25
 cb8:	0e 5f       	subi	r16, 0xFE	; 254
 cba:	1f 4f       	sbci	r17, 0xFF	; 255
 cbc:	f3 2d       	mov	r31, r3
 cbe:	ff 76       	andi	r31, 0x6F	; 111
 cc0:	3f 2e       	mov	r3, r31
 cc2:	97 ff       	sbrs	r25, 7
 cc4:	09 c0       	rjmp	.+18     	; 0xcd8 <vfprintf+0x212>
 cc6:	90 95       	com	r25
 cc8:	80 95       	com	r24
 cca:	70 95       	com	r23
 ccc:	61 95       	neg	r22
 cce:	7f 4f       	sbci	r23, 0xFF	; 255
 cd0:	8f 4f       	sbci	r24, 0xFF	; 255
 cd2:	9f 4f       	sbci	r25, 0xFF	; 255
 cd4:	f0 68       	ori	r31, 0x80	; 128
 cd6:	3f 2e       	mov	r3, r31
 cd8:	2a e0       	ldi	r18, 0x0A	; 10
 cda:	30 e0       	ldi	r19, 0x00	; 0
 cdc:	a3 01       	movw	r20, r6
 cde:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__ultoa_invert>
 ce2:	88 2e       	mov	r8, r24
 ce4:	86 18       	sub	r8, r6
 ce6:	45 c0       	rjmp	.+138    	; 0xd72 <vfprintf+0x2ac>
 ce8:	85 37       	cpi	r24, 0x75	; 117
 cea:	31 f4       	brne	.+12     	; 0xcf8 <vfprintf+0x232>
 cec:	23 2d       	mov	r18, r3
 cee:	2f 7e       	andi	r18, 0xEF	; 239
 cf0:	b2 2e       	mov	r11, r18
 cf2:	2a e0       	ldi	r18, 0x0A	; 10
 cf4:	30 e0       	ldi	r19, 0x00	; 0
 cf6:	25 c0       	rjmp	.+74     	; 0xd42 <vfprintf+0x27c>
 cf8:	93 2d       	mov	r25, r3
 cfa:	99 7f       	andi	r25, 0xF9	; 249
 cfc:	b9 2e       	mov	r11, r25
 cfe:	8f 36       	cpi	r24, 0x6F	; 111
 d00:	c1 f0       	breq	.+48     	; 0xd32 <vfprintf+0x26c>
 d02:	18 f4       	brcc	.+6      	; 0xd0a <vfprintf+0x244>
 d04:	88 35       	cpi	r24, 0x58	; 88
 d06:	79 f0       	breq	.+30     	; 0xd26 <vfprintf+0x260>
 d08:	b5 c0       	rjmp	.+362    	; 0xe74 <vfprintf+0x3ae>
 d0a:	80 37       	cpi	r24, 0x70	; 112
 d0c:	19 f0       	breq	.+6      	; 0xd14 <vfprintf+0x24e>
 d0e:	88 37       	cpi	r24, 0x78	; 120
 d10:	21 f0       	breq	.+8      	; 0xd1a <vfprintf+0x254>
 d12:	b0 c0       	rjmp	.+352    	; 0xe74 <vfprintf+0x3ae>
 d14:	e9 2f       	mov	r30, r25
 d16:	e0 61       	ori	r30, 0x10	; 16
 d18:	be 2e       	mov	r11, r30
 d1a:	b4 fe       	sbrs	r11, 4
 d1c:	0d c0       	rjmp	.+26     	; 0xd38 <vfprintf+0x272>
 d1e:	fb 2d       	mov	r31, r11
 d20:	f4 60       	ori	r31, 0x04	; 4
 d22:	bf 2e       	mov	r11, r31
 d24:	09 c0       	rjmp	.+18     	; 0xd38 <vfprintf+0x272>
 d26:	34 fe       	sbrs	r3, 4
 d28:	0a c0       	rjmp	.+20     	; 0xd3e <vfprintf+0x278>
 d2a:	29 2f       	mov	r18, r25
 d2c:	26 60       	ori	r18, 0x06	; 6
 d2e:	b2 2e       	mov	r11, r18
 d30:	06 c0       	rjmp	.+12     	; 0xd3e <vfprintf+0x278>
 d32:	28 e0       	ldi	r18, 0x08	; 8
 d34:	30 e0       	ldi	r19, 0x00	; 0
 d36:	05 c0       	rjmp	.+10     	; 0xd42 <vfprintf+0x27c>
 d38:	20 e1       	ldi	r18, 0x10	; 16
 d3a:	30 e0       	ldi	r19, 0x00	; 0
 d3c:	02 c0       	rjmp	.+4      	; 0xd42 <vfprintf+0x27c>
 d3e:	20 e1       	ldi	r18, 0x10	; 16
 d40:	32 e0       	ldi	r19, 0x02	; 2
 d42:	f8 01       	movw	r30, r16
 d44:	b7 fe       	sbrs	r11, 7
 d46:	07 c0       	rjmp	.+14     	; 0xd56 <vfprintf+0x290>
 d48:	60 81       	ld	r22, Z
 d4a:	71 81       	ldd	r23, Z+1	; 0x01
 d4c:	82 81       	ldd	r24, Z+2	; 0x02
 d4e:	93 81       	ldd	r25, Z+3	; 0x03
 d50:	0c 5f       	subi	r16, 0xFC	; 252
 d52:	1f 4f       	sbci	r17, 0xFF	; 255
 d54:	06 c0       	rjmp	.+12     	; 0xd62 <vfprintf+0x29c>
 d56:	60 81       	ld	r22, Z
 d58:	71 81       	ldd	r23, Z+1	; 0x01
 d5a:	80 e0       	ldi	r24, 0x00	; 0
 d5c:	90 e0       	ldi	r25, 0x00	; 0
 d5e:	0e 5f       	subi	r16, 0xFE	; 254
 d60:	1f 4f       	sbci	r17, 0xFF	; 255
 d62:	a3 01       	movw	r20, r6
 d64:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__ultoa_invert>
 d68:	88 2e       	mov	r8, r24
 d6a:	86 18       	sub	r8, r6
 d6c:	fb 2d       	mov	r31, r11
 d6e:	ff 77       	andi	r31, 0x7F	; 127
 d70:	3f 2e       	mov	r3, r31
 d72:	36 fe       	sbrs	r3, 6
 d74:	0d c0       	rjmp	.+26     	; 0xd90 <vfprintf+0x2ca>
 d76:	23 2d       	mov	r18, r3
 d78:	2e 7f       	andi	r18, 0xFE	; 254
 d7a:	a2 2e       	mov	r10, r18
 d7c:	89 14       	cp	r8, r9
 d7e:	58 f4       	brcc	.+22     	; 0xd96 <vfprintf+0x2d0>
 d80:	34 fe       	sbrs	r3, 4
 d82:	0b c0       	rjmp	.+22     	; 0xd9a <vfprintf+0x2d4>
 d84:	32 fc       	sbrc	r3, 2
 d86:	09 c0       	rjmp	.+18     	; 0xd9a <vfprintf+0x2d4>
 d88:	83 2d       	mov	r24, r3
 d8a:	8e 7e       	andi	r24, 0xEE	; 238
 d8c:	a8 2e       	mov	r10, r24
 d8e:	05 c0       	rjmp	.+10     	; 0xd9a <vfprintf+0x2d4>
 d90:	b8 2c       	mov	r11, r8
 d92:	a3 2c       	mov	r10, r3
 d94:	03 c0       	rjmp	.+6      	; 0xd9c <vfprintf+0x2d6>
 d96:	b8 2c       	mov	r11, r8
 d98:	01 c0       	rjmp	.+2      	; 0xd9c <vfprintf+0x2d6>
 d9a:	b9 2c       	mov	r11, r9
 d9c:	a4 fe       	sbrs	r10, 4
 d9e:	0f c0       	rjmp	.+30     	; 0xdbe <vfprintf+0x2f8>
 da0:	fe 01       	movw	r30, r28
 da2:	e8 0d       	add	r30, r8
 da4:	f1 1d       	adc	r31, r1
 da6:	80 81       	ld	r24, Z
 da8:	80 33       	cpi	r24, 0x30	; 48
 daa:	21 f4       	brne	.+8      	; 0xdb4 <vfprintf+0x2ee>
 dac:	9a 2d       	mov	r25, r10
 dae:	99 7e       	andi	r25, 0xE9	; 233
 db0:	a9 2e       	mov	r10, r25
 db2:	09 c0       	rjmp	.+18     	; 0xdc6 <vfprintf+0x300>
 db4:	a2 fe       	sbrs	r10, 2
 db6:	06 c0       	rjmp	.+12     	; 0xdc4 <vfprintf+0x2fe>
 db8:	b3 94       	inc	r11
 dba:	b3 94       	inc	r11
 dbc:	04 c0       	rjmp	.+8      	; 0xdc6 <vfprintf+0x300>
 dbe:	8a 2d       	mov	r24, r10
 dc0:	86 78       	andi	r24, 0x86	; 134
 dc2:	09 f0       	breq	.+2      	; 0xdc6 <vfprintf+0x300>
 dc4:	b3 94       	inc	r11
 dc6:	a3 fc       	sbrc	r10, 3
 dc8:	11 c0       	rjmp	.+34     	; 0xdec <vfprintf+0x326>
 dca:	a0 fe       	sbrs	r10, 0
 dcc:	06 c0       	rjmp	.+12     	; 0xdda <vfprintf+0x314>
 dce:	b2 14       	cp	r11, r2
 dd0:	88 f4       	brcc	.+34     	; 0xdf4 <vfprintf+0x32e>
 dd2:	28 0c       	add	r2, r8
 dd4:	92 2c       	mov	r9, r2
 dd6:	9b 18       	sub	r9, r11
 dd8:	0e c0       	rjmp	.+28     	; 0xdf6 <vfprintf+0x330>
 dda:	b2 14       	cp	r11, r2
 ddc:	60 f4       	brcc	.+24     	; 0xdf6 <vfprintf+0x330>
 dde:	b6 01       	movw	r22, r12
 de0:	80 e2       	ldi	r24, 0x20	; 32
 de2:	90 e0       	ldi	r25, 0x00	; 0
 de4:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 de8:	b3 94       	inc	r11
 dea:	f7 cf       	rjmp	.-18     	; 0xdda <vfprintf+0x314>
 dec:	b2 14       	cp	r11, r2
 dee:	18 f4       	brcc	.+6      	; 0xdf6 <vfprintf+0x330>
 df0:	2b 18       	sub	r2, r11
 df2:	02 c0       	rjmp	.+4      	; 0xdf8 <vfprintf+0x332>
 df4:	98 2c       	mov	r9, r8
 df6:	21 2c       	mov	r2, r1
 df8:	a4 fe       	sbrs	r10, 4
 dfa:	10 c0       	rjmp	.+32     	; 0xe1c <vfprintf+0x356>
 dfc:	b6 01       	movw	r22, r12
 dfe:	80 e3       	ldi	r24, 0x30	; 48
 e00:	90 e0       	ldi	r25, 0x00	; 0
 e02:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 e06:	a2 fe       	sbrs	r10, 2
 e08:	17 c0       	rjmp	.+46     	; 0xe38 <vfprintf+0x372>
 e0a:	a1 fc       	sbrc	r10, 1
 e0c:	03 c0       	rjmp	.+6      	; 0xe14 <vfprintf+0x34e>
 e0e:	88 e7       	ldi	r24, 0x78	; 120
 e10:	90 e0       	ldi	r25, 0x00	; 0
 e12:	02 c0       	rjmp	.+4      	; 0xe18 <vfprintf+0x352>
 e14:	88 e5       	ldi	r24, 0x58	; 88
 e16:	90 e0       	ldi	r25, 0x00	; 0
 e18:	b6 01       	movw	r22, r12
 e1a:	0c c0       	rjmp	.+24     	; 0xe34 <vfprintf+0x36e>
 e1c:	8a 2d       	mov	r24, r10
 e1e:	86 78       	andi	r24, 0x86	; 134
 e20:	59 f0       	breq	.+22     	; 0xe38 <vfprintf+0x372>
 e22:	a1 fe       	sbrs	r10, 1
 e24:	02 c0       	rjmp	.+4      	; 0xe2a <vfprintf+0x364>
 e26:	8b e2       	ldi	r24, 0x2B	; 43
 e28:	01 c0       	rjmp	.+2      	; 0xe2c <vfprintf+0x366>
 e2a:	80 e2       	ldi	r24, 0x20	; 32
 e2c:	a7 fc       	sbrc	r10, 7
 e2e:	8d e2       	ldi	r24, 0x2D	; 45
 e30:	b6 01       	movw	r22, r12
 e32:	90 e0       	ldi	r25, 0x00	; 0
 e34:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 e38:	89 14       	cp	r8, r9
 e3a:	38 f4       	brcc	.+14     	; 0xe4a <vfprintf+0x384>
 e3c:	b6 01       	movw	r22, r12
 e3e:	80 e3       	ldi	r24, 0x30	; 48
 e40:	90 e0       	ldi	r25, 0x00	; 0
 e42:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 e46:	9a 94       	dec	r9
 e48:	f7 cf       	rjmp	.-18     	; 0xe38 <vfprintf+0x372>
 e4a:	8a 94       	dec	r8
 e4c:	f3 01       	movw	r30, r6
 e4e:	e8 0d       	add	r30, r8
 e50:	f1 1d       	adc	r31, r1
 e52:	80 81       	ld	r24, Z
 e54:	b6 01       	movw	r22, r12
 e56:	90 e0       	ldi	r25, 0x00	; 0
 e58:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 e5c:	81 10       	cpse	r8, r1
 e5e:	f5 cf       	rjmp	.-22     	; 0xe4a <vfprintf+0x384>
 e60:	22 20       	and	r2, r2
 e62:	09 f4       	brne	.+2      	; 0xe66 <vfprintf+0x3a0>
 e64:	42 ce       	rjmp	.-892    	; 0xaea <vfprintf+0x24>
 e66:	b6 01       	movw	r22, r12
 e68:	80 e2       	ldi	r24, 0x20	; 32
 e6a:	90 e0       	ldi	r25, 0x00	; 0
 e6c:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <fputc>
 e70:	2a 94       	dec	r2
 e72:	f6 cf       	rjmp	.-20     	; 0xe60 <vfprintf+0x39a>
 e74:	f6 01       	movw	r30, r12
 e76:	86 81       	ldd	r24, Z+6	; 0x06
 e78:	97 81       	ldd	r25, Z+7	; 0x07
 e7a:	02 c0       	rjmp	.+4      	; 0xe80 <vfprintf+0x3ba>
 e7c:	8f ef       	ldi	r24, 0xFF	; 255
 e7e:	9f ef       	ldi	r25, 0xFF	; 255
 e80:	2b 96       	adiw	r28, 0x0b	; 11
 e82:	e2 e1       	ldi	r30, 0x12	; 18
 e84:	0c 94 d4 07 	jmp	0xfa8	; 0xfa8 <__epilogue_restores__>

00000e88 <strnlen_P>:
 e88:	fc 01       	movw	r30, r24
 e8a:	05 90       	lpm	r0, Z+
 e8c:	61 50       	subi	r22, 0x01	; 1
 e8e:	70 40       	sbci	r23, 0x00	; 0
 e90:	01 10       	cpse	r0, r1
 e92:	d8 f7       	brcc	.-10     	; 0xe8a <strnlen_P+0x2>
 e94:	80 95       	com	r24
 e96:	90 95       	com	r25
 e98:	8e 0f       	add	r24, r30
 e9a:	9f 1f       	adc	r25, r31
 e9c:	08 95       	ret

00000e9e <strnlen>:
 e9e:	fc 01       	movw	r30, r24
 ea0:	61 50       	subi	r22, 0x01	; 1
 ea2:	70 40       	sbci	r23, 0x00	; 0
 ea4:	01 90       	ld	r0, Z+
 ea6:	01 10       	cpse	r0, r1
 ea8:	d8 f7       	brcc	.-10     	; 0xea0 <strnlen+0x2>
 eaa:	80 95       	com	r24
 eac:	90 95       	com	r25
 eae:	8e 0f       	add	r24, r30
 eb0:	9f 1f       	adc	r25, r31
 eb2:	08 95       	ret

00000eb4 <__ultoa_invert>:
 eb4:	fa 01       	movw	r30, r20
 eb6:	aa 27       	eor	r26, r26
 eb8:	28 30       	cpi	r18, 0x08	; 8
 eba:	51 f1       	breq	.+84     	; 0xf10 <__ultoa_invert+0x5c>
 ebc:	20 31       	cpi	r18, 0x10	; 16
 ebe:	81 f1       	breq	.+96     	; 0xf20 <__ultoa_invert+0x6c>
 ec0:	e8 94       	clt
 ec2:	6f 93       	push	r22
 ec4:	6e 7f       	andi	r22, 0xFE	; 254
 ec6:	6e 5f       	subi	r22, 0xFE	; 254
 ec8:	7f 4f       	sbci	r23, 0xFF	; 255
 eca:	8f 4f       	sbci	r24, 0xFF	; 255
 ecc:	9f 4f       	sbci	r25, 0xFF	; 255
 ece:	af 4f       	sbci	r26, 0xFF	; 255
 ed0:	b1 e0       	ldi	r27, 0x01	; 1
 ed2:	3e d0       	rcall	.+124    	; 0xf50 <__ultoa_invert+0x9c>
 ed4:	b4 e0       	ldi	r27, 0x04	; 4
 ed6:	3c d0       	rcall	.+120    	; 0xf50 <__ultoa_invert+0x9c>
 ed8:	67 0f       	add	r22, r23
 eda:	78 1f       	adc	r23, r24
 edc:	89 1f       	adc	r24, r25
 ede:	9a 1f       	adc	r25, r26
 ee0:	a1 1d       	adc	r26, r1
 ee2:	68 0f       	add	r22, r24
 ee4:	79 1f       	adc	r23, r25
 ee6:	8a 1f       	adc	r24, r26
 ee8:	91 1d       	adc	r25, r1
 eea:	a1 1d       	adc	r26, r1
 eec:	6a 0f       	add	r22, r26
 eee:	71 1d       	adc	r23, r1
 ef0:	81 1d       	adc	r24, r1
 ef2:	91 1d       	adc	r25, r1
 ef4:	a1 1d       	adc	r26, r1
 ef6:	20 d0       	rcall	.+64     	; 0xf38 <__ultoa_invert+0x84>
 ef8:	09 f4       	brne	.+2      	; 0xefc <__ultoa_invert+0x48>
 efa:	68 94       	set
 efc:	3f 91       	pop	r19
 efe:	2a e0       	ldi	r18, 0x0A	; 10
 f00:	26 9f       	mul	r18, r22
 f02:	11 24       	eor	r1, r1
 f04:	30 19       	sub	r19, r0
 f06:	30 5d       	subi	r19, 0xD0	; 208
 f08:	31 93       	st	Z+, r19
 f0a:	de f6       	brtc	.-74     	; 0xec2 <__ultoa_invert+0xe>
 f0c:	cf 01       	movw	r24, r30
 f0e:	08 95       	ret
 f10:	46 2f       	mov	r20, r22
 f12:	47 70       	andi	r20, 0x07	; 7
 f14:	40 5d       	subi	r20, 0xD0	; 208
 f16:	41 93       	st	Z+, r20
 f18:	b3 e0       	ldi	r27, 0x03	; 3
 f1a:	0f d0       	rcall	.+30     	; 0xf3a <__ultoa_invert+0x86>
 f1c:	c9 f7       	brne	.-14     	; 0xf10 <__ultoa_invert+0x5c>
 f1e:	f6 cf       	rjmp	.-20     	; 0xf0c <__ultoa_invert+0x58>
 f20:	46 2f       	mov	r20, r22
 f22:	4f 70       	andi	r20, 0x0F	; 15
 f24:	40 5d       	subi	r20, 0xD0	; 208
 f26:	4a 33       	cpi	r20, 0x3A	; 58
 f28:	18 f0       	brcs	.+6      	; 0xf30 <__ultoa_invert+0x7c>
 f2a:	49 5d       	subi	r20, 0xD9	; 217
 f2c:	31 fd       	sbrc	r19, 1
 f2e:	40 52       	subi	r20, 0x20	; 32
 f30:	41 93       	st	Z+, r20
 f32:	02 d0       	rcall	.+4      	; 0xf38 <__ultoa_invert+0x84>
 f34:	a9 f7       	brne	.-22     	; 0xf20 <__ultoa_invert+0x6c>
 f36:	ea cf       	rjmp	.-44     	; 0xf0c <__ultoa_invert+0x58>
 f38:	b4 e0       	ldi	r27, 0x04	; 4
 f3a:	a6 95       	lsr	r26
 f3c:	97 95       	ror	r25
 f3e:	87 95       	ror	r24
 f40:	77 95       	ror	r23
 f42:	67 95       	ror	r22
 f44:	ba 95       	dec	r27
 f46:	c9 f7       	brne	.-14     	; 0xf3a <__ultoa_invert+0x86>
 f48:	00 97       	sbiw	r24, 0x00	; 0
 f4a:	61 05       	cpc	r22, r1
 f4c:	71 05       	cpc	r23, r1
 f4e:	08 95       	ret
 f50:	9b 01       	movw	r18, r22
 f52:	ac 01       	movw	r20, r24
 f54:	0a 2e       	mov	r0, r26
 f56:	06 94       	lsr	r0
 f58:	57 95       	ror	r21
 f5a:	47 95       	ror	r20
 f5c:	37 95       	ror	r19
 f5e:	27 95       	ror	r18
 f60:	ba 95       	dec	r27
 f62:	c9 f7       	brne	.-14     	; 0xf56 <__ultoa_invert+0xa2>
 f64:	62 0f       	add	r22, r18
 f66:	73 1f       	adc	r23, r19
 f68:	84 1f       	adc	r24, r20
 f6a:	95 1f       	adc	r25, r21
 f6c:	a0 1d       	adc	r26, r0
 f6e:	08 95       	ret

00000f70 <__prologue_saves__>:
 f70:	2f 92       	push	r2
 f72:	3f 92       	push	r3
 f74:	4f 92       	push	r4
 f76:	5f 92       	push	r5
 f78:	6f 92       	push	r6
 f7a:	7f 92       	push	r7
 f7c:	8f 92       	push	r8
 f7e:	9f 92       	push	r9
 f80:	af 92       	push	r10
 f82:	bf 92       	push	r11
 f84:	cf 92       	push	r12
 f86:	df 92       	push	r13
 f88:	ef 92       	push	r14
 f8a:	ff 92       	push	r15
 f8c:	0f 93       	push	r16
 f8e:	1f 93       	push	r17
 f90:	cf 93       	push	r28
 f92:	df 93       	push	r29
 f94:	cd b7       	in	r28, 0x3d	; 61
 f96:	de b7       	in	r29, 0x3e	; 62
 f98:	ca 1b       	sub	r28, r26
 f9a:	db 0b       	sbc	r29, r27
 f9c:	0f b6       	in	r0, 0x3f	; 63
 f9e:	f8 94       	cli
 fa0:	de bf       	out	0x3e, r29	; 62
 fa2:	0f be       	out	0x3f, r0	; 63
 fa4:	cd bf       	out	0x3d, r28	; 61
 fa6:	09 94       	ijmp

00000fa8 <__epilogue_restores__>:
 fa8:	2a 88       	ldd	r2, Y+18	; 0x12
 faa:	39 88       	ldd	r3, Y+17	; 0x11
 fac:	48 88       	ldd	r4, Y+16	; 0x10
 fae:	5f 84       	ldd	r5, Y+15	; 0x0f
 fb0:	6e 84       	ldd	r6, Y+14	; 0x0e
 fb2:	7d 84       	ldd	r7, Y+13	; 0x0d
 fb4:	8c 84       	ldd	r8, Y+12	; 0x0c
 fb6:	9b 84       	ldd	r9, Y+11	; 0x0b
 fb8:	aa 84       	ldd	r10, Y+10	; 0x0a
 fba:	b9 84       	ldd	r11, Y+9	; 0x09
 fbc:	c8 84       	ldd	r12, Y+8	; 0x08
 fbe:	df 80       	ldd	r13, Y+7	; 0x07
 fc0:	ee 80       	ldd	r14, Y+6	; 0x06
 fc2:	fd 80       	ldd	r15, Y+5	; 0x05
 fc4:	0c 81       	ldd	r16, Y+4	; 0x04
 fc6:	1b 81       	ldd	r17, Y+3	; 0x03
 fc8:	aa 81       	ldd	r26, Y+2	; 0x02
 fca:	b9 81       	ldd	r27, Y+1	; 0x01
 fcc:	ce 0f       	add	r28, r30
 fce:	d1 1d       	adc	r29, r1
 fd0:	0f b6       	in	r0, 0x3f	; 63
 fd2:	f8 94       	cli
 fd4:	de bf       	out	0x3e, r29	; 62
 fd6:	0f be       	out	0x3f, r0	; 63
 fd8:	cd bf       	out	0x3d, r28	; 61
 fda:	ed 01       	movw	r28, r26
 fdc:	08 95       	ret

00000fde <_exit>:
 fde:	f8 94       	cli

00000fe0 <__stop_program>:
 fe0:	ff cf       	rjmp	.-2      	; 0xfe0 <__stop_program>
